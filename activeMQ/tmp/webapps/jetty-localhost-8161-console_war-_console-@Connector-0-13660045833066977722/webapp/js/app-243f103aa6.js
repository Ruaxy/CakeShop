var Bootstrap,__extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};return function(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}(),__spreadArrays=this&&this.__spreadArrays||function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var i=Array(e),r=0;for(t=0;t<n;t++)for(var o=arguments[t],a=0,s=o.length;a<s;a++,r++)i[r]=o[a];return i};!function(e){var t=function(){function e(e){this.$q=e,this.initFunctions=[]}return e.$inject=["$q"],e.prototype.registerInitFunction=function(e){this.initFunctions.push(e)},e.prototype.init=function(){return this.$q.all(this.initFunctions.map(function(e){return e()}))},e}();e.InitService=t}(Init||(Init={})),function(e){var t=function(){function e(e){this.initService=e,this.loading=!0}return e.$inject=["initService"],e.prototype.$onInit=function(){var e=this;this.initService.init().then(function(){return e.loading=!1})},e}();e.AppController=t,e.appComponent={template:'\n      <hawtio-loading loading="$ctrl.loading">\n        <page></page>\n      </hawtio-loading>\n    ',controller:t}}(App||(App={})),function(e){var t=function(){function e(e){this.configManager=e,this.productInfo=this.configManager.getAboutValue("productInfo")||[],this.productInfo=_.sortBy(this.productInfo,["name"])}return e.$inject=["configManager"],e.prototype.getTitle=function(){return this.configManager.getAboutValue("title")},e.prototype.getProductInfo=function(){return this.productInfo},e.prototype.addProductInfo=function(e,t){this.productInfo.push({name:e,value:t}),this.productInfo=_.sortBy(this.productInfo,["name"])},e.prototype.getCopyright=function(){return this.configManager.getAboutValue("copyright")},e.prototype.getImgSrc=function(){return this.configManager.getAboutValue("imgSrc")},e}();e.AboutService=t}(About||(About={})),function(e){function t(e){e.addProductInfo("Hawtio Core","4.15.0")}t.$inject=["aboutService"],e.configureAboutPage=t}(App||(App={})),function(t){var e=function(){function e(e,t){this.$rootScope=e,this.aboutService=t,this.open=!1}return e.$inject=["$rootScope","aboutService"],e.prototype.$onInit=function(){var e=this;this.$rootScope.$on(t.SHOW_ABOUT_EVENT,function(){e.open=!0})},Object.defineProperty(e.prototype,"title",{get:function(){return this.aboutService.getTitle()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"productInfo",{get:function(){return this.aboutService.getProductInfo()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"copyright",{get:function(){return this.aboutService.getCopyright()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"imgSrc",{get:function(){return this.aboutService.getImgSrc()},enumerable:!0,configurable:!0}),e.prototype.close=function(){this.open=!1},e}();t.AboutController=e,t.aboutComponent={templateUrl:"about/about.component.html",controller:e}}(About||(About={})),function(e){e.aboutModule=angular.module("hawtio-about",[]).component("about",e.aboutComponent).service("aboutService",e.AboutService).name}(About||(About={})),function(i){var r="public",e=function(){function e(e,t,n){this.postLoginTasks=e,this.preLogoutTasks=t,this.postLogoutTasks=n,this._username=r,this._password=null,this._token=null,this._loggedIn=!1}return e.$inject=["postLoginTasks","preLogoutTasks","postLogoutTasks"],e.prototype.login=function(e,t,n){this._username=e,this._password=t,n&&(this._token=n),this._loggedIn=!0,i.log.info("Logged in as",this._username),this.postLoginTasks.execute()},e.prototype.logout=function(){var t=this;this._loggedIn?this.preLogoutTasks.execute(function(){var e=t._username;t.clear(),t.postLogoutTasks.execute(function(){i.log.info("Logged out:",e)})}):i.log.debug("Not logged in")},e.prototype.clear=function(){this._username=r,this._password=null,this._token=null,this._loggedIn=!1},Object.defineProperty(e.prototype,"username",{get:function(){return this._username},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"password",{get:function(){return this._password},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"token",{get:function(){return this._token},set:function(e){this._token=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"loggedIn",{get:function(){return this._loggedIn},enumerable:!0,configurable:!0}),e.prototype.isDefaultUser=function(){return this._username===r},e}();i.AuthService=e}(Core||(Core={})),(Core||(Core={})).getBasicAuthHeader=function(e,t){var n=e+":"+t;return"Basic "+(n=window.btoa(n))},function(e){e.authModule=angular.module("hawtio-core-auth",[]).service("authService",e.AuthService).factory("userDetails",["authService",function(e){return e}]).name}(Core||(Core={})),function(e){var t=function(){function e(e){this._config=e}return Object.defineProperty(e.prototype,"config",{get:function(){return this._config},set:function(e){this._config=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"branding",{get:function(){return this._config.branding},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"login",{get:function(){return this._config.login},enumerable:!0,configurable:!0}),e.prototype.getBrandingValue=function(e){return this._config&&this._config.branding&&this._config.branding[e]?this._config.branding[e]:""},e.prototype.getAboutValue=function(e){return this._config&&this._config.about&&this._config.about[e]?this._config.about[e]:null},e.prototype.isRouteEnabled=function(e){return!this._config||!this._config.disabledRoutes||-1===this._config.disabledRoutes.indexOf(e)},e}();e.ConfigManager=t}(Core||(Core={})),function(e){var t=function(){function e(e){this.configManager=e}return e.$inject=["configManager"],e.prototype.$onInit=function(){this.srcValue=this.configManager.getBrandingValue(this.src),this.altValue=this.configManager.getBrandingValue(this.alt)},e}();e.BrandingImageController=t,e.brandingImageComponent={bindings:{class:"@",src:"@",alt:"@"},template:'<img class="{{$ctrl.class}}" src="{{$ctrl.srcValue}}" alt="{{$ctrl.altValue}}"/>',controller:t}}(Core||(Core={})),function(e){var t=function(){function e(e){this.configManager=e}return e.$inject=["configManager"],e.prototype.$onInit=function(){this.value=this.configManager.getBrandingValue(this.key)},e}();e.BrandingTextController=t,e.brandingTextComponent={bindings:{key:"@"},template:"{{$ctrl.value}}",controller:t}}(Core||(Core={})),function(i){function e(e){var t=window.hawtconfig,n=new i.ConfigManager(t);e.constant("configManager",n),delete window.hawtconfig}function t(e){var t=e.branding;t&&(t.appName&&(i.log.info("Updating title","-",t.appName),document.title=t.appName),t.css&&n("#branding",t.css),t.favicon&&n("#favicon",t.favicon))}function n(e,t){i.log.info("Updating href for",e,"-",t);var n=$(e);n.prop("disabled",!0),n.attr({href:t}),n.prop("disabled",!1)}e.$inject=["$provide"],t.$inject=["configManager"],i.configModule=angular.module("hawtio-config",[]).config(e).component("hawtioBrandingImage",i.brandingImageComponent).component("hawtioBrandingText",i.brandingTextComponent).run(t).name,i.applyBranding=t}(Core||(Core={})),function(i){i.configLoader=function(e){i.log.info("Loading hawtconfig.json..."),$.getJSON("hawtconfig.json").done(function(e){window.hawtconfig=e,i.log.info("hawtconfig.json loaded")}).fail(function(e,t,n){i.log.error("Error fetching 'hawtconfig.json'. Status: '"+t+"'. Error: '"+n+"'")}).always(function(){e()})}}(Core||(Core={})),function(e){var t=function(){function e(){}return e.prototype.toUpperCase=function(e){return _.upperCase(e)},e.prototype.toLowerCase=function(e){return _.lowerCase(e)},e.prototype.toSentenceCase=function(e){return _.capitalize(_.lowerCase(e))},e.prototype.toTitleCase=function(e){return _.startCase(_.lowerCase(e))},e}();e.HumanizeService=t}(Core||(Core={})),function(e){var t=function(){function e(){}return e.prototype.filter=function(e,i){var r=e;return i.appliedFilters&&i.appliedFilters.forEach(function(t){switch(_.find(i.fields,{id:t.id}).filterType){case"text":var n=new RegExp(t.value,"i");r=r.filter(function(e){return n.test(e[t.id])});break;case"number":r=r.filter(function(e){return e[t.id]===parseInt(t.value)});break;case"select":r=r.filter(function(e){return e[t.id]===t.value})}}),i.resultsCount=r.length,r},e}();e.PatternFlyService=t}(Core||(Core={})),function(e){e._module=angular.module("hawtio-core",[]).service("humanizeService",e.HumanizeService).service("patternFlyService",e.PatternFlyService),e.coreModule=e._module.name,e.log=Logger.get(e.coreModule)}(Core||(Core={})),function(e){if(Logger.setLevel(Logger.INFO),Logger.storagePrefix="hawtio",Logger.oldGet=Logger.get,Logger.loggers={},Logger.get=function(e){var t=Logger.oldGet(e);return Logger.loggers[e]=t},window.LogBuffer=100,"localStorage"in window){"logLevel"in window.localStorage||(window.localStorage.logLevel=JSON.stringify(Logger.INFO));var t=Logger.DEBUG;try{t=JSON.parse(window.localStorage.logLevel)}catch(e){console.error("Failed to parse log level setting: ",e)}if(Logger.setLevel(t),"showLog"in window.localStorage)if("true"===window.localStorage.showLog){var n=document.getElementById("log-panel");n&&n.setAttribute("style","bottom: 50%;")}if("logBuffer"in window.localStorage){var i=window.localStorage.logBuffer;window.LogBuffer=parseInt(i,10)}else window.localStorage.logBuffer=window.LogBuffer;if("childLoggers"in window.localStorage)try{JSON.parse(localStorage.childLoggers).forEach(function(e){Logger.get(e.name).setLevel(e.filterLevel)})}catch(e){}}var b=null;"console"in window&&(window.JSConsole=window.console,b=function(t,e){var n=window.JSConsole,i=n.log;if(e.name&&(t[0]="["+e.name+"] "+t[0]),e.level===Logger.WARN&&"warn"in n?i=n.warn:e.level===Logger.ERROR&&"error"in n?i=n.error:e.level===Logger.INFO&&"info"in n&&(i=n.info),i&&i.apply)try{i.apply(n,t)}catch(e){n.log(t)}}),Logger.getType=function(e){return _.toString(e).slice(8,-1)},Logger.isError=function(e){return e&&"Error"===Logger.getType(e)},Logger.isArray=function(e){return e&&"Array"===Logger.getType(e)},Logger.isObject=function(e){return e&&"Object"===Logger.getType(e)},Logger.isString=function(e){return e&&"String"===Logger.getType(e)},window.logInterceptors=[],Logger.formatStackTraceString=function(e){var t=e.split("\n");if(100<t.length){var n=t.length-40;t.splice(20,n,">>> snipped "+n+" frames <<<")}for(var i='<div class="log-stack-trace">\n',r=0;r<t.length;r++){var o=t[r];0!==o.trim().length&&(i=i+"<p>"+o+"</p>\n")}return i+="</div>\n"},Logger.setHandler(function(i,r){var e=void 0,t=void 0,n=document.getElementById("hawtio-log-panel");n&&(t=document.getElementById("hawtio-log-panel-statements"),e=document.createElement("li"));var o="",a=[];if("ERROR"===r.level.name&&1===i.length&&Logger.isString(i[0])){var s=i[0],l=s.split(/\n/);if(1<l.length){var c="Error: Jolokia-Error: ";if(0===l[0].search(c)){var d=l[0].slice(c.length);window.JSConsole.info("msg: ",d);try{var u=JSON.parse(d);(p=new Error).message=u.error,p.stack=u.stacktrace.replace("\\t","&nbsp;&nbsp").replace("\\n","\n"),i=[p]}catch(e){}}else{var p;(p=new Error).message=l[0],p.stack=s,i=[p]}}}var h=!1;if(e){for(var g=function(e){var t=i[e];if(Logger.isArray(t)||Logger.isObject(t)){var n="";try{n='<pre data-language="javascript">'+JSON.stringify(t,null,2)+"</pre>"}catch(e){n=t+" (failed to convert) "}o+=n}else Logger.isError(t)?("message"in t&&(o+=t.message),"stack"in t&&a.push(function(){var e=Logger.formatStackTraceString(t.stack);(r.name?Logger.get(r.name):Logger).info("Stack trace:",e)})):o+=t},m=0;m<i.length;m++)g(m);r.name&&(o='[<span class="green">'+r.name+"</span>] "+o),e.innerHTML=o,e.className=r.level.name,n&&(0===n.scrollHeight&&(h=!0),t.scrollTop>t.scrollHeight-n.scrollHeight-200&&(h=!0))}t&&e&&(t.appendChild(e),t.childNodes.length>parseInt(window.LogBuffer)&&t.removeChild(t.firstChild),h&&(t.scrollTop=t.scrollHeight)),b&&b(i,r);var f=window.logInterceptors;for(m=0;m<f.length;m++)f[m](r.level.name,o);a.forEach(function(e){return e()})})}(Bootstrap||(Bootstrap={})),function(d){var e=function(){function e(){var t=this;this.bootstrapEl=document.documentElement,this.loaderCallback=null,this.urls=[],this.modules=[],this.plugins={},this.tasks=[],this.runs=0,this.executedTasks=[],this.deferredTasks=[],this.bootstrapTask={name:"HawtioBootstrap",depends:"*",task:function(e){0<t.deferredTasks.length&&(d.log.info("Tasks yet to run:"),t.listTasks(t.deferredTasks),t.runs=t.runs+1,d.log.info("Task list restarted:",t.runs,"times"),5===t.runs?(d.log.info("Orphaned tasks:"),t.listTasks(t.deferredTasks),t.deferredTasks.length=0):t.deferredTasks.push(t.bootstrapTask)),d.log.debug("Executed tasks:",t.executedTasks),e()}},this.setLoaderCallback({scriptLoaderCallback:function(e,t,n){d.log.debug("Total scripts:",t,"Remaining:",n)},urlLoaderCallback:function(e,t,n){d.log.debug("Total URLs:",t,"Remaining:",n)}})}return e.prototype.setBootstrapElement=function(e){return d.log.debug("Setting bootstrap element to:",e),this.bootstrapEl=e,this},e.prototype.getBootstrapElement=function(){return this.bootstrapEl},e.prototype.registerPreBootstrapTask=function(e,t){var n;return(n=angular.isFunction(e)?(d.log.debug("Adding legacy task"),{task:e}):e).name||(n.name="unnamed-task-"+(this.tasks.length+1)),n.depends&&!_.isArray(n.depends)&&"*"!==n.depends&&(n.depends=[n.depends]),t?this.tasks.unshift(n):this.tasks.push(n),this},e.prototype.addModule=function(e){return d.log.debug("Adding module:",e),this.modules.push(e),this},e.prototype.addUrl=function(e){return d.log.debug("Adding URL:",e),this.urls.push(e),this},e.prototype.getModules=function(){return this.modules},e.prototype.getPlugins=function(){return this.plugins},e.prototype.setLoaderCallback=function(e){return this.loaderCallback=e,this},e.prototype.loadPlugins=function(a){var s=this;d.log.info("Bootstrapping Hawtio app..."),this.plugins={};var l={total:this.urls.length,remain:this.urls.length};if(0!==l.total){var c=new RegExp(/^jolokia:/);this.urls.forEach(function(e,t){if(c.test(e)){var n=e.split(":");(n=n.reverse()).pop(),e=n.pop();var i=n.reverse().join(":"),r=new Jolokia(e);try{var o=r.getAttribute(i,null);$.extend(s.plugins,o)}catch(e){}s.urlLoaded(l,a)}else d.log.debug("Trying url:",e),$.get(e,function(e){if(angular.isString(e))try{e=angular.fromJson(e)}catch(e){return}$.extend(s.plugins,e)}).always(function(){return s.urlLoaded(l,a)})})}else this.loadScripts(a)},e.prototype.urlLoaded=function(e,t){e.remain=e.remain-1,this.loaderCallback&&this.loaderCallback.urlLoaderCallback(this.loaderCallback,e.total,e.remain+1),0===e.remain&&this.loadScripts(t)},e.prototype.loadScripts=function(e){var t=this,n=0;_.forOwn(this.plugins,function(e,t){n+=e.Scripts.length});var i=n,r=function(){$.ajaxSetup({async:!0}),n-=1,t.loaderCallback&&t.loaderCallback.scriptLoaderCallback(t.loaderCallback,i,n+1),0===n&&t.bootstrap(e)};0<n?_.forOwn(this.plugins,function(t,e){t.Scripts.forEach(function(e){var i=t.Context+"/"+e;d.log.debug("Fetching script:",i),$.ajaxSetup({async:!1}),$.getScript(i).done(function(e){d.log.debug("Loaded script:",i)}).fail(function(e,t,n){d.log.info('Failed loading script: "',n.message,'" (<a href="',i,":",n.lineNumber,'">',i,":",n.lineNumber,"</a>)")}).always(r)})}):($.ajaxSetup({async:!0}),this.bootstrap(e))},e.prototype.bootstrap=function(e){var t=this;this.registerPreBootstrapTask(this.bootstrapTask),setTimeout(function(){return t.executeTasks(e)},1)},e.prototype.executeTasks=function(e){var t=this,n=null,i=[];for(0===this.tasks.length&&(n=this.deferredTasks.shift());!n&&0<this.deferredTasks.length;){var r=this.deferredTasks.shift();if("*"===r.depends)0<this.tasks.length?i.push(r):n=r;else this.intersection(this.executedTasks,r.depends).length===r.depends.length?n=r:i.push(r)}if(0<i.length&&i.forEach(function(e){return t.deferredTasks.push(e)}),n||(n=this.tasks.shift()),n&&n.depends&&0<this.tasks.length)if(d.log.debug("Task '"+n.name+"' has dependencies:",n.depends),"*"===n.depends){if(0<this.tasks.length)return d.log.debug("Task '"+n.name+"' wants to run after all other tasks, deferring"),this.deferredTasks.push(n),void this.executeTasks(e)}else if(this.intersection(this.executedTasks,n.depends).length!=n.depends.length)return d.log.debug("Deferring task: '"+n.name+"'"),this.deferredTasks.push(n),void this.executeTasks(e);if(n){d.log.debug("Executing task: '"+n.name+"'");var o=function(){o.notFired&&(o.notFired=!1,t.executedTasks.push(n.name),setTimeout(function(){return t.executeTasks(e)},1))};o.notFired=!0,n.task(o)}else d.log.debug("All tasks executed"),setTimeout(e,1)},e.prototype.listTasks=function(e){e.forEach(function(e){return d.log.info("  name:",e.name,"depends:",e.depends)})},e.prototype.intersection=function(e,t){Array.isArray(t)||(t=[t]);var n=[];return t.forEach(function(t){e.forEach(function(e){t===e&&n.push(e)})}),n},e.prototype.debug=function(){d.log.debug("urls and modules"),d.log.debug(this.urls),d.log.debug(this.modules)},e}();d.PluginLoader=e}(Core||(Core={}));var Help,Init,About,Nav,Shared,App,Page,ArrayHelpers,StringHelpers,UrlHelpers,HawtioCompile,ControllerHelpers,CoreFilters,FilterHelpers,Log,ObjectHelpers,PluginHelpers,SelectionHelpers,StorageHelpers,GoogleOAuth,OSOAuth,HawtioKeycloak,HawtioOAuth,GithubOAuth,hawtioPluginLoader=new Core.PluginLoader,HawtioCore=function(){"use strict";function e(){}Object.defineProperty(e.prototype,"injector",{get:function(){return n.UpgradeAdapter?n.UpgradeAdapter.ng1Injector:n._injector},enumerable:!0,configurable:!0});var n=new e;Core._module.config(["$locationProvider",function(e){e.html5Mode(!0)}]).run(["documentBase",function(e){return Core.log.debug("HawtioCore loaded at",e)}]);var i={length:0,key:function(e){},getItem:function(e){return i[e]},setItem:function(e,t){return i[e]=t},removeItem:function(e){var t=i[e];return delete i[e],t},clear:function(){}};return n.dummyLocalStorage=i,n.documentBase=function(){var e=$("head").find("base"),t="/";return e&&0<e.length?t=e.attr("href"):Core.log.warn("Document is missing a 'base' tag, defaulting to '/'"),t},Core._module.factory("localStorage",function(){return window.localStorage||i}).factory("documentBase",function(){return n.documentBase()}).factory("viewRegistry",function(){return{}}).factory("pageTitle",function(){return{addTitleElement:function(){},getTitle:function(){},getTitleWithSeparator:function(){},getTitleExcluding:function(){},getTitleArrayExcluding:function(){}}}).factory("toastr",["$window",function(e){var t=e.toastr;return t||(t={},e.toastr=t),t}]).factory("HawtioDashboard",function(){return{hasDashboard:!1,inDashboard:!1,getAddLink:function(){return""}}}),$(function(){if(jQuery.uaMatch=function(e){e=e.toLowerCase();var t=/(chrome)[ \/]([\w.]+)/.exec(e)||/(webkit)[ \/]([\w.]+)/.exec(e)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e)||/(msie) ([\w.]+)/.exec(e)||e.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)||[];return{browser:t[1]||"",version:t[2]||"0"}},!jQuery.browser){var e=jQuery.uaMatch(navigator.userAgent),t={};e.browser&&(t[e.browser]=!0,t.version=e.version),t.chrome?t.webkit=!0:t.webkit&&(t.safari=!0),jQuery.browser=t}window.ng&&window.ng.upgrade&&(n.UpgradeAdapter=new ng.upgrade.UpgradeAdapter),hawtioPluginLoader.loadPlugins(function(){if(n.injector||n.UpgradeAdapterRef)Core.log.debug("Application already bootstrapped");else{var e=hawtioPluginLoader.getBootstrapElement();Core.log.debug("Using bootstrap element:",e),n.UpgradeAdapter?(Core.log.debug("ngUpgrade detected, bootstrapping in Angular 1/2 hybrid mode"),n.UpgradeAdapterRef=n.UpgradeAdapter.bootstrap(e,hawtioPluginLoader.getModules(),{strictDi:!0}),n._injector=n.UpgradeAdapterRef.ng1Injector):n._injector=angular.bootstrap(e,hawtioPluginLoader.getModules(),{strictDi:!0}),Core.log.debug("Bootstrapped application")}})}),n}();!function(e){var r=Logger.get("hawtio-core-tasks"),t=function(){function e(e){this.name=e,this.tasks={},this.tasksExecuted=!1}return e.prototype.addTask=function(e,t){return this.tasks[e]=t,this.tasksExecuted&&this.executeTask(e,t),this},e.prototype.execute=function(e){var n=this;r.debug("Executing tasks:",this.name),this.tasksExecuted||(_.forOwn(this.tasks,function(e,t){return n.executeTask(t,e)}),this.tasksExecuted=!0,_.isNil(e)||e())},e.prototype.executeTask=function(t,e){if(!_.isNull(e)){r.debug("Executing task:",t);try{e()}catch(e){r.debug("Failed to execute task:",t,"error:",e)}}},e.prototype.reset=function(){this.tasksExecuted=!1},e}(),n=function(n){function e(e){var t=n.call(this,e)||this;return t.tasks={},t}return __extends(e,n),e.prototype.addTask=function(e,t){return this.tasks[e]=t,this},e.prototype.execute=function(){for(var n=this,i=[],e=0;e<arguments.length;e++)i[e]=arguments[e];r.debug("Executing tasks:",this.name),this.tasksExecuted||(_.forOwn(this.tasks,function(e,t){return n.executeParameterizedTask(t,e,i)}),this.tasksExecuted=!0,this.reset())},e.prototype.executeParameterizedTask=function(t,e,n){if(!_.isNull(e)){r.debug("Executing task:",t,"with parameters:",n);try{e.apply(e,n)}catch(e){r.debug("Failed to execute task:",t,"error:",e)}}},e}(e.Tasks=t);e.ParameterizedTasks=n}(Core||(Core={})),function(o){function e(e,i,t,n,r){t.addTask("ResetPreLogoutTasks",function(){return n.reset()}).addTask("ResetPostLogoutTasks",function(){return r.reset()}),n.addTask("ResetPostLoginTasks",function(){return t.reset()}),e.$on("$locationChangeStart",function(e,t,n){return i.execute(e,t,n)}),o.log.debug("Event services loaded")}e.$inject=["$rootScope","locationChangeStartTasks","postLoginTasks","preLogoutTasks","postLogoutTasks"],o.eventServicesModule=angular.module("hawtio-core-event-services",[]).factory("locationChangeStartTasks",function(){return new o.ParameterizedTasks("LocationChangeStartTasks")}).factory("postLoginTasks",function(){return new o.Tasks("PostLogin")}).factory("preLogoutTasks",function(){return new o.Tasks("PreLogout")}).factory("postLogoutTasks",function(){return new o.Tasks("PostLogout")}).run(e).name}(Core||(Core={})),function(e){var t=function(){function e(){this._registeredExtensions={}}return e.prototype.add=function(e,t){this._registeredExtensions[e]||(this._registeredExtensions[e]=[]),this._registeredExtensions[e].push(t)},e.prototype.render=function(e,t,n){var i=this._registeredExtensions[e];if(i)for(var r=0;r<i.length;r++){var o=i[r](n);if(!o)return;"string"==typeof o&&(o=document.createTextNode(o)),t.append(o)}},e}();e.HawtioExtension=t}(Core||(Core={})),function(e){function t(i){return{restrict:"EA",link:function(e,t,n){n.name&&i.render(n.name,t,e)}}}t.$inject=["HawtioExtension"],e.hawtioExtensionDirective=t}(Core||(Core={})),function(e){e.hawtioExtensionModule=angular.module("hawtio-extension-service",[]).service("HawtioExtension",e.HawtioExtension).directive("hawtioExtension",e.hawtioExtensionDirective).name}(Core||(Core={})),function(e){var t=function(){function e(){}return e.prototype.isIndexTopic=function(){return"index"===this.topicName},e}();e.HelpTopic=t}(Help||(Help={})),function(o){var e=function(){function e(e){this.$rootScope=e,this.topicNameMappings={activemq:"ActiveMQ",camel:"Camel",jboss:"JBoss",jclouds:"jclouds",jmx:"JMX",jvm:"Connect",log:"Logs",openejb:"OpenEJB",osgi:"OSGi"},this.subTopicNameMappings={user:"User Guide",developer:"Developers",faq:"FAQ",changes:"Change Log"},this.topics=[]}return e.$inject=["$rootScope"],e.prototype.addUserDoc=function(e,t,n){this.addSubTopic(e,"user",t,n)},e.prototype.addDevDoc=function(e,t,n){this.addSubTopic(e,"developer",t,n)},e.prototype.addSubTopic=function(e,t,n,i){this.getOrCreateTopic(e,t,n,i)},e.prototype.getOrCreateTopic=function(e,t,n,i){void 0===i&&(i=function(){return!0});var r=this.getTopic(e,t);return angular.isDefined(r)||((r=new o.HelpTopic).topicName=e,r.subTopicName=t,r.path=n,r.isValid=i,r.label=r.isIndexTopic()?this.getLabel(t):this.getLabel(e),this.topics.push(r),this.$rootScope.$broadcast("hawtioNewHelpTopic")),r},e.prototype.getLabel=function(e){return angular.isDefined(this.topicNameMappings[e])?this.topicNameMappings[e]:angular.isDefined(this.subTopicNameMappings[e])?this.subTopicNameMappings[e]:e},e.prototype.getTopics=function(){return this.topics.filter(function(e){return e.isValid()})},e.prototype.getTopic=function(t,n){return this.topics.filter(function(e){return e.topicName===t&&e.subTopicName===n})[0]},e}();o.HelpRegistry=e}(Help||(Help={})),function(e){var t=function(){function e(e,t){this.$templateCache=e,this.helpRegistry=t,marked.setOptions({gfm:!0,tables:!0,breaks:!1,pedantic:!0,sanitize:!1,smartLists:!0,langPrefix:"language-"})}return e.$inject=["$templateCache","helpRegistry"],e.prototype.getTopics=function(){return this.helpRegistry.getTopics().filter(function(e){return e.isIndexTopic()})},e.prototype.getSubTopics=function(t){var e=this.helpRegistry.getTopics().filter(function(e){return!e.isIndexTopic()&&e.subTopicName===t.subTopicName});return e=_.sortBy(e,"label"),__spreadArrays([t],e)},e.prototype.getTopic=function(e,t){return this.helpRegistry.getTopic(e,t)},e.prototype.getHelpContent=function(e){if(angular.isDefined(e)){var t=this.$templateCache.get(e.path);return t?marked(t):'\n            <h3 id="error">Error</h3>\n            <div class="alert alert-danger">\n              <span class="pficon pficon-error-circle-o"></span>\n              Unable to display help data for <code>'+e.path+"</code>\n            </div>"}return'\n          <h3 id="error">Error</h3>\n          <div class="alert alert-danger">\n            <span class="pficon pficon-error-circle-o"></span>\n            Help data is not defined for <code>'+e.path+"</code>\n          </div>"},e}();e.HelpService=t}(Help||(Help={})),function(e){var t=function(){function e(e,t,n){this.helpService=t,this.$sce=n}return e.$inject=["$rootScope","helpService","$sce"],e.prototype.$onInit=function(){this.topics=this.helpService.getTopics(),this.onSelectTopic(this.helpService.getTopic("index","user"))},e.prototype.onSelectTopic=function(e){this.selectedTopic=e,this.subTopics=this.helpService.getSubTopics(e),this.onSelectSubTopic(this.subTopics[0])},e.prototype.onSelectSubTopic=function(e){this.selectedSubTopic=e,this.html=this.$sce.trustAsHtml(this.helpService.getHelpContent(e))},e}();e.HelpController=t,e.helpComponent={templateUrl:"help/help.component.html",controller:t}}(Help||(Help={})),function(e){function t(e){e.when("/help",{template:"<help></help>"})}function n(e,t){e.addUserDoc("index","help/help.md"),e.addSubTopic("index","faq","plugins/help/doc/FAQ.md",function(){return void 0!==t.get("plugins/help/doc/FAQ.md")}),e.addSubTopic("index","changes","plugins/help/doc/CHANGES.md",function(){return void 0!==t.get("plugins/help/doc/CHANGES.md")})}function i(e,t){e.add("hawtio-help",function(e){return t('<a class="pf-c-dropdown__menu-item" ng-href="help">Help</a>')(e)})}t.$inject=["$routeProvider"],n.$inject=["helpRegistry","$templateCache"],i.$inject=["HawtioExtension","$compile"],e.configureRoutes=t,e.configureDocumentation=n,e.configureMenu=i}(Help||(Help={})),function(e){e.helpModule=angular.module("hawtio-help",[]).config(e.configureRoutes).run(e.configureDocumentation).run(e.configureMenu).component("help",e.helpComponent).service("helpService",e.HelpService).service("helpRegistry",e.HelpRegistry).name}(Help||(Help={})),function(e){e.initModule=angular.module("hawtio-init",[]).service("initService",e.InitService).name}(Init||(Init={})),function(e){var t=function(){function e(e){this.appName=e.getBrandingValue("appName"),this.appLogoUrl=e.getBrandingValue("appLogoUrl")}return e.$inject=["configManager"],e}();e.pageHeaderComponent={bindings:{onNavToggle:"&"},template:'\n      <div class="pf-c-page__header-brand">\n        <div class="pf-c-page__header-brand-toggle">\n          <button class="pf-c-button pf-m-plain" ng-click="$ctrl.onNavToggle()">\n            <i class="fa fa-bars" aria-hidden="true"></i>\n          </button>\n        </div>\n        <div class="pf-c-page__header-brand-link">\n          <img class="pf-c-brand" ng-src="{{$ctrl.appLogoUrl}}" alt="{{$ctrl.appName}}">\n        </div>\n      </div>\n      <div class="pf-c-page__header-selector" hawtio-extension name="context-selector">\n      </div>\n      <div class="pf-c-page__header-tools">\n        <div class="pf-c-page__header-tools-group pf-m-icons">\n          <span hawtio-extension name="header-tools"></span>\n          <help-dropdown></help-dropdown>\n        </div>\n        <div class="pf-c-page__header-tools-group">\n          <user-dropdown></user-dropdown>\n        </div>\n      </div>\n    ',controller:t}}(Page||(Page={})),function(e){e.pageHeaderModule=angular.module("hawtio-page-header",[]).component("pageHeader",e.pageHeaderComponent).name}(Page||(Page={})),(Page||(Page={})).pageMainComponent={bindings:{templateUrl:"@"},template:'\n      <section class="pf-c-page__main-section pf-m-light">\n        <ng-include src="$ctrl.templateUrl"></ng-include>\n      </section>\n    '},function(e){e.pageMainModule=angular.module("hawtio-page-main",[]).component("pageMain",e.pageMainComponent).name}(Page||(Page={})),function(t){t.DEFAULT_TEMPLATE="<div ng-view></div>",t.DEFAULT_TEMPLATE_URL="/defaultTemplateUrl.html";var e=function(){function e(e){if(this.template=t.DEFAULT_TEMPLATE,this.isValid=function(){return!0},this.rank=0,e.href&&e.basePath)throw new Error("Must specify 'href' or 'basePath', not both.");_.assign(this,e)}return Object.defineProperty(e.prototype,"templateUrl",{get:function(){return _.kebabCase(this.title)+".html"},enumerable:!0,configurable:!0}),e}();t.MainNavItem=e}(Nav||(Nav={})),function(i){var e=function(){function e(e,t,n){this.$location=e,this.$templateCache=t,this.configManager=n,this.allItems=[],t.put(i.DEFAULT_TEMPLATE_URL,i.DEFAULT_TEMPLATE)}return e.$inject=["$location","$templateCache","configManager"],e.prototype.addItem=function(e){var t=new i.MainNavItem(e);this.isMainNavItemEnabled(t)&&(this.allItems.push(t),this.$templateCache.put(t.templateUrl,t.template))},e.prototype.isMainNavItemEnabled=function(e){return e.basePath&&this.configManager.isRouteEnabled(e.basePath)||e.href&&this.configManager.isRouteEnabled(e.href)},e.prototype.getValidItems=function(){return this.allItems.filter(function(e){return e.isValid()}).sort(function(e,t){return e.rank!==t.rank?t.rank-e.rank:e.title.localeCompare(t.title)})},e.prototype.getActiveItem=function(){var e=this.getValidItems();return _.find(e,function(e){return e.isActive})},e.prototype.activateItem=function(e){this.clearActiveItem(),e.isActive=!0},e.prototype.clearActiveItem=function(){this.allItems.forEach(function(e){return e.isActive=!1})},e.prototype.changeRouteIfRequired=function(){var e=this.getActiveItem();e&&e.href&&this.$location.path(e.href)},e.prototype.findItemByPath=function(){var e=this.getValidItems();return this.getItemThatMatcheslocation(e)},e.prototype.isMainNavPath=function(){return void 0!==this.getItemThatMatcheslocation(this.allItems)},e.prototype.getItemThatMatcheslocation=function(e){var t=this;return _.find(e,function(e){return _.startsWith(t.$location.path(),e.href||e.basePath)})},e.prototype.isRootPath=function(){return"/"===this.$location.path()},e}();i.MainNavService=e}(Nav||(Nav={})),function(e){var t=function(){function e(e,t,n,i){var r=this;this.mainNavService=e,this.$rootScope=t,this.$interval=n,this.$window=i,this.updateView=function(e){e?(r.templateUrl=e.templateUrl,r.mainNavService.activateItem(e)):(r.templateUrl=Nav.DEFAULT_TEMPLATE_URL,r.mainNavService.clearActiveItem()),r.onTemplateChange({templateUrl:r.templateUrl}),r.mainNavService.changeRouteIfRequired(),r.activeItem=e}}return e.$inject=["mainNavService","$rootScope","$interval","$window"],e.prototype.$onInit=function(){var t=this;this.loadDataAndSetActiveItem(),this.unregisterRouteChangeListener=this.$rootScope.$on("$routeChangeStart",function(){var e=t.mainNavService.findItemByPath();t.updateView(e)}),this.itemsChecker=this.$interval(function(){t.mainNavService.getValidItems().length!==t.items.length&&(t.getActiveItem()?t.loadDataAndSetActiveItem():t.loadData())},1e4)},e.prototype.getActiveItem=function(){return _.find(this.items,function(e){return e.isActive})},e.prototype.$onDestroy=function(){this.unregisterRouteChangeListener(),this.$interval.cancel(this.itemsChecker)},e.prototype.loadData=function(){this.items=this.mainNavService.getValidItems()},e.prototype.loadDataAndSetActiveItem=function(){this.items=this.mainNavService.getValidItems();var e=this.mainNavService.getActiveItem();e||!this.mainNavService.isRootPath()&&!this.mainNavService.isMainNavPath()||(e=this.mainNavService.findItemByPath()||this.items[0]),this.updateView(e)},e.prototype.onClick=function(e){this.updateView(e),this.onItemClick()},e}();e.pageSidebarComponent={bindings:{onTemplateChange:"&",onItemClick:"&"},template:'\n      <nav class="pf-c-nav pf-m-dark">\n        <ul class="pf-c-nav__list">\n          <li class="pf-c-nav__item" ng-repeat="item in $ctrl.items">\n            <a href="#" class="pf-c-nav__link" ng-class="{\'pf-m-current\': item === $ctrl.activeItem}"\n              ng-click="$ctrl.onClick(item)">\n              {{item.title}}\n            </a>\n          </li>\n        </ul>\n      </nav>\n    ',controller:t}}(Page||(Page={})),function(e){e.pageSidebarModule=angular.module("hawtio-page-sidebar",[]).component("pageSidebar",e.pageSidebarComponent).name}(Page||(Page={})),function(t){var e=function(){function e(e,t,n){this.$window=e,this.$timeout=t,this.$rootScope=n,this.WIDTH_LIMIT=768,this.isNavOpen=!0,this.previousWidth=this.$window.innerWidth}return e.$inject=["$window","$timeout","$rootScope"],e.prototype.$onInit=function(){var e=this;angular.element(this.$window).on("resize",function(){e.$timeout(function(){e.wasInDesktopView()&&e.isInMobileView()&&(e.isNavOpen=!1),e.wasInMobileView()&&e.isInDesktopView()&&(e.isNavOpen=!0),e.previousWidth=e.$window.innerWidth})}),this.$rootScope.$on(t.CLOSE_MAIN_NAV_EVENT,function(){return e.isNavOpen=!1})},e.prototype.$onDestroy=function(){angular.element(this.$window).off("resize")},e.prototype.onNavToggle=function(){this.isNavOpen=!this.isNavOpen},e.prototype.onTemplateChange=function(e){this.templateUrl=e},e.prototype.onSidebarItemClick=function(){this.isInMobileView()&&(this.isNavOpen=!1)},e.prototype.wasInDesktopView=function(){return this.previousWidth>=this.WIDTH_LIMIT},e.prototype.wasInMobileView=function(){return this.previousWidth<this.WIDTH_LIMIT},e.prototype.isInDesktopView=function(){return this.$window.innerWidth>=this.WIDTH_LIMIT},e.prototype.isInMobileView=function(){return this.$window.innerWidth<this.WIDTH_LIMIT},e}();t.pageComponent={template:'\n      <div class="pf-c-background-image">\n        <svg xmlns="http://www.w3.org/2000/svg" class="pf-c-background-image__filter" width="0" height="0">\n          <filter id="image_overlay">\n            <feColorMatrix type="matrix" values="1 0 0 0 0\n                    1 0 0 0 0\n                    1 0 0 0 0\n                    0 0 0 1 0" />\n            <feComponentTransfer color-interpolation-filters="sRGB" result="duotone">\n              <feFuncR type="table" tableValues="0.086274509803922 0.43921568627451"></feFuncR>\n              <feFuncG type="table" tableValues="0.086274509803922 0.43921568627451"></feFuncG>\n              <feFuncB type="table" tableValues="0.086274509803922 0.43921568627451"></feFuncB>\n              <feFuncA type="table" tableValues="0 1"></feFuncA>\n            </feComponentTransfer>\n          </filter>\n        </svg>\n      </div>\n      <div class="pf-c-page">\n        <page-header role="banner" class="pf-c-page__header" on-nav-toggle="$ctrl.onNavToggle()"></page-header>\n        <page-sidebar class="pf-c-page__sidebar pf-m-dark"\n          ng-class="{\'pf-m-expanded\': $ctrl.isNavOpen, \'pf-m-collapsed\': !$ctrl.isNavOpen}"\n          on-template-change="$ctrl.onTemplateChange(templateUrl)"\n          on-item-click="$ctrl.onSidebarItemClick()"></page-sidebar>\n        <page-main role="main" class="pf-c-page__main" template-url="{{$ctrl.templateUrl}}"></page-main>\n      </div>\n      <about></about>\n    ',controller:e}}(Page||(Page={})),function(e){e.pageModule=angular.module("hawtio-page",[e.pageHeaderModule,e.pageMainModule,e.pageSidebarModule]).component("page",e.pageComponent).name}(Page||(Page={})),function(e){var t=function(){function e(){this.isOpen=!1}return e.prototype.toggle=function(){this.isOpen=!this.isOpen},e.prototype.close=function(){this.isOpen=!1},e}();e.AppLauncherController=t,e.appLauncherComponent={bindings:{items:"<",onChange:"&"},template:'\n      <div class="pf-c-app-launcher">\n        <button id="app-launcher" class="pf-c-app-launcher__toggle" ng-click="$ctrl.toggle()"\n          ng-blur="$ctrl.close()">\n          <i class="fa fa-th" aria-hidden="true"></i>\n        </button>\n        <ul class="pf-c-app-launcher__menu" aria-labelledby="app-launcher" ng-show="$ctrl.isOpen">\n          <li ng-repeat="item in $ctrl.items">\n            <a class="pf-c-app-launcher__menu-item" href="#" ng-focus="$ctrl.onChange({item})">{{item.label}}</a>\n          </li>\n        </ul>\n      </div>\n    ',controller:t}}(Nav||(Nav={})),function(e){var t=function(){function e(e){this.$timeout=e,this.KEY_ARROW_DOWN=40,this.KEY_ARROW_UP=38,this.KEY_ESCAPE=27,this.isOpen=!1}return e.$inject=["$timeout"],e.prototype.$onInit=function(){this.setupCloseOnClickOutside()},e.prototype.$onChanges=function(){this.reset()},e.prototype.setupCloseOnClickOutside=function(){var t=this;this.$timeout(function(){$(".pf-c-context-selector").click(function(e){return e.stopPropagation()}),$("body").click(function(e){return t.$timeout(function(){return t.reset()})})})},e.prototype.getLabel=function(){return this.selectedItem?this.selectedItem.label:this.label},e.prototype.toggle=function(){this.isOpen?this.reset():(this.isOpen=!0,this.isItemSelected()?this.focusSelectedItem():this.focusSearchInput())},e.prototype.reset=function(){this.isOpen=!1,this.searchText="",this.items.forEach(function(e){return e.id=_.kebabCase(e.label)}),this.filteredItems=this.items},e.prototype.onSearchKeyUp=function(e){switch(e.keyCode){case this.KEY_ARROW_DOWN:this.focusFirstItem();break;case this.KEY_ESCAPE:this.reset();break;default:this.filterItems()}},e.prototype.onItemKeyUp=function(e){var t=e.target;switch(e.keyCode){case this.KEY_ARROW_DOWN:this.focusNextItem(t);break;case this.KEY_ARROW_UP:this.isFirstItem(t)?this.focusSearchInput():this.focusPreviousItem(t);break;case this.KEY_ESCAPE:this.reset()}},e.prototype.filterItems=function(){var t=new RegExp(this.searchText,"i");this.filteredItems=this.items.filter(function(e){return t.test(e.label)})},e.prototype.onItemClick=function(e){this.selectedItem=e,this.reset(),this.onChange({item:e})},e.prototype.isItemSelected=function(){return!!this.selectedItem},e.prototype.focusSelectedItem=function(){var e=this;this.$timeout(function(){return $("#"+e.selectedItem.id).focus()},50)},e.prototype.kebabCase=function(e){return _.kebabCase(e)},e.prototype.focusSearchInput=function(){this.$timeout(function(){return $("#contextSelectorSearchInput").focus()})},e.prototype.focusFirstItem=function(){this.$timeout(function(){return $(".pf-c-context-selector__menu-list > li:first-child").find("button").focus()})},e.prototype.focusPreviousItem=function(e){this.$timeout(function(){return $(e).parent().prev().find("button").focus()})},e.prototype.focusNextItem=function(e){this.$timeout(function(){return $(e).parent().next().find("button").focus()})},e.prototype.isFirstItem=function(e){return 0===$(e).parent().index()},e}();e.ContextSelectorController=t,e.contextSelectorComponent={bindings:{label:"@",items:"<",onChange:"&"},template:'\n      <div class="pf-c-context-selector" ng-class="{\'pf-m-expanded\': $ctrl.isOpen}">\n        <button class="pf-c-context-selector__toggle" ng-click="$ctrl.toggle()">\n          <span class="pf-c-context-selector__toggle-text">{{$ctrl.getLabel()}}</span>\n          <i class="fa fa-angle-down pf-c-context-selector__toggle-icon" aria-hidden="true"></i>\n        </button>\n        <div class="pf-c-context-selector__menu" ng-show="$ctrl.isOpen">\n          <div class="pf-c-context-selector__menu-input">\n            <div class="pf-c-input-group">\n              <input type="search" id="contextSelectorSearchInput" class="pf-c-form-control"\n                name="contextSelectorSearchInput" placeholder="Search" ng-model="$ctrl.searchText"\n                ng-keyup="$ctrl.onSearchKeyUp($event)" ng-focus="$ctrl.onSearchFocus()"\n                ng-blur="$ctrl.onSearchBlur()">\n            </div>\n          </div>\n          <ul class="pf-c-context-selector__menu-list">\n            <li ng-repeat="item in $ctrl.filteredItems track by item.id">\n              <button id="{{item.id}}" class="pf-c-context-selector__menu-list-item"\n                ng-click="$ctrl.onItemClick(item)" ng-keyup="$ctrl.onItemKeyUp($event)"\n                ng-focus="$ctrl.onItemFocus()" ng-blur="$ctrl.onItemBlur()">{{item.label}}</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    ',controller:t}}(Nav||(Nav={})),function(e){var t=function(e,t){this.label=e,this.path=t,this.visible=!0};(Nav||(Nav={})).HawtioTab=t}(),function(e){var t=function(){function e(e,t,n,i,r){this.$document=e,this.$timeout=t,this.$location=n,this.$rootScope=i,this.configManager=r}return e.$inject=["$document","$timeout","$location","$rootScope","configManager"],e.prototype.$onInit=function(){var t=this;this.unregisterRouteChangeListener=this.$rootScope.$on("$routeChangeSuccess",function(){var e=_.find(t.tabs,function(e){return _.startsWith(t.$location.path(),e.path)});e&&t.activateTab(e)})},e.prototype.$onDestroy=function(){this.unregisterRouteChangeListener()},e.prototype.$onChanges=function(e){this.tabs&&(this.discardDisabledTabs(),this.adjustTabs(),this.activateTab(e.activeTab?e.activeTab.currentValue:null))},e.prototype.discardDisabledTabs=function(){var t=this;this.tabs=this.tabs.filter(function(e){return t.configManager.isRouteEnabled(e.path)})},e.prototype.activateTab=function(e){var t=this;e?this.activeTab=e:(e=_.find(this.tabs,function(e){return _.startsWith(t.$location.path(),e.path)}))?this.activeTab=e:0<this.tabs.length&&(this.activeTab=this.tabs[0],this.$location.path(this.activeTab.path))},e.prototype.adjustTabs=function(){var o=this;this.adjustingTabs=!0,this.$timeout(function(){var e=o.$document.find(".hawtio-tabs"),t=e.find(".hawtio-tab"),n=e.find(".dropdown"),i=e.width()-n.width(),r=0;t.each(function(e,t){r+=t.clientWidth,o.tabs[e].visible=r<i}),o.adjustingTabs=!1})},Object.defineProperty(e.prototype,"visibleTabs",{get:function(){return _.filter(this.tabs,{visible:!0})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"moreTabs",{get:function(){return _.filter(this.tabs,{visible:!1})},enumerable:!0,configurable:!0}),e.prototype.onClick=function(e){this.activeTab=e,this.onChange({tab:e})},e}();e.HawtioTabsController=t,e.hawtioTabsComponent={bindings:{tabs:"<",activeTab:"<",onChange:"&"},template:'\n      <ul class="nav nav-tabs hawtio-tabs" ng-if="$ctrl.tabs">\n        <li ng-repeat="tab in $ctrl.visibleTabs track by tab.path" class="hawtio-tab"\n            ng-class="{invisible: $ctrl.adjustingTabs, active: tab === $ctrl.activeTab}">\n          <a href="#" ng-click="$ctrl.onClick(tab)">{{tab.label}}</a>\n        </li>\n        <li class="dropdown" ng-class="{invisible: $ctrl.moreTabs.length === 0}">\n          <a id="moreDropdown" class="dropdown-toggle" href="" data-toggle="dropdown">\n            More\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu dropdown-menu-right" role="menu" aria-labelledby="moreDropdown">\n            <li role="presentation" ng-repeat="tab in $ctrl.moreTabs track by tab.label">\n              <a role="menuitem" tabindex="-1" href="#" ng-click="$ctrl.onClick(tab)">{{tab.label}}</a>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    ',controller:t}}(Nav||(Nav={})),function(e){var t=function(){function e(e){this.$location=e}return e.$inject=["$location"],e.prototype.goto=function(e){this.$location.path(e.path)},e}();e.HawtioTabsLayoutController=t,e.hawtioTabsLayoutComponent={bindings:{tabs:"<"},template:'\n      <div class="nav-tabs-main">\n        <hawtio-tabs tabs="$ctrl.tabs" on-change="$ctrl.goto(tab)"></hawtio-tabs>\n        <div ng-view></div>\n      </div>\n    ',controller:t}}(Nav||(Nav={})),(About||(About={})).SHOW_ABOUT_EVENT="ABOUT_LINK_CLICK_EVENT",function(e){var t=function(){function e(e,t){this.$rootScope=e,this.$location=t,this.isOpen=!1}return e.$inject=["$rootScope","$location"],e.prototype.toggle=function(){this.isOpen=!this.isOpen},e.prototype.close=function(){this.isOpen=!1},e.prototype.onHelpClicked=function(){this.$location.path("/help")},e.prototype.onAboutClicked=function(){this.$rootScope.$emit(About.SHOW_ABOUT_EVENT)},e}();e.helpDropdownComponent={template:'\n      <div class="pf-c-dropdown">\n        <button id="helpDropdownMenu" class="pf-c-dropdown__toggle pf-m-plain" ng-click="$ctrl.toggle()"\n          ng-blur="$ctrl.close()">\n          <i class="pficon pficon-help" aria-hidden="true"></i>\n        </button>\n        <ul class="pf-c-dropdown__menu pf-m-align-right" ng-show="$ctrl.isOpen">\n          <li><a class="pf-c-dropdown__menu-item" href="#" ng-focus="$ctrl.onHelpClicked()">Help</a></li>\n          <li><a class="pf-c-dropdown__menu-item" href="#" ng-focus="$ctrl.onAboutClicked()">About</a></li>\n        </ul>\n      </div>\n    ',controller:t}}(Nav||(Nav={})),function(e){var t=function(){function e(e,t){this.$location=e,this.isOpen=!1,this.userName=t.fullName}return e.$inject=["$location","userDetails"],e.prototype.toggle=function(){this.isOpen=!this.isOpen},e.prototype.close=function(){this.isOpen=!1},e.prototype.onPreferencesClicked=function(){this.$location.path("/preferences")},e}();e.userDropdownComponent={template:'\n      <div class="pf-c-dropdown">\n        <button id="userDropdownMenu" class="pf-c-dropdown__toggle pf-m-plain" ng-click="$ctrl.toggle()"\n          ng-blur="$ctrl.close()">{{$ctrl.userName}}</button>\n        <ul class="pf-c-dropdown__menu pf-m-align-right" ng-show="$ctrl.isOpen">\n          <li><a class="pf-c-dropdown__menu-item" href="#" ng-focus="$ctrl.onPreferencesClicked()">Preferences</a></li>\n          <span hawtio-extension name="hawtio-logout"></span>\n        </ul>\n      </div>\n    ',controller:t}}(Nav||(Nav={})),function(e){e.navigationModule=angular.module("hawtio-navigation",[]).component("appLauncher",e.appLauncherComponent).component("contextSelector",e.contextSelectorComponent).component("hawtioTabs",e.hawtioTabsComponent).component("hawtioTabsLayout",e.hawtioTabsLayoutComponent).component("helpDropdown",e.helpDropdownComponent).component("userDropdown",e.userDropdownComponent).service("mainNavService",e.MainNavService).name}(Nav||(Nav={})),function(e){var t=function(){function e(e){this.$window=e}return e.$inject=["$window"],e.prototype.getLogBuffer=function(){return null!==window.localStorage.getItem("logBuffer")?parseInt(this.$window.localStorage.getItem("logBuffer"),10):e.DEFAULT_LOG_BUFFER_SIZE},e.prototype.setLogBuffer=function(e){this.$window.localStorage.setItem("logBuffer",e.toString())},e.prototype.getGlobalLogLevel=function(){return null!==this.$window.localStorage.getItem("logLevel")?JSON.parse(this.$window.localStorage.getItem("logLevel")):e.DEFAULT_GLOBAL_LOG_LEVEL},e.prototype.setGlobalLogLevel=function(e){this.$window.localStorage.setItem("logLevel",JSON.stringify(e))},e.prototype.getChildLoggers=function(){return null!==this.$window.localStorage.getItem("childLoggers")?JSON.parse(this.$window.localStorage.getItem("childLoggers")):[]},e.prototype.getAvailableChildLoggers=function(){var e=_.values(Logger.loggers).map(function(e){return e.context}),n=this.getChildLoggers(),t=e.filter(function(t){return!n.some(function(e){return e.name===t.name})});return _.sortBy(t,"name")},e.prototype.addChildLogger=function(e){var t=this.getChildLoggers();t.push(e),this.setChildLoggers(t)},e.prototype.removeChildLogger=function(t){var e=this.getChildLoggers();_.remove(e,function(e){return e.name===t.name}),this.setChildLoggers(e),Logger.get(t.name).setLevel(this.getGlobalLogLevel())},e.prototype.setChildLoggers=function(e){this.$window.localStorage.setItem("childLoggers",JSON.stringify(e))},e.prototype.reconfigureLoggers=function(){Logger.setLevel(this.getGlobalLogLevel()),this.getChildLoggers().forEach(function(e){Logger.get(e.name).setLevel(e.filterLevel)})},e.DEFAULT_LOG_BUFFER_SIZE=100,e.DEFAULT_GLOBAL_LOG_LEVEL=Logger.INFO,e}();e.LoggingPreferencesService=t}(Core||(Core={})),function(e){function t(t,n){$('[data-toggle="tooltip"]').tooltip(),t.logBuffer=n.getLogBuffer(),t.logLevel=n.getGlobalLogLevel(),t.childLoggers=n.getChildLoggers(),t.availableChildLoggers=n.getAvailableChildLoggers(),t.availableLogLevels=[Logger.OFF,Logger.ERROR,Logger.WARN,Logger.INFO,Logger.DEBUG],t.onLogBufferChange=function(e){null!=e&&n.setLogBuffer(e)},t.onLogLevelChange=function(e){n.setGlobalLogLevel(e),n.reconfigureLoggers()},t.addChildLogger=function(e){n.addChildLogger(e),t.childLoggers=n.getChildLoggers(),t.availableChildLoggers=n.getAvailableChildLoggers()},t.removeChildLogger=function(e){n.removeChildLogger(e),t.childLoggers=n.getChildLoggers(),t.availableChildLoggers=n.getAvailableChildLoggers()},t.onChildLoggersChange=function(e){n.setChildLoggers(e),n.reconfigureLoggers()}}t.$inject=["$scope","loggingPreferencesService"],e.LoggingPreferencesController=t}(Core||(Core={})),function(e){e.loggingPreferencesModule=angular.module("hawtio-logging-preferences",[]).controller("PreferencesLoggingController",e.LoggingPreferencesController).service("loggingPreferencesService",e.LoggingPreferencesService).name}(Core||(Core={})),function(e){var t=function(){function e(e){this.$window=e}return e.$inject=["$window"],e.prototype.saveLocationUrl=function(e){this.$window.sessionStorage.setItem("lastUrl",e)},e.prototype.restoreLocation=function(e){var t=this.$window.sessionStorage.getItem("lastUrl");e.url(t)},e.prototype.bindModelToSearchParam=function(e,n,t,i,r,o,a){t in e||(e[t]=r);var s=o||function(e){return e};var l=(a||function(e){return e})(n.search()[i]||r);this.pathSet(e,t,l),e.$watch(t,function(e,t){e!==t&&(null!=e?n.search(i,s(e)):n.search(i,""))})},e.prototype.pathSet=function(e,t,i){var n=angular.isArray(t)?t:(t||"").split("."),r=e,o=n.length-1;return angular.forEach(n,function(e,t){var n=r[e];(o<=t||!angular.isObject(n))&&(n=t<o?{}:i,r[e]=n),r=n}),r},e}();e.PreferencesService=t}(Core||(Core={})),function(e){var t=function(){function e(){this.tabs={}}return e.prototype.addTab=function(e,t,n){void 0===n&&(n=function(){return!0}),this.tabs[e]={label:e,templateUrl:t,get isValid(){return n()}}},e.prototype.getTab=function(e){return this.tabs[e]},e.prototype.getTabs=function(){return _.clone(this.tabs)},e}();e.PreferencesRegistry=t}(Core||(Core={})),function(e){function t(n,e,t,i){n.panels=_.values(t.getTabs());var r=function(e){return e.sort(o).filter(function(e){return e.isValid}).map(function(e){return new Nav.HawtioTab(e.label,e.label)})};function o(e,t){return"Reset"==e.label?1:"Reset"==t.label?-1:e.label.localeCompare(t.label)}n.tabs=r(n.panels),n.$watch("panels",function(e){return n.tabs=r(e)},!0),i.bindModelToSearchParam(n,e,"pref","pref",n.tabs[0].label),n.setPanel=function(e){return n.pref=e.label},n.close=function(){return i.restoreLocation(e)},n.getPrefs=function(t){var e=n.panels.find(function(e){return e.label===t});if(e)return e.templateUrl},n.getTab=function(e){return _.find(n.tabs,{label:e})}}t.$inject=["$scope","$location","preferencesRegistry","preferencesService"],e.PreferencesHomeController=t}(Core||(Core={})),function(e){e.preferencesHomeModule=angular.module("hawtio-preferences-home",[]).controller("PreferencesHomeController",e.PreferencesHomeController).name}(Core||(Core={})),function(i){e.$inject=["$scope","$window"];var r="showPreferencesResetAlert";function e(e,n){e.showAlert=!!n.sessionStorage.getItem(r),n.sessionStorage.removeItem(r),e.doReset=function(){i.log.info("Resetting preferences");var e=n.localStorage.getItem("jvmConnect"),t=n.localStorage.getItem("osAuthCreds");n.localStorage.clear(),n.localStorage.setItem("jvmConnect",e),n.localStorage.setItem("osAuthCreds",t),n.sessionStorage.setItem(r,"true"),n.setTimeout(function(){n.location.reload()},10)}}i.ResetPreferencesController=e}(Core||(Core={})),function(e){e.resetPreferencesModule=angular.module("hawtio-preferences-menu-item",[]).controller("ResetPreferencesController",e.ResetPreferencesController).name}(Core||(Core={})),function(e){function t(e){e.when("/preferences",{templateUrl:"preferences/preferences-home/preferences-home.html",reloadOnSearch:!1})}function n(e,t){e.add("hawtio-preferences",function(e){return t('<a ng-href="preferences">Preferences</a>')(e)})}function i(e,o){e.$on("$locationChangeSuccess",function(e,t,n){if(-1!==t.indexOf("/preferences")&&-1===n.indexOf("/preferences")){var i=t.substring(0,t.indexOf("/preferences")),r=n.substring(i.length);o.saveLocationUrl(r)}})}function r(e){e.addUserDoc("preferences","preferences/help.md")}function o(e){e.addTab("Console Logs","preferences/logging-preferences/logging-preferences.html"),e.addTab("Reset","preferences/reset-preferences/reset-preferences.html")}t.$inject=["$routeProvider"],n.$inject=["HawtioExtension","$compile"],i.$inject=["$rootScope","preferencesService"],r.$inject=["helpRegistry"],o.$inject=["preferencesRegistry"],e.configureRoutes=t,e.configureMenu=n,e.savePreviousLocationWhenOpeningPreferences=i,e.configureDocumentation=r,e.configurePreferencesPages=o}(Core||(Core={})),function(e){e.preferencesModule=angular.module("hawtio-preferences",["ng","ngRoute","ngSanitize",e.loggingPreferencesModule,e.preferencesHomeModule,e.resetPreferencesModule]).config(e.configureRoutes).run(e.configureMenu).run(e.savePreviousLocationWhenOpeningPreferences).run(e.configureDocumentation).run(e.configurePreferencesPages).service("preferencesService",e.PreferencesService).service("preferencesRegistry",e.PreferencesRegistry).name}(Core||(Core={})),function(e){var t=function(){function e(e){this.$timeout=e,this.loading=!0,this.show=!1}return e.$inject=["$timeout"],e.prototype.$onInit=function(){var e=this;this.$timeout(function(){return e.show=!0},1e3)},e}();e.HawtioLoadingController=t,e.hawtioLoadingComponent={transclude:!0,bindings:{loading:"<"},template:'\n      <div ng-if="$ctrl.loading">\n        <div class="loading-centered" ng-show="$ctrl.show">\n          <div class="spinner spinner-lg"></div>\n          <div class="loading-label">Loading...</div>\n        </div>\n      </div>\n      <div class="loading-content" ng-if="!$ctrl.loading" ng-transclude></div>\n    ',controller:t}}(Shared||(Shared={})),(Shared||(Shared={})).hawtioActionBarComponent={transclude:!0,template:'\n      <div class="container-fluid">\n        <div class="row toolbar-pf">\n          <div class="col-sm-12">\n            <form class="toolbar-pf-actions">\n              <div class="form-group" ng-transclude>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    '},function(e){e.sharedModule=angular.module("hawtio-shared",[]).component("hawtioActionBar",e.hawtioActionBarComponent).component("hawtioLoading",e.hawtioLoadingComponent).name}(Shared||(Shared={})),function(e){n.$inject=["$provide"];var t="hawtio-core-template-cache",l=Logger.get(t);function n(e){e.decorator("$templateCache",["$delegate",function(n){var i=n.put;n.watches={},n.put=function(e,t){l.debug("Adding template:",e),i(e,t),e in n.watches&&(l.debug("Found watches for id:",e),n.watches[e].forEach(function(e){e(t)}),l.debug("Removing watches for id:",e),delete n.watches[e])};var r=n.get;return n.get=function(e){var t=r(e);return l.debug("Getting template:",e),t},n}]),e.decorator("$templateRequest",["$rootScope","$timeout","$q","$templateCache","$delegate",function(e,r,o,a,s){var t=function(t,e){l.debug("request for template at:",t);var n=a.get(t),i=o.defer();return angular.isDefined(n)?(l.debug("Found template for URL:",t),r(function(){i.resolve(n)},1),i.promise):(l.debug("No template in cache for URL:",t),"watches"in a?(l.debug("Adding watch to $templateCache for url:",t),a.watches[t]||(a.watches[t]=[]),a.watches[t].push(function(e){l.debug("Resolving watch on template:",t),i.resolve(e)}),i.promise):s(t,e))};return t.totalPendingRequests=0,t}])}e.templateCacheModule=angular.module(t,[]).config(n).name}(Core||(Core={})),function(e){e.appModule=angular.module("hawtio",["ng","ngRoute","ngSanitize","patternfly","patternfly.modals","patternfly.table","patternfly.toolbars",About.aboutModule,Core.authModule,Core.configModule,Core.coreModule,Core.eventServicesModule,Core.hawtioExtensionModule,Core.preferencesModule,Core.templateCacheModule,Help.helpModule,Init.initModule,Page.pageModule,Nav.navigationModule,Shared.sharedModule]).run(e.configureAboutPage).component("hawtioApp",e.appComponent).name,hawtioPluginLoader.addModule(e.appModule).registerPreBootstrapTask({name:"ConfigLoader",task:Core.configLoader})}(App||(App={})),(Page||(Page={})).CLOSE_MAIN_NAV_EVENT="CLOSE_MAIN_NAV_EVENT",function(e){function t(e,n,i){void 0===i&&(i="id");var t=e.length;return _.remove(e,function(t){return!_.some(n,function(e){return e[i]===t[i]})}),e.length!==t}e.removeElements=t,e.sync=function(n,e,i){void 0===i&&(i="id");var r=t(n,e,i);return e&&e.forEach(function(t){var e=_.find(n,function(e){return e[i]===t[i]});e?t!==e&&(angular.copy(t,e),r=!0):(r=!0,n.push(t))}),r}}(ArrayHelpers||(ArrayHelpers={})),function(o){var t=/\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:/i;o.isDate=function(e){return!!angular.isString(e)&&t.test(e)},o.obfusicate=function(e){return angular.isString(e)?e.split("").map(function(e){return"*"}).join(""):null},o.toString=function i(e){if(!e)return"{ null }";var r=[];return angular.forEach(e,function(e,t){var n=e;"password"===(""+t).toLowerCase()?n=o.obfusicate(e):angular.isObject(n)&&(n=i(n)),r.push(t+": "+n)}),"{ "+r.join(", ")+" }"}}(StringHelpers||(StringHelpers={})),function(e){var i=Logger.get("hawtio-core-utils-url-helpers");function r(e){return e&&_.startsWith(e,"#")?e.substring(1):e}function o(e){return-1!==e.indexOf("?")?e.split("?")[0]:e}function a(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=[],i=e.length-1;return e.forEach(function(e,t){Core.isBlank(e)||("/"!==e?(0!==t&&e.match(/^\//)&&(e=e.slice(1)),t!==i&&e.match(/\/$/)&&(e=e.slice(0,e.length-1)),Core.isBlank(e)||n.push(e)):n.push(""))}),n.join("/")}e.noHash=r,e.extractPath=o,e.contextActive=function(e,t){var n=o(e);return _.endsWith(t,"/")&&_.startsWith(t,"/")?-1<n.indexOf(t):_.startsWith(t,"/")?_.startsWith(r(n),t):_.endsWith(n,t)},e.join=a,e.parseQueryString=function(e){var t=new URI(e);return URI.parseQuery(t.query())},e.maybeProxy=function(e,t){if(e&&_.startsWith(e,"proxy/"))return i.debug("Jolokia URL is proxied, applying proxy to:",t),a("proxy",t);var n=window.location.origin;return t&&_.startsWith(t,"http")&&!_.startsWith(t,n)?(i.debug("Url doesn't match page origin:",n,"applying proxy to:",t),a("proxy",t)):(i.debug("No need to proxy:",t),t)},e.escapeColons=function(e){return _.startsWith(e,"proxy")?e.replace(/:/g,"\\:"):e.replace(/:([^\/])/,"\\:$1")}}(UrlHelpers||(UrlHelpers={})),function(n){var t=null;n._resetUrlPrefix=function(){t=null},n.url=function(e){return e&&_.startsWith(e,"/")&&(t||(t=$("base").attr("href")||"",_.endsWith(t,"/")&&(t=t.substring(0,t.length-1))),t)?t+e:e},n.windowLocation=function(){return window.location},n.unescapeHTML=function(e){var t=document.createElement("textarea");return t.innerHTML=e,t.value},n.trimLeading=function(e,t){return e&&t&&(_.startsWith(e,t)||0===e.indexOf(t))?e.substring(t.length):e},n.trimTrailing=function(e,t){return e&&t&&_.endsWith(e,t)?e.substring(0,e.length-t.length):e},n.adjustHeight=function(){var e=$(window).height()-$("#main-nav").height();$("#main").css("min-height",e+"px")},n.isChromeApp=function(){var t=!1;try{t=!!(chrome&&chrome.app&&chrome.extension)}catch(e){t=!1}return t};var e={};function i(e){return""+e}function r(e){if(e.$$phase)return e.$$phase;if(HawtioCore.injector){var t=HawtioCore.injector.get("$rootScope");if(t)return t.$$phase}}n.getLocalStorage=function(){return window.localStorage||e},n.asArray=function(e){return angular.isArray(e)?e:[e]},n.parseBooleanValue=function(e,t){if(void 0===t&&(t=!1),!angular.isDefined(e)||!e)return t;if(e.constructor===Boolean)return e;if(angular.isString(e))switch(e.toLowerCase()){case"true":case"1":case"yes":return!0;default:return!1}if(angular.isNumber(e))return 0!==e;throw new Error("Can't convert value "+e+" to boolean")},n.toString=function(e){return angular.isNumber(e)?i(e):angular.toJson(e,!0)},n.booleanToString=function(e){return""+e},n.parseIntValue=function(t,n){if(void 0===n&&(n="integer"),angular.isString(t))try{return parseInt(t)}catch(e){console.log("Failed to parse "+n+" with text '"+t+"'")}else if(angular.isNumber(t))return t;return null},n.numberToString=i,n.parseFloatValue=function(t,n){if(void 0===n&&(n="float"),angular.isString(t))try{return parseFloat(t)}catch(e){console.log("Failed to parse "+n+" with text '"+t+"'")}else if(angular.isNumber(t))return t;return null},n.pathGet=function(e,t){var n=angular.isArray(t)?t:(t||"").split("."),i=e;return angular.forEach(n,function(e){if(!i)return null;try{i=i[e]}catch(e){return null}}),i},n.pathSet=function(e,t,i){var n=angular.isArray(t)?t:(t||"").split("."),r=e,o=n.length-1;return angular.forEach(n,function(e,t){var n=r[e];(o<=t||!angular.isObject(n))&&(n=t<o?{}:i,r[e]=n),r=n}),r},n.$applyNowOrLater=function(e){r(e)?setTimeout(function(){n.$apply(e)},50):e.$apply()},n.$applyLater=function(e,t){void 0===t&&(t=50),setTimeout(function(){n.$apply(e)},t)},n.$apply=function(e){r(e)||e.$apply()},n.$digest=function(e){r(e)||e.$digest()};var o={"#":"&#35;","'":"&#39;","<":"&lt;",">":"&gt;",'"':"&quot;"};function a(e){var t=_.trimStart(e,"'\"");return e&&t.length<e.length?_.trimEnd(t,"'\""):e}n.unescapeHtml=function(i){return angular.forEach(o,function(e,t){var n=new RegExp(e,"g");i=i.replace(n,t)}),i=i.replace(/&gt;/g,">")},n.escapeHtml=function(e){if(angular.isString(e)){for(var t="",n=0;n<e.length;n++){var i=e.charAt(n);t+=i=o[i]||i}return t}return e},n.isBlank=function(e){return null==e||!!angular.isString(e)&&0===e.trim().length},n.trimQuotes=a,n.humanizeValue=function(e){if(e){var t=e+"";if(n.isBlank(t))return t;try{t=_.snakeCase(t),t=_.capitalize(t.split("_").join(" "))}catch(e){}return a(t)}return e}}(Core||(Core={})),function(e){var t="hawtio-core-compile",n=Logger.get(t);e._module=angular.module(t,[]).run(function(){n.debug("Module loaded")}).directive("compile",["$compile",function(r){return function(t,n,i){t.$watch(function(e){return e.$eval(i.compile)},function(e){n.html(e),r(n.contents())(t)})}}]),hawtioPluginLoader.addModule(t)}(HawtioCompile||(HawtioCompile={})),function(e){var a=Logger.get("hawtio-core-utils-controller-helpers");e.createClassSelector=function(n){return function(e,t){return e===t&&e in n?n[e]:""}},e.createValueClassSelector=function(t){return function(e){return e in t?t[e]:""}},e.bindModelToSearchParam=function(e,n,t,i,r,o,a){t in e||(e[t]=r);var s=o||Core.doNothing,l=(a||Core.doNothing)(n.search()[i]||r);Core.pathSet(e,t,l),e.$watch(t,function(e,t){e!==t&&(null!=e?n.search(i,s(e)):n.search(i,""))})},e.reloadWhenParametersChange=function(e,t,i,r){void 0===r&&(r=["nid"]);var o=angular.copy(i.search());t.$on("$routeUpdate",function(){var t=i.search(),n=[];angular.forEach(r,function(e){t[e]!==o[e]&&n.push(e)}),n.length&&(a.debug("Reloading page due to change to parameters:",n),e.reload())})}}(ControllerHelpers||(ControllerHelpers={})),function(d){var i=Logger.get("hawtio-core-utils");function t(e){return e.replace(/\./g,"-")}d.lazyLoaders={},d.numberTypeNames={byte:!0,short:!0,int:!0,long:!0,float:!0,double:!0,"java.lang.byte":!0,"java.lang.short":!0,"java.lang.integer":!0,"java.lang.long":!0,"java.lang.float":!0,"java.lang.double":!0},d.lineCount=function(e){var t=0;return e&&(t=1,e.toString().each(/\n/,function(){return t++})),t},d.safeNull=function(e){return"boolean"==typeof e?e+"":"number"==typeof e?e+"":e||""},d.safeNullAsString=function(e,t){if("boolean"==typeof e)return""+e;if("number"==typeof e)return""+e;if("string"==typeof e)return""+e;if("javax.management.openmbean.CompositeData"===t||"[Ljavax.management.openmbean.CompositeData;"===t||"java.util.Map"===t)return angular.toJson(e,!0);if("javax.management.ObjectName"===t)return""+(null==e?"":e.canonicalName);if("javax.management.openmbean.TabularData"!==t)return angular.isArray(e)?e.join("\n"):e?""+e:"";var n=[];for(var i in e){var r=i+"="+e[i];n.push(r)}return(n=_.sortBy(n,function(e){return e.toString()})).join("\n")},d.toSearchArgumentArray=function(e){if(e){if(angular.isArray(e))return e;if(angular.isString(e))return e.split(",")}return[]},d.folderMatchesPatterns=function(e,t){if(e){var r=e.folderNames;if(r)return t.any(function(e){for(var t=0;t<e.length;t++){var n=r[t],i=e[t];if(!n)return!1;if(i.indexOf(n)<0)return!1}return!0})}return!1},d.supportsLocalStorage=function(){try{return"localStorage"in window&&null!==window.localStorage}catch(e){return!1}},d.isNumberTypeName=function(e){if(e){var t=e.toString().toLowerCase();return d.numberTypeNames[t]}return!1},d.escapeDots=t,d.escapeTreeCssStyles=function(e){return t(e).replace(/span/g,"sp-an")},d.showLogPanel=function(){var e=$("#log-panel"),t=$("body");localStorage.showLog="true",e.css({bottom:"50%"}),t.css({"overflow-y":"hidden"})},d.logLevelClass=function(e){if(e){var t=e[0];if("w"===t||"W"===t)return"warning";if("e"===t||"E"===t)return"error";if("i"===t||"I"===t)return"info";if("d"===t||"D"===t)return""}return""},d.toPath=function(e){return d.isBlank(e)?e:_.startsWith(e,"#")?e.substring(1):e},d.createHref=function(e,t,n){void 0===n&&(n=null);var i=angular.copy(e.search());n&&angular.forEach(n,function(e){return delete i[e]});var r=d.hashToString(i);if(r){var o=0<=t.indexOf("?")?"&":"?";t+=o+r}return t},d.hashToString=function(e){var n=[];angular.forEach(e,function(e,t){n.push(t+"="+e)});var t=n.join("&");return encodeURI(t)},d.stringToHash=function(e){var r={};if(e){var t=decodeURI(e).split("&");angular.forEach(t,function(e){var t=e.split("="),n=t[0],i=t[1]||n;r[n]=i})}return r},d.xmlNodeToString=function(t){try{return(new XMLSerializer).serializeToString(t)}catch(e){try{return t.xml}catch(e){console.log("WARNING: XMLSerializer not supported")}}return!1},d.isTextNode=function(e){return e&&3===e.nodeType},d.fileExtension=function(e,t){void 0===t&&(t="");var n=t;if(e){var i=e.lastIndexOf(".");0<i&&(n=e.substring(i+1,e.length).toLowerCase())}return n},d.getUUID=function(){var e=new Date,t=1e3*e.getTime()+e.getUTCMilliseconds(),n=Math.floor(65536*(1+Math.random()));return t.toString(16)+n.toString(16)};var o=/[^\d]*(\d+)\.(\d+)(\.(\d+))?.*/;function a(e,t){return e+" "+(1===e?t:t+"s")}d.parseVersionNumbers=function(e){if(e){var t=e.match(o);if(t&&4<t.length){var n=t[1],i=t[2],r=t[4];if(angular.isDefined(r))return[parseInt(n),parseInt(i),parseInt(r)];if(angular.isDefined(i))return[parseInt(n),parseInt(i)];if(angular.isDefined(n))return[parseInt(n)]}}return null},d.versionToSortableString=function(e,n){return void 0===n&&(n=4),(e||"").split(".").map(function(e){var t=e.length;return n<=t?e:_.padStart(e,n-t," ")}).join(".")},d.time=function(e,t){var n=(new Date).getTime(),i=t(),r=(new Date).getTime()-n;return console.log(e+" "+r),i},d.compareVersionNumberArrays=function(e,t){if(e&&!t)return 1;if(!e&&t)return-1;if(e===t)return 0;for(var n=0;n<e.length;n++){var i=e[n];if(n>=t.length)return 1;var r=t[n];if(!angular.isDefined(i))return-1;if(!angular.isDefined(r))return 1;if(r<i)return 1;if(i<r)return-1}return 0},d.valueToHtml=function n(t){if(angular.isArray(t)){var e=t.length;if(e){if(1===e)return n(t[0]);var i="<ul>";return angular.forEach(t,function(e){i+="<li>"+n(e)+"</li>"}),i+"</ul>"}return""}if(angular.isObject(t)){var r="<table>";return angular.forEach(t,function(e,t){r+="<tr><td>"+t+"</td><td>"+n(e)+"</td></tr>"}),r+"</table>"}if(angular.isString(t)){var o=t;return angular.forEach(["http://","https://","file://","mailto:"],function(e){_.startsWith(o,e)&&(o="<a href='"+t+"'>"+t+"</a>")}),o}return t},d.tryParseJson=function(e){if(e=_.trim(e),_.startsWith(e,"[")&&_.endsWith(e,"]")||_.startsWith(e,"{")&&_.endsWith(e,"}"))try{return JSON.parse(e)}catch(e){}return null},d.maybePlural=a,d.objectNameProperties=function(e){var r={};if(e){var t=e.indexOf(":");if(0<t){var n=e.substring(t+1).split(",");angular.forEach(n,function(e){var t=e.split("="),n=t[0],i=t[1]||n;r[n]=i})}}return r},d.toSafeDomID=function(e){return e?e.replace(/(\/|\.)/g,"_"):e},d.forEachLeafFolder=function n(e,i){angular.forEach(e,function(e){var t=e.children;angular.isArray(t)&&0<t.length?n(t,i):i(e)})},d.extractHashURL=function(e){var t=e.split("#");if(0===t.length)return e;var n=t[1];return 1<t.length&&t.slice(2).forEach(function(e){n=n+"#"+e}),n};var l=new RegExp("^(https?)://(([^:/?#]*)(?::([0-9]+))?)");d.parseUrl=function(e){if(d.isBlank(e))return null;var t=e.match(l);if(null===t)return null;var n=t[1],i=t[3],r=t[4],o=null;o=d.isBlank(r)?e.split(i):e.split(r);var a=d.parseIntValue(r),s=o[1];return s&&_.startsWith(s,"/")&&(s=s.slice(1,s.length)),{scheme:n,host:i,port:a,path:s}},d.getDocHeight=function(){var e=document;return Math.max(Math.max(e.body.scrollHeight,e.documentElement.scrollHeight),Math.max(e.body.offsetHeight,e.documentElement.offsetHeight),Math.max(e.body.clientHeight,e.documentElement.clientHeight))},d.useProxyIfExternal=function(e){if(d.isChromeApp())return e;var t=window.location.host;if(!_.startsWith(e,"http://"+t+"/")&&!_.startsWith(e,"https://"+t+"/")){var n=e.indexOf("://");0<n&&(e=e.substring(n+3)),e=e.replace(":","/"),e=d.trimLeading(e,"/"),e=d.trimTrailing(e,"/"),e=d.url("/proxy/"+e)}return e},d.extractTargetUrl=function(e,t,n){angular.isUndefined(t)&&(t=e.scheme());var i=e.host(),r=e.absUrl(),o=r.indexOf("url=");if(0<o){r=r.substr(o+4);var a=decodeURIComponent(r);if(a&&0<(o=a.indexOf("/proxy/"))){0<(o=(a=a.substr(o+7)).indexOf("://"))&&(a=a.substr(o+3));var s=a.split("/");if(1<=s.length&&(i=s[0]),angular.isUndefined(n)&&2<=s.length){var l=d.parseIntValue(s[1],"port number");l&&(n=l)}}}angular.isUndefined(n)&&(n=e.port());var c=t+"://"+i;return 80!=n&&(c+=":"+n),c},d.isProxyUrl=function(e){return 0<e.url().indexOf("/hawtio/proxy/")},d.doNothing=function(e){return e},d.bindModelToSearchParam=ControllerHelpers.bindModelToSearchParam,d.reloadWhenParametersChange=ControllerHelpers.reloadWhenParametersChange,d.throttled=function(t,n){var i=0,r=null;return function(){var e=Date.now();return i<e&&(i=e+n,r=t()),r}},d.parseJsonText=function(t,n){void 0===n&&(n="JSON");var e=null;try{e=angular.fromJson(t)}catch(e){i.info("Failed to parse "+n+" from: "+t+". "+e)}return e},d.humanizeValueHtml=function(e){return!0===e?'<i class="icon-check"></i>':!1===e?'<i class="icon-check-empty"></i>':d.humanizeValue(e)},d.getQueryParameterValue=function(e,t){for(var n=(e||"").split("?"),i=(n&&0<n.length?n[1]:"").split("&"),r=0;r<i.length;r++){var o=i[r].split("=");if(decodeURIComponent(o[0])==t)return decodeURIComponent(o[1])}return null},d.humanizeMilliseconds=function(e){if(!angular.isNumber(e))return"XXX";var t=e/1e3,n=Math.floor(t/31536e3);if(n)return a(n,"year");var i=Math.floor((t%=31536e3)/86400);if(i)return a(i,"day");var r=Math.floor((t%=86400)/3600);if(r)return a(r,"hour");var o=Math.floor((t%=3600)/60);return o?a(o,"minute"):(t=Math.floor(t%60))?a(t,"second"):e+" ms"},d.getRegexs=function(){var e=[];try{e=angular.fromJson(localStorage.regexs)}catch(e){delete localStorage.regexs}return e},d.removeRegex=function(t){var e=d.getRegexs(),n=function(e){return e.name===t};e.any(n)&&(e=e.exclude(n),d.writeRegexs(e))},d.writeRegexs=function(e){localStorage.regexs=angular.toJson(e)},d.maskPassword=function(e){e&&(e=e.replace(new RegExp("(.*://.*:)(.*)(@)","i"),"$1xxxxxx$3"));return e},d.matchFilterIgnoreCase=function(t,e){if(angular.isUndefined(t)||angular.isUndefined(e))return!0;if(null==t||null==e)return!0;if(t=t.toString().trim().toLowerCase(),e=e.toString().trim().toLowerCase(),0===t.length||0===e.length)return!0;var n=e.split(",");return(n=n.filter(function(e){return 0<e.length}).map(function(e){return e.trim()})).some(function(e){return-1<t.indexOf(e)})}}(Core||(Core={})),function(e){var t="hawtio-core-filters",n=angular.module(t,[]);n.filter("valueToHtml",function(){return Core.valueToHtml}),n.filter("humanize",function(){return Core.humanizeValue}),n.filter("humanizeMs",function(){return Core.humanizeMilliseconds}),n.filter("maskPassword",function(){return Core.maskPassword});var i=function(e){return humandate.relativeTime(e)};n.filter("relativeTime",function(){return i}),n.filter("humanizeDate",function(){return i}),n.filter("humanizeDuration",function(){return function(e){return humanizeDuration(e,{round:!0})}}),hawtioPluginLoader.addModule(t)}(CoreFilters||(CoreFilters={})),function(e){function a(e,t,n,i){if(void 0===n&&(n=-1),void 0===i&&(i=0),0<n&&n<=i||50<i)return!1;var r=t.toLowerCase(),o=!1;return angular.isString(e)?o=-1!==e.toLowerCase().indexOf(r):angular.isNumber(e)?o=-1!==(""+e).toLowerCase().indexOf(r):angular.isArray(e)?o=_.some(e,function(e){return a(e,r,n,i+1)}):angular.isObject(e)&&(o=a(_.values(e),r,n,i)),o}e.log=Logger.get("hawtio-core-utils-filter-helpers"),e.search=function(t,e,n,i){void 0===n&&(n=-1),void 0===i&&(i=!0);var r=e.split(" "),o=_.filter(r,function(e){return a(t,e,n)});return i?o.length===r.length:0<o.length},e.searchObject=a}(FilterHelpers||(FilterHelpers={})),(Core||(Core={})).operationToString=function(e,t){return t&&0!==t.length?e+"("+t.map(function(e){return angular.isString(e)&&(e=angular.fromJson(e)),e.type}).join(",")+")":e+"()"},function(n){var c=/\s*at\s+([\w\.$_]+(\.([\w$_]+))*)\((.*)?:(\d+)\).*\[(.*)\]/;n.formatStackTrace=function(e){if(!e)return"";if(!angular.isArray(e)&&angular.isString(e)&&(e=e.split("\n")),!angular.isArray(e))return"";var t='<ul class="unstyled">\n';return e.forEach(function(e){return t+="<li>"+n.formatStackLine(e)+"</li>\n"}),t+="</ul>\n"},n.formatStackLine=function(e){var t=c.exec(e);if(t&&6<t.length){var n=t[1],i=t[4],r=(e=t[5],t[6]);if(n&&i&&r){var o=n,a=n.lastIndexOf(".");0<a&&(o=n.substring(0,a));var s="#/source/view/"+r+"/class/"+o+"/"+i;return angular.isDefined(e)&&(s+="?line="+e),"<div class='stack-line'>  at <a href='"+s+"'>"+n+"</a>(<span class='fileName'>"+i+"</span>:<span class='lineNumber'>"+e+"</span>)[<span class='mavenCoords'>"+r+"</span>]</div>"}}var l=!0;return e&&(e=_.trim(e),_.startsWith(e,"at")&&(e="  "+e,l=!1)),l?'<pre class="stack-line bold">'+e+"</pre>":'<pre class="stack-line">'+e+"</pre>"}}(Log||(Log={})),(ObjectHelpers||(ObjectHelpers={})).toMap=function(e,t,n){if(!e||0===e.length)return{};var i={};return e.forEach(function(e){angular.isObject(e)&&(i[e[t]]=e,angular.isFunction(n)&&n(e))}),i},function(e){e.createControllerFunction=function(n,i){return function(e,t){return n.controller(i+"."+e,t)}},e.createRoutingFunction=function(n){return function(e,t){return void 0===t&&(t=!0),{templateUrl:UrlHelpers.join(n,e),reloadOnSearch:t}}}}(PluginHelpers||(PluginHelpers={})),function(i){var l=Logger.get("hawtio-core-utils");i.parsePreferencesJson=function(e,t){var n=null;return angular.isDefined(e)&&(n=i.parseJsonText(e,"localStorage for "+t)),n},i.initPreferenceScope=function(a,s,e){angular.forEach(e,function(i,r){a[r]=i.value;var e=i.converter,o=i.formatter;if(o||(o=function(e){return e}),e||(e=function(e){return e}),r in s){var t=e(s[r]);l.debug("from local storage, setting ",r," to ",t),a[r]=t}else t=i.value,l.debug("from default, setting ",r," to ",t),s[r]=t;var n=i.override;n||(n=function(e,t){if(e!==t&&null!=e){angular.isFunction(i.pre)&&i.pre(e);var n=o(e);l.debug("to local storage, setting ",r," to ",n),s[r]=n,angular.isFunction(i.post)&&i.post(e)}}),i.compareAsObject?a.$watch(r,n,!0):a.$watch(r,n)})},i.isValidFunction=function(e,t,n){return!t||t(e,n)}}(Core||(Core={})),function(e){Logger.get("hawtio-core-utils-selection-helpers");function n(e){e.forEach(function(e){e.selected=!1})}function t(e,t){e.forEach(function(e){t?t(e)&&(e.selected=!0):e.selected=!0})}function i(e){e.selected=!e.selected}function r(e,t){n(e),i(t)}function o(e,t,n){n.ctrlKey?i(t):t.selected?i(t):r(e,t)}function a(e){e.length=0}function s(e,t,n){var i=n||_.matches(t);_.some(e,i)?_.remove(e,i):e.push(t)}function l(e,t){return angular.isDefined(e)?e:t}function c(e){return l(e,!1)}function d(e){return l(e,!0)}function u(e,t,n){return e?d(t):c(n)}function p(e,t,n,i,r){if(!e)return c(i);var o=r||_.matches(t);return u(_.some(e,o),n,i)}function h(e,t,n,i,r){if(0===e.length)return d(n);var o=r||t;return angular.isArray(t)?u(_.intersection(e,t).length===e.length,n,i):u(e.any(o),n,i)}e.selectNone=n,e.selectAll=t,e.toggleSelection=i,e.selectOne=r,e.sync=function(e,t,n){return t.forEach(function(t){t.selected=_.some(e,function(e){return e[n]===t[n]})}),_.filter(t,function(e){return e.selected})},e.select=o,e.isSelected=function(e,t,n){return u(e.selected,t,n)},e.clearGroup=a,e.toggleSelectionFromGroup=s,e.isInGroup=p,e.filterByGroup=h,e.syncGroupSelection=function(e,n,i){var r=[];i?e.forEach(function(t){var e=_.find(n,function(e){return t[i]===e[i]});e&&r.push(e)}):e.forEach(function(t){var e=_.find(n,function(e){return _.isEqual(t,e)});e&&r.push(e)}),a(e),e.push.apply(e,r)},e.decorate=function(e){e.selectNone=n,e.selectAll=t,e.toggleSelection=i,e.selectOne=r,e.select=o,e.clearGroup=a,e.toggleSelectionFromGroup=s,e.isInGroup=p,e.viewOnly=!1,e.filterByGroup=h}}(SelectionHelpers||(SelectionHelpers={})),(StorageHelpers||(StorageHelpers={})).bindModelToLocalStorage=function(n){var i=(n.$scope.name+":"||"::")+n.modelName,r=n.to||Core.doNothing,t=n.from||Core.doNothing,e=function(e){return null==e&&(e=n.localStorage[i]),t(e)},o=e(void 0);ControllerHelpers.bindModelToSearchParam(n.$scope,n.$location,n.modelName,n.paramName,o||n.initialValue,function(e){angular.isFunction(n.onChange)&&n.onChange(e);var t=r(e);return n.localStorage[i]=t},e)},function(t){t.scrollBarWidth=null,t.findParentWith=function e(t,n){return n in t?t:t.$parent?e(t.$parent,n):null},t.getIfSet=function(e,t,n){if(e in t){var i=t[e];if(!Core.isBlank(i))return i}return n},t.observe=function(t,e,n,i,r){void 0===r&&(r=null),e.$observe(n,function(e){angular.isDefined(e)?t[n]=e:t[n]=i,angular.isDefined(r)&&r&&r(t[n])})},t.getScrollbarWidth=function(){if(!angular.isDefined(t.scrollBarWidth)){var e=document.createElement("div");e.innerHTML='<div style="width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;"><div style="width:1px;height:100px;"></div></div>',e=e.firstChild,document.body.appendChild(e),t.scrollBarWidth=e.offsetWidth-e.clientWidth,document.body.removeChild(e)}return t.scrollBarWidth}}(UI||(UI={})),angular.module("hawtio-core").run(["$templateCache",function(e){e.put("about/about.component.html",'<div class="pf-c-backdrop" ng-if="$ctrl.open">\n  <div class="pf-l-bullseye">\n    <div class="pf-c-about-modal-box" role="dialog" aria-modal="true" aria-labelledby="about-modal-title">\n      <div class="pf-c-about-modal-box__brand">\n        <img class="pf-c-about-modal-box__brand-image" ng-src="{{$ctrl.imgSrc}}">\n      </div>\n      <div class="pf-c-about-modal-box__close">\n        <button aria-label="Close Dialog" class="pf-c-button pf-m-plain" type="button" ng-click="$ctrl.close()">\n          <i class="fa fa-times" aria-hidden="true"></i>\n        </button>\n      </div>\n      <div class="pf-c-about-modal-box__header">\n        <h1 class="pf-c-title pf-m-4xl">{{$ctrl.title}}</h1>\n      </div>\n      <div class="pf-c-about-modal-box__hero">\n      </div>\n      <div class="pf-c-about-modal-box__content">\n        <div class="pf-c-content">\n            <dl>\n              <dt ng-repeat-start="item in $ctrl.productInfo">{{item.name}}</dt>\n              <dd ng-repeat-end>{{item.value}}</dd>\n            </dl>\n        </div>\n        <div class="pf-c-about-modal-box__strapline">\n          <p class="pf-c-title pf-m-md">{{$ctrl.copyright}}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'),e.put("help/help.component.html",'<div>\n  <h1>Help</h1>\n  <ul class="nav nav-tabs">\n    <li ng-repeat="topic in $ctrl.topics" ng-class="{active : topic === $ctrl.selectedTopic}">\n      <a href="#" ng-click="$ctrl.onSelectTopic(topic)">{{topic.label}}</a>\n    </li>\n  </ul>\n  <ul class="nav nav-tabs nav-tabs-pf help-secondary-tabs" ng-if="$ctrl.subTopics.length > 1">\n    <li ng-repeat="subTopic in $ctrl.subTopics" ng-class="{active : subTopic === $ctrl.selectedSubTopic}">\n      <a ng-href="#" ng-click="$ctrl.onSelectSubTopic(subTopic)">\n        {{subTopic.label === $ctrl.selectedTopic.label ? \'Home\' : subTopic.label}}\n      </a>\n    </li>\n  </ul>\n  <div ng-bind-html="$ctrl.html"></div>\n</div>\n'),e.put("preferences/logging-preferences/logging-preferences.html",'<div ng-controller="PreferencesLoggingController">\n  <form class="form-horizontal logging-preferences-form">\n    <div class="form-group" ng-class="{\'has-error\': logBuffer === null || logBuffer === undefined}">\n      <label class="col-md-2 control-label" for="log-buffer">\n        Log buffer\n        <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="Number of log statements to keep in the console"></span>\n      </label>\n      <div class="col-md-6">\n        <input type="number" id="log-buffer" class="form-control" min="1" ng-model="logBuffer" ng-blur="onLogBufferChange(logBuffer)">\n        <span class="help-block" ng-show="logBuffer === null || logBuffer === undefined">Invalid value</span>\n      </div>\n    </div>\n    <div class="form-group">\n      <label class="col-md-2 control-label" for="log-level">Global log level</label>\n      <div class="col-md-6">\n        <select id="log-level" class="form-control" ng-model="logLevel"\n                ng-options="logLevel.name for logLevel in availableLogLevels track by logLevel.name"\n                ng-change="onLogLevelChange(logLevel)">\n        </select>\n      </div>\n    </div>\n    <div class="form-group">\n      <label class="col-md-2 control-label" for="log-buffer">Child loggers</label>\n      <div class="col-md-6">\n        <div class="form-group" ng-repeat="childLogger in childLoggers track by childLogger.name">\n          <label class="col-md-4 control-label child-logger-label" for="log-level">\n            {{childLogger.name}}\n          </label>\n          <div class="col-md-8">\n            <select id="log-level" class="form-control child-logger-select" ng-model="childLogger.filterLevel"\n                    ng-options="logLevel.name for logLevel in availableLogLevels track by logLevel.name"\n                    ng-change="onChildLoggersChange(childLoggers)">\n            </select>\n            <button type="button" class="btn btn-default child-logger-delete-button" ng-click="removeChildLogger(childLogger)">\n              <span class="pficon pficon-delete"></span>\n            </button>\n          </div>\n        </div>\n        <div>\n          <div class="dropdown">\n            <button class="btn btn-default dropdown-toggle" type="button" id="addChildLogger" data-toggle="dropdown">\n              Add\n              <span class="caret"></span>\n            </button>\n            <ul class="dropdown-menu" role="menu" aria-labelledby="addChildLogger">\n              <li role="presentation" ng-repeat="availableChildLogger in availableChildLoggers track by availableChildLogger.name">\n                <a role="menuitem" tabindex="-1" href="#" ng-click="addChildLogger(availableChildLogger)">\n                  {{ availableChildLogger.name }}\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n'),e.put("preferences/preferences-home/preferences-home.html",'<div ng-controller="PreferencesHomeController">\n  <button class="btn btn-primary pull-right" ng-click="close()">Close</button>\n  <h1>\n    Preferences\n  </h1>\n  <hawtio-tabs tabs="tabs" active-tab="getTab(pref)" on-change="setPanel(tab)"></hawtio-tabs>\n  <div ng-include="getPrefs(pref)"></div>\n</div>\n'),e.put("preferences/reset-preferences/reset-preferences.html",'<div ng-controller="ResetPreferencesController">\n  <div class="alert alert-success preferences-reset-alert" ng-if="showAlert">\n    <span class="pficon pficon-ok"></span>\n    Settings reset successfully!\n  </div>\n  <h3>Reset settings</h3>\n  <p>\n    Clear all custom settings stored in your browser\'s local storage and reset to defaults.\n  </p>\n  <p>\n    <button class="btn btn-danger" ng-click="doReset()">Reset settings</button>\n  </p>\n</div>'),e.put("help/help.md",'## Plugin Help\n\nBrowse the available help topics for plugin specific documentation using the help navigation bar.\n\n### Further Reading\n\n- [Hawtio](https://hawt.io "Hawtio") website\n- Chat with the Hawtio team on IRC by joining **#hawtio** on **irc.freenode.net**\n- Help improve Hawtio by [contributing](https://hawt.io/docs/contributing/)\n- Hawtio on [GitHub](https://github.com/hawtio/hawtio)\n'),e.put("preferences/help.md","## Preferences\n\nThe preferences page is used to configure application preferences and individual plugin preferences.\n\nThe preferences page is accessible by clicking the user icon (<i class='fa pficon-user'></i>) in the main navigation bar,\nand then by choosing the preferences sub menu option.\n")}]),function(e){e.pluginName="hawtio-oauth",e.log=Logger.get(e.pluginName),e.oauthPlugins=[]}(HawtioOAuth||(HawtioOAuth={})),function(n){var t=null;function i(){return t||(n.log.debug("Finding 'userProfile' from the active OAuth plugin"),function(){var e=_.find(n.oauthPlugins,function(e){var t=Core.pathGet(window,[e,"userProfile"]);return n.log.debug("Module:",e,"userProfile:",t),!_.isNil(t)});t=Core.pathGet(window,[e,"userProfile"]),n.log.debug("Active OAuth plugin:",e)}()),t}function r(){var e=i();return e?e.token:null}n.getUserProfile=i,n.getOAuthToken=r,n.authenticatedHttpRequest=function(e){return $.ajax(_.extend(e,{beforeSend:function(e){var t=r();t&&e.setRequestHeader("Authorization","Bearer "+t)}}))}}(HawtioOAuth||(HawtioOAuth={})),function(e){e.pluginName="hawtio-oauth-github",e.log=Logger.get(e.pluginName),e.templatePath="plugins/github/html";var i="GithubOAuthSettings";e.emptyBeforeSend=function(){return!0},e.getTokenCheckAuthURL=function(e){return UrlHelpers.join("https://api.github.com/applications",e.clientId,"tokens",e.accessToken)},e.getTokenCheckAuthHeader=function(e){return Core.getBasicAuthHeader(e.clientId,e.clientSecret)},e.getAuthHeader=function(e){return e.accessToken?"token "+e.accessToken:""},e.loadSettings=function(){var e={};if(i in localStorage){var t=localStorage[i];try{e=t=angular.fromJson(t)}catch(e){localStorage.removeItem(i)}}return e},e.storeSettings=function(e,t){void 0===t&&(t=void 0);var n={username:e.username,avatarURL:e.avatarURL,accessToken:e.accessToken,name:e.name};t&&(t.username=n.username,t.avatarURL=n.avatarURL,t.accessToken=n.accessToken,t.name=n.name),localStorage[i]=angular.toJson(n)}}(GithubOAuth||(GithubOAuth={})),function(i){i._module=angular.module(i.pluginName,[]);var r={enabled:!1,username:void 0,clientId:void 0,clientSecret:void 0,accessToken:void 0,avatarURL:void 0,name:void 0,scopes:["user","repo","read:org"],authURL:"https://github.com/login/oauth/authorize",tokenURL:"https://api.github.com/authorizations",loginURL:"https://api.github.com/user"};i._module.constant("githubOAuthSettings",r),i._module.service("GithubOAuth",["githubOAuthSettings",function(e){var t={settings:e,hasToken:function(){return!Core.isBlank(t.settings.accessToken)},getToken:function(){return t.settings.accessToken},getHeader:function(){return i.getAuthHeader(t.settings)},getPreferencesLink:function(){}};return t}]),i._module.run(["preferencesRegistry",function(e){e.addTab("Github",UrlHelpers.join(i.templatePath,"githubPreferences.html"),function(){return r.enabled}),i.log.debug("loaded")}]),hawtioPluginLoader.addModule(i.pluginName),hawtioPluginLoader.registerPreBootstrapTask({name:"GithubOAuthConfig",depends:["HawtioOAuthConfig"],task:function(e){if(window.HAWTIO_OAUTH_CONFIG){var t=r.clientId=Core.pathGet(HAWTIO_OAUTH_CONFIG,["github","clientId"]),n=r.clientSecret=Core.pathGet(HAWTIO_OAUTH_CONFIG,["github","clientSecret"]);t&&n&&(i.log.debug("enabled"),r.enabled=!0)}e()}}),hawtioPluginLoader.registerPreBootstrapTask({name:"GithubOAuthSettings",depends:["GithubOAuthConfig"],task:function(e){r.enabled&&_.assign(r,i.loadSettings()),e()}})}(GithubOAuth||(GithubOAuth={})),function(e){e.pluginName="hawtio-oauth-google",e.log=Logger.get(e.pluginName),e.userProfile=null}(GoogleOAuth||(GoogleOAuth={})),function(l){var i="googleAuthCreds";function r(e,t){var n=e.clientId,i=e.redirectURI,r=e.scope,o=e.authenticationURI,a=new URI(o);a.query({response_type:"code",client_id:n,redirect_uri:i,scope:r,approval_prompt:"force"});var s=a.toString();l.log.debug("Redirecting to URI: ",s),window.location.href=s}function o(e){if(l.log.debug("query: ",e),e.access_token&&"Bearer"===e.token_type){l.log.debug("Got token");var t=Core.getLocalStorage(),n={type:e.token_type.toLowerCase(),token:e.access_token,expiry:e.expires_in};return t[i]=angular.toJson(n),delete e.token_type,delete e.access_token,delete e.expires_in,n}l.log.info("No token in URI")}function a(){delete Core.getLocalStorage()[i]}function s(){var t=Core.getLocalStorage()[i];if(t)try{return angular.fromJson(t)}catch(e){l.log.warn("Failed to parse token json: "+t+". "+e)}return null}l.authenticatedHttpRequest=function(e,t){return $.ajax(_.extend(e,{beforeSend:function(e){t.token&&e.setRequestHeader("Authorization","Bearer "+t.token)}}))},l.setupJQueryAjax=function(n){$.ajaxSetup({beforeSend:function(e){var t=n.token;t&&e.setRequestHeader("Authorization","Bearer "+t)}})},l.doLogout=function(e,t){void 0===e&&(e=window.GoogleOAuthConfig),void 0===t&&(t=l.userProfile),console.debug("Logging out!"),s()||t.token;var n=new URI(window.location.href).removeQuery("code").toString();l.log.debug("Now logging in with URI: "+n),a(),r(GoogleOAuthConfig,{uri:n})},l.doLogin=r,l.exchangeCodeForToken=function(e,t,n){var i=e.clientId,r=e.clientSecret,o=e.redirectURI,a=new URI(e.tokenURI||"https://www.googleapis.com/oauth2/v3/token");a.query({code:t,client_id:i,client_secret:r,redirect_uri:o,grant_type:"authorization_code"});var s=a.toString();return l.log.debug("Redirecting to URI: ",s),$.ajax({type:"POST",url:s})},l.extractToken=o,l.clearTokenStorage=a,l.getTokenStorage=s,l.setTokenStorage=function(e){Core.getLocalStorage()[i]=angular.toJson(e)},l.checkToken=function(e){var t=Core.getLocalStorage(),n=void 0;if(i in t)try{n=angular.fromJson(t[i])}catch(e){a(),l.log.error("Error extracting googleAuthCreds value: ",e)}return n||(n=o(e)),l.log.debug("Using creds: ",n),n},l.checkAuthorizationCode=function(e){return e.query(!0).code},l.fetchUserInfo=function(e,t,n){e.get("https://www.googleapis.com/oauth2/v1/userinfo?alt=json&access_token="+HawtioOAuth.getUserProfile().access_token).success(t).error(n)}}(GoogleOAuth||(GoogleOAuth={})),function(r){HawtioOAuth.oauthPlugins.push("GoogleOAuth"),r._module=angular.module(r.pluginName,[]),hawtioPluginLoader.addModule(r.pluginName),r._module.config(["$provide",function(e){e.decorator("userDetails",["$delegate",function(e){return r.userProfile?_.merge(e,r.userProfile,{username:r.userProfile.fullName,logout:function(){r.doLogout(GoogleOAuthConfig,r.userProfile)}}):e}])}]),r._module.config(["$httpProvider",function(e){r.userProfile&&r.userProfile.token&&(e.defaults.headers.common={Authorization:"Bearer "+r.userProfile.token})}]),r._module.run(["userDetails",function(e){}]),hawtioPluginLoader.registerPreBootstrapTask({name:"GoogleOAuth",task:function(e){if(!window.GoogleOAuthConfig)return r.log.debug("oauth disabled"),void e();if(!(GoogleOAuthConfig.clientId&&GoogleOAuthConfig.redirectURI&&GoogleOAuthConfig.scope&&GoogleOAuthConfig.authenticationURI))return r.log.warn("Invalid oauth config, disabled oauth",GoogleOAuthConfig),void e();r.log.debug("config: ",GoogleOAuthConfig);var i=new URI(window.location.href);try{var t=r.getTokenStorage();if(t&&t.token)return r.userProfile=t,void e();r.clearTokenStorage()}catch(e){r.clearTokenStorage()}var n=r.checkAuthorizationCode(i);n?(r.log.info("found an authorization code so need to go back to google and get a token"),r.exchangeCodeForToken(GoogleOAuthConfig,n,{uri:i.toString()}).done(function(e){if(e&&e.access_token){var t={token:e.access_token,expiry:e.expires_in,type:e.token_type};r.userProfile=_.merge(t,e,{provider:r.pluginName}),r.setTokenStorage(r.userProfile),r.setupJQueryAjax(r.userProfile),r.log.info("Logged in with URL: "+window.location.href);var n=new URI(window.location.href).removeQuery("code").toString();r.log.info("Now redirecting to: "+n),window.location.href=n}else r.log.debug("No access token received!"),r.clearTokenStorage(),r.doLogin(GoogleOAuthConfig,{uri:i.toString()})}).fail(function(e,t,n){r.log.error("Failed to fetch auth code, status: ",t," error: ",n),r.clearTokenStorage(),r.doLogin(GoogleOAuthConfig,{uri:i.toString()})})):(r.clearTokenStorage(),r.doLogin(GoogleOAuthConfig,{uri:i.toString()}))}})}(GoogleOAuth||(GoogleOAuth={})),function(e){e.pluginName="hawtio-oauth-os",e.log=Logger.get(e.pluginName),e.userProfile=null}(OSOAuth||(OSOAuth={})),function(a){var s="osAuthCreds";function l(){return Math.floor((new Date).getTime()/1e3)}function o(e,t){return $.ajax(_.extend(e,{beforeSend:function(e){t.token&&e.setRequestHeader("Authorization","Bearer "+t.token)}}))}function c(e,t){var n=e.oauth_client_id,i=e.oauth_authorize_uri,r=new URI(i);r.query({client_id:n,response_type:"token",state:t.uri,redirect_uri:t.uri,scope:e.scope});var o=r.toString();a.log.debug("Redirecting to URI: ",o),window.location.href=o}function i(e){var t=e.query(!0);a.log.debug("Query: ",t);var n=new URI("?"+e.fragment()).query(!0);if(a.log.debug("FragmentParams: ",n),n.access_token&&"bearer"===n.token_type||"Bearer"===n.token_type){a.log.debug("Got token");var i=Core.getLocalStorage(),r={token_type:n.token_type,access_token:n.access_token,expires_in:n.expires_in,obtainedAt:l()};i[s]=angular.toJson(r),delete n.token_type,delete n.access_token,delete n.expires_in,delete n.scope,e.fragment("").query(t);var o=e.toString();return a.log.debug("redirecting to: ",o),window.location.href=o,r}a.log.debug("No token in URI")}function d(){delete Core.getLocalStorage()[s]}a.currentTimeSeconds=l,a.authenticatedHttpRequest=o,a.doLogout=function(e,t){void 0===e&&(e=window.OSOAuthConfig),void 0===t&&(t=a.userProfile);var n=window.OPENSHIFT_CONFIG,i=new URI(window.location.href),r=new URI(n.master_uri);r.segment("/apis/oauth.openshift.io/v1/oauthaccesstokens/"+t.token),o({type:"DELETE",url:r.toString()},t).always(function(){d(),c(OSOAuthConfig,{uri:i.toString()})})},a.doLogin=c,a.extractToken=i,a.clearTokenStorage=d,a.checkToken=function(e){var t=Core.getLocalStorage(),n=void 0;if(s in t)try{n=angular.fromJson(t[s])}catch(e){d(),a.log.debug("Error extracting osAuthCreds value: ",e)}return n||(n=i(e)),a.log.debug("Using creds: ",n),n}}(OSOAuth||(OSOAuth={})),function(s){HawtioOAuth.oauthPlugins.push("OSOAuth"),s._module=angular.module(s.pluginName,["ngIdle"]),s._module.config(["$provide",function(e){e.decorator("userDetails",["$delegate",function(e){if(s.userProfile){var t=e.logout;return _.merge(e,s.userProfile,{logout:function(){t(),s.doLogout(OSOAuthConfig,s.userProfile)}})}return e}])}]),s._module.config(["$httpProvider",function(e){s.userProfile&&s.userProfile.token&&(e.defaults.headers.common={Authorization:"Bearer "+s.userProfile.token})}]);var l=void 0,c=void 0;s._module.config(["KeepaliveProvider",function(e){s.log.debug("keepalive URI: ",l),s.log.debug("keepalive interval: ",c),l&&c&&(e.http(l),e.interval(c))}]),s._module.run(["userDetails","Keepalive","$rootScope",function(i,e,t){s.userProfile&&s.userProfile.token&&(i.login(s.userProfile.metadata.name,null,s.userProfile.token),s.log.debug("Starting keepalive"),t.$on("KeepaliveResponse",function(e,t,n){s.log.debug("keepaliveStatus: ",n),s.log.debug("keepalive response: ",t),401===n&&i.logout()}),e.start())}]),hawtioPluginLoader.registerPreBootstrapTask({name:"OSOAuth",task:function(r){var e=null;try{e=window.OPENSHIFT_CONFIG}catch(e){}if(e){var t=e.token;if(t)return s.log.warn("Loading OAuth token from server. We should switch to using a real OAuth login!"),s.userProfile={token:t},$.ajaxSetup({beforeSend:function(e){e.setRequestHeader("Authorization","Bearer "+t)}}),void r()}if(!window.OSOAuthConfig)return s.log.debug("oauth disabled"),void r();if(!OSOAuthConfig.oauth_client_id||!OSOAuthConfig.oauth_authorize_uri)return s.log.debug("Invalid oauth config, disabled oauth"),void r();s.log.debug("config: ",OSOAuthConfig);var i=new URI(window.location.href),n=s.checkToken(i);if(n){var o={token:n.access_token,expiry:n.expires_in,type:n.token_type,obtainedAt:n.obtainedAt||0},a=void 0;e&&e.master_uri?(a=new URI(e.master_uri)).segment("apis/user.openshift.io/v1/users/~"):(a=new URI(OSOAuthConfig.oauth_authorize_uri)).path("/apis/user.openshift.io/v1/users/~"),l=a.toString(),s.userProfile=o,$.ajax({type:"GET",url:l,success:function(e){_.merge(s.userProfile,o,e,{provider:s.pluginName});var t=Core.parseIntValue(s.userProfile.obtainedAt)||0,n=Core.parseIntValue(s.userProfile.expiry)||0;if(t){var i=t+n-s.currentTimeSeconds();0<i&&(c=Math.round(i/4))}c||(c=10),s.log.debug("userProfile: ",s.userProfile),$.ajaxSetup({beforeSend:function(e){return e.setRequestHeader("Authorization","Bearer "+s.userProfile.token)}}),r()},error:function(e,t,n){0<e.status&&(s.log.error("Failed to fetch user info, status: ",t," error: ",n),s.clearTokenStorage(),s.doLogin(OSOAuthConfig,{uri:i.toString()}))},beforeSend:function(e){return e.setRequestHeader("Authorization","Bearer "+s.userProfile.token)}})}else s.clearTokenStorage(),s.doLogin(OSOAuthConfig,{uri:i.toString()})}}),hawtioPluginLoader.addModule(s.pluginName)}(OSOAuth||(OSOAuth={})),function(e){e.pluginName="hawtio-oauth-keycloak",e.log=Logger.get(e.pluginName),e.config=null,e.keycloak=null,e.userProfile=null}(HawtioKeycloak||(HawtioKeycloak={})),function(e){var t=function(){function i(e,t,n){var i=this;this.$q=e,this.userDetails=t,this.keycloakService=n,this.request=function(e){if(0!==e.url.indexOf("http"))return e;var t=i.$q.defer();return i.addBearer(e,t),i.$q.when(t.promise)},this.responseError=function(e){return 401===e.status&&i.userDetails.loggedIn&&i.userDetails.logout(),i.$q.reject(e)}}return i.$inject=["$q","userDetails","keycloakService"],i.Factory=["$q","userDetails","keycloakService",function(e,t,n){return new i(e,t,n)}],i.prototype.addBearer=function(t,n){var i=this;this.keycloakService.updateToken(function(e){i.userDetails.token=e,t.headers.Authorization="Bearer "+e,n.notify(),n.resolve(t)})},i}();e.AuthInterceptor=t}(HawtioKeycloak||(HawtioKeycloak={})),function(r){var e=function(){function e(e,t,n,i){this.enabled=e,this.keycloak=t,this.jaas=n,this.$cookies=i}return e.prototype.updateToken=function(t,e){var n=this;this.keycloak.updateToken(5).success(function(){var e=n.keycloak.token;t(e)}).error(function(){r.log.error("Couldn't update token"),e&&e()})},e.prototype.setupJQueryAjax=function(n){var i=this;r.log.debug("Setting authorization header to token"),$.ajaxSetup({beforeSend:function(e,t){if(!i.keycloak.authenticated||i.keycloak.isTokenExpired(5))return r.log.debug("Skipped request",t.url,"for now."),i.updateToken(function(e){e&&(r.log.debug("Keycloak token refreshed. Set new value to userDetails"),n.token=e),r.log.debug("Re-sending request after successfully update keycloak token:",t.url),$.ajax(t)},function(){return n.logout()}),!1;i.jaas?e.setRequestHeader("Authorization",Core.getBasicAuthHeader(r.keycloak.profile.username,r.keycloak.token)):e.setRequestHeader("Authorization","Bearer "+r.keycloak.token),i.$cookies.get("XSRF-TOKEN")&&(r.log.debug("Setting XSRF token header from cookies"),e.setRequestHeader("X-XSRF-TOKEN",i.$cookies.get("XSRF-TOKEN")))}})},e}();r.KeycloakService=e}(HawtioKeycloak||(HawtioKeycloak={})),function(i){function e(e){var t=!i.config||!1!==i.config.jaas;return new i.KeycloakService(r(),i.keycloak,t,e)}function r(){return!(!i.keycloak||!i.userProfile)}function t(e,t){r()&&(i.log.debug("Applying AuthInterceptor to $http"),t.interceptors.push(i.AuthInterceptor.Factory))}function n(e,t,n){r()&&(e.login(i.userProfile.username,null,i.userProfile.token),t.setupJQueryAjax(e),i.log.debug("Register 'LogoutKeycloak' to postLogoutTasks"),n.addTask("LogoutKeycloak",function(){i.log.info("Log out Keycloak"),i.keycloak.logout()}))}function o(e,t,n){r()?(i.log.debug("Enabling idle timeout"),t.watch(),n.$on("IdleTimeout",function(){i.log.debug("Idle timeout triggered")}),n.$on("Keepalive",function(){i.keycloak&&i.keycloak.updateToken(5).success(function(){e.token=i.keycloak.token})})):i.log.debug("Not enabling idle timeout")}t.$inject=["$provide","$httpProvider"],e.$inject=["$cookies"],n.$inject=["userDetails","keycloakService","postLogoutTasks"],o.$inject=["userDetails","Idle","$rootScope"],HawtioOAuth.oauthPlugins.push("HawtioKeycloak"),angular.module(i.pluginName,["ngIdle","ngCookies"]).config(t).factory("keycloakService",e).run(n).run(o),hawtioPluginLoader.addModule(i.pluginName).registerPreBootstrapTask({name:"HawtioKeycloak",task:function(e){return function(n){if(!i.config)return i.log.debug("Keycloak disabled"),void n();var e=new URI(i.config.url).segment("js/keycloak.js").toString();$.getScript(e).done(function(e,t){return function(t){i.keycloak=Keycloak(i.config),i.keycloak.init({onLoad:"login-required"}).success(function(e){i.log.debug("Authenticated:",e),e?i.keycloak.loadUserProfile().success(function(e){i.userProfile=e,i.userProfile.token=i.keycloak.token,t()}).error(function(){i.log.debug("Failed to load user profile"),t()}):i.keycloak.login({redirectUri:window.location.href})}).error(function(e){i.log.warn("Failed to initialize Keycloak, token unavailable",e),t()})}(n)}).fail(function(e){i.log.warn("Error fetching keycloak adapter:",e),n()})}(e)},depends:"KeycloakLoginBootstrap"})}(HawtioKeycloak||(HawtioKeycloak={})),function(t){e.$inject=["aboutService"];angular.module(t.pluginName,["ngIdle",GithubOAuth.pluginName,GoogleOAuth.pluginName,HawtioKeycloak.pluginName,OSOAuth.pluginName]).run(e).name;function e(e){e.addProductInfo("Hawtio OAuth","4.12.5")}hawtioPluginLoader.addModule(t.pluginName),hawtioPluginLoader.registerPreBootstrapTask({name:"HawtioOAuthConfig",task:function(e){$.getScript("oauth/config.js").always(e)}}),hawtioPluginLoader.registerPreBootstrapTask({name:"HawtioOAuthBootstrap",depends:t.oauthPlugins,task:function(e){t.getUserProfile(),t.log.info("All OAuth plugins have been executed:",t.oauthPlugins),e()}})}(HawtioOAuth||(HawtioOAuth={})),function(s){s._module.component("githubPreferences",{template:'\n    <div class="alert alert-success" role="alert" ng-if="model.accessToken && !model.trying">\n      <p><img style="width: 64px; height: 64px;" ng-src="{{model.avatarURL}}">&nbsp;Logged in as <strong>{{model.name}}</strong>, <a href="" ng-click="check()">Check access</a><strong ng-if="model.data.app.name">&nbsp;<i class="fa fa-check green"></i></strong></p>\n      <p>Github access is enabled, <a href="" ng-click="clearToken()">disable access</a></p>\n    </div>\n    <div class="alert alert-warning" role="alert" ng-if="model.error">\n      <button type="button" class="close" ng-click="model.error = false" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n      Error logging in: {{model.data.statusText}} - {{model.data.responseJSON.message}}\n    </div>\n    <div class="alert alert-info" ng-show="model.trying">\n      <div class="align-center">\n        <div class="spinner spinner-lg"></div>\n      </div>\n    </div>\n    <form ng-if="!model.accessToken" class="form-horizontal">\n      <p>Log into Github here to enable access to your Github organizations and repositories</p>\n      <div class="form-group">\n        <label class="col-sm-2 control-label" for="username">User Name</label>\n        <div class="col-sm-10">\n          <input class="form-control" id="username" type="text" ng-model="model.username">\n        </div>\n      </div>\n      <div class="form-group">\n        <label class="col-sm-2 control-label" for="password">Password</label>\n        <div class="col-sm-10">\n          <input class="form-control" id="password" type="password" ng-model="model.password">\n        </div>\n      </div>\n      <button class="btn btn-success pull-right" ng-disabled="disabled()" ng-click="login()">Log In</button>\n    </form>\n    \x3c!-- <pre>{{model | json}}</pre> --\x3e\n    ',controllerAs:"github",controller:["$scope","githubOAuthSettings",function(n,i){var r=n.model={trying:!1,error:!1,username:i.username,avatarURL:i.avatarURL,name:i.name,password:void 0,accessToken:i.accessToken,data:void 0},o=n.settings=i;n.disabled=function(){return Core.isBlank(r.username)||Core.isBlank(r.password)};var a=function(e){r.trying=!1,r.error=!0,r.data=e,Core.$apply(n)};n.clearToken=function(){r.trying=!0,$.ajax(s.getTokenCheckAuthURL(i),{method:"DELETE",headers:{Authorization:s.getTokenCheckAuthHeader(i)},success:function(e){r.trying=!1,r.data=e,r.accessToken=void 0,r.name=void 0,r.avatarURL=void 0,s.storeSettings(r,i),Core.$apply(n)},error:a,beforeSend:s.emptyBeforeSend})},n.check=function(){r.trying=!0,$.ajax(s.getTokenCheckAuthURL(i),{method:"GET",headers:{Authorization:s.getTokenCheckAuthHeader(i)},success:function(e){r.trying=!1,r.data=e,Core.$apply(n)},error:function(e){r.accessToken=void 0,r.name=void 0,r.avatarURL=void 0,s.storeSettings(r,i),a(e)},beforeSend:s.emptyBeforeSend})},n.login=function(){r.error=!1,r.trying=!0;var t={Authorization:Core.getBasicAuthHeader(r.username,r.password)};s.storeSettings(r,i),$.ajax(o.loginURL,{method:"GET",headers:t,success:function(e){r.name=e.name,r.avatarURL=e.avatar_url,$.ajax(o.tokenURL,{method:"POST",contentType:"application/json; charset=UTF-8",mimeType:"application/json",dataType:"json",processData:!1,data:angular.toJson({client_id:i.clientId,client_secret:i.clientSecret,note:"hawtio console access token",scopes:i.scopes}),headers:t,success:function(e){r.trying=!1,r.accessToken=e.token,delete r.password,s.storeSettings(r,i),Core.$apply(n)},error:a,beforeSend:s.emptyBeforeSend})},error:a,beforeSend:s.emptyBeforeSend})}}]})}(GithubOAuth||(GithubOAuth={})),angular.module("hawtio-oauth-templates",[]).run(["$templateCache",function(e){e.put("plugins/github/html/githubPreferences.html","<github-preferences></github-preferences>\n")}]),hawtioPluginLoader.addModule("hawtio-oauth-templates");var _apacheCamelModelVersion="2.24.1",_apacheCamelModel={definitions:{expression:{type:"object",title:"expression",group:"language",icon:"generic24.png",description:"Expression in the choose language",properties:{expression:{kind:"element",type:"string",title:"Expression",description:"The expression",required:!0},language:{kind:"element",type:"string",title:"Expression",description:"The chosen language",required:!0,enum:["constant","el","exchangeProperty","groovy","header","javaScript","jsonpath","jxpath","language","method","mvel","ognl","php","python","ref","ruby","simple","spel","sql","terser","tokenize","xpath","xquery","xtokenize"]}}},aggregate:{type:"object",title:"Aggregate",group:"eip,routing",icon:"aggregate24.png",description:"Aggregates many messages into a single message",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{correlationExpression:{kind:"expression",type:"object",description:"The expression used to calculate the correlation key to use for aggregation. The Exchange which has the same correlation key is aggregated together. If the correlation key could not be evaluated an Exception is thrown. You can disable this by using the ignoreBadCorrelationKeys option.",title:"Correlation Expression",required:!0,deprecated:!1},completionPredicate:{kind:"expression",type:"object",description:"A Predicate to indicate when an aggregated exchange is complete. If this is not specified and the AggregationStrategy object implements Predicate, the aggregationStrategy object will be used as the completionPredicate.",title:"Completion Predicate",required:!1,deprecated:!1},completionTimeoutExpression:{kind:"expression",type:"object",description:"Time in millis that an aggregated exchange should be inactive before its complete (timeout). This option can be set as either a fixed value or using an Expression which allows you to evaluate a timeout dynamically - will use Long as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0. You cannot use this option together with completionInterval, only one of the two can be used. By default the timeout checker runs every second, you can use the completionTimeoutCheckerInterval option to configure how frequently to run the checker. The timeout is an approximation and there is no guarantee that the a timeout is triggered exactly after the timeout value. It is not recommended to use very low timeout values or checker intervals.",title:"Completion Timeout",required:!1,deprecated:!1},completionSizeExpression:{kind:"expression",type:"object",description:"Number of messages aggregated before the aggregation is complete. This option can be set as either a fixed value or using an Expression which allows you to evaluate a size dynamically - will use Integer as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0.",title:"Completion Size",required:!1,deprecated:!1},optimisticLockRetryPolicy:{kind:"element",type:"object",description:"Allows to configure retry settings when using optimistic locking.",title:"Optimistic Lock Retry Policy",required:!1,deprecated:!1},parallelProcessing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"When aggregated are completed they are being send out of the aggregator. This option indicates whether or not Camel should use a thread pool with multiple threads for concurrency. If no custom thread pool has been specified then Camel creates a default pool with 10 concurrent threads.",title:"Parallel Processing",required:!1,deprecated:!1},optimisticLocking:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Turns on using optimistic locking, which requires the aggregationRepository being used, is supporting this by implementing org.apache.camel.spi.OptimisticLockingAggregationRepository.",title:"Optimistic Locking",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"string",description:"If using parallelProcessing you can specify a custom thread pool to be used. In fact also if you are not using parallelProcessing this custom thread pool is used to send out aggregated exchanges as well.",title:"Executor Service Ref",required:!1,deprecated:!1},timeoutCheckerExecutorServiceRef:{kind:"attribute",type:"string",description:"If using either of the completionTimeout, completionTimeoutExpression, or completionInterval options a background thread is created to check for the completion for every aggregator. Set this option to provide a custom thread pool to be used rather than creating a new thread for every aggregator.",title:"Timeout Checker Executor Service Ref",required:!1,deprecated:!1},aggregationRepositoryRef:{kind:"attribute",type:"string",description:"Sets the custom aggregate repository to use Will by default use org.apache.camel.processor.aggregate.MemoryAggregationRepository",title:"Aggregation Repository Ref",required:!1,deprecated:!1},strategyRef:{kind:"attribute",type:"string",description:"A reference to lookup the AggregationStrategy in the Registry. Configuring an AggregationStrategy is required, and is used to merge the incoming Exchange with the existing already merged exchanges. At first call the oldExchange parameter is null. On subsequent invocations the oldExchange contains the merged exchanges and newExchange is of course the new incoming Exchange.",title:"Strategy Ref",required:!1,deprecated:!1},strategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Strategy Method Name",required:!1,deprecated:!1},strategyMethodAllowNull:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used for the very first aggregation. If this option is true then null values is used as the oldExchange (at the very first aggregation), when using POJOs as the AggregationStrategy.",title:"Strategy Method Allow Null",required:!1,deprecated:!1},completionSize:{kind:"attribute",type:"integer",description:"Number of messages aggregated before the aggregation is complete. This option can be set as either a fixed value or using an Expression which allows you to evaluate a size dynamically - will use Integer as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0.",title:"Completion Size",required:!1,deprecated:!1},completionInterval:{kind:"attribute",type:"integer",description:"A repeating period in millis by which the aggregator will complete all current aggregated exchanges. Camel has a background task which is triggered every period. You cannot use this option together with completionTimeout, only one of them can be used.",title:"Completion Interval",required:!1,deprecated:!1},completionTimeout:{kind:"attribute",type:"integer",description:"Time in millis that an aggregated exchange should be inactive before its complete (timeout). This option can be set as either a fixed value or using an Expression which allows you to evaluate a timeout dynamically - will use Long as result. If both are set Camel will fallback to use the fixed value if the Expression result was null or 0. You cannot use this option together with completionInterval, only one of the two can be used. By default the timeout checker runs every second, you can use the completionTimeoutCheckerInterval option to configure how frequently to run the checker. The timeout is an approximation and there is no guarantee that the a timeout is triggered exactly after the timeout value. It is not recommended to use very low timeout values or checker intervals.",title:"Completion Timeout",required:!1,deprecated:!1},completionTimeoutCheckerInterval:{kind:"attribute",type:"integer",defaultValue:"1000",description:"Interval in millis that is used by the background task that checks for timeouts (org.apache.camel.TimeoutMap). By default the timeout checker runs every second. The timeout is an approximation and there is no guarantee that the a timeout is triggered exactly after the timeout value. It is not recommended to use very low timeout values or checker intervals.",title:"Completion Timeout Checker Interval",required:!1,deprecated:!1},completionFromBatchConsumer:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables the batch completion mode where we aggregate from a org.apache.camel.BatchConsumer and aggregate the total number of exchanges the org.apache.camel.BatchConsumer has reported as total by checking the exchange property org.apache.camel.Exchange#BATCH_COMPLETE when its complete.",title:"Completion From Batch Consumer",required:!1,deprecated:!1},completionOnNewCorrelationGroup:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables completion on all previous groups when a new incoming correlation group. This can for example be used to complete groups with same correlation keys when they are in consecutive order. Notice when this is enabled then only 1 correlation group can be in progress as when a new correlation group starts, then the previous groups is forced completed.",title:"Completion On New Correlation Group",required:!1,deprecated:!1},groupExchanges:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables grouped exchanges, so the aggregator will group all aggregated exchanges into a single combined Exchange holding all the aggregated exchanges in a java.util.List.",title:"Group Exchanges",required:!1,deprecated:!0},eagerCheckCompletion:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Use eager completion checking which means that the completionPredicate will use the incoming Exchange. As opposed to without eager completion checking the completionPredicate will use the aggregated Exchange.",title:"Eager Check Completion",required:!1,deprecated:!1},ignoreInvalidCorrelationKeys:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If a correlation key cannot be successfully evaluated it will be ignored by logging a DEBUG and then just ignore the incoming Exchange.",title:"Ignore Invalid Correlation Keys",required:!1,deprecated:!1},closeCorrelationKeyOnCompletion:{kind:"attribute",type:"integer",description:"Closes a correlation key when its complete. Any late received exchanges which has a correlation key that has been closed, it will be defined and a ClosedCorrelationKeyException is thrown.",title:"Close Correlation Key On Completion",required:!1,deprecated:!1},discardOnCompletionTimeout:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Discards the aggregated message on completion timeout. This means on timeout the aggregated message is dropped and not sent out of the aggregator.",title:"Discard On Completion Timeout",required:!1,deprecated:!1},forceCompletionOnStop:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Indicates to complete all current aggregated exchanges when the context is stopped",title:"Force Completion On Stop",required:!1,deprecated:!1},completeAllOnStop:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Indicates to wait to complete all current and partial (pending) aggregated exchanges when the context is stopped. This also means that we will wait for all pending exchanges which are stored in the aggregation repository to complete so the repository is empty before we can stop. You may want to enable this when using the memory based aggregation repository that is memory based only, and do not store data on disk. When this option is enabled, then the aggregator is waiting to complete all those exchanges before its stopped, when stopping CamelContext or the route using it.",title:"Complete All On Stop",required:!1,deprecated:!1},aggregateControllerRef:{kind:"attribute",type:"string",description:"To use a org.apache.camel.processor.aggregate.AggregateController to allow external sources to control this aggregator.",title:"Aggregate Controller Ref",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},aop:{type:"object",title:"Aop",group:"configuration",icon:"generic24.png",description:"Does processing before and/or after the route is completed",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{beforeUri:{kind:"attribute",type:"string",description:"Endpoint to call in AOP before.",title:"Before Uri",required:!1,deprecated:!1},afterUri:{kind:"attribute",type:"string",description:"Endpoint to call in AOP after. The difference between after and afterFinally is that afterFinally is invoked from a finally block so it will always be invoked no matter what, eg also in case of an exception occur.",title:"After Uri",required:!1,deprecated:!1},afterFinallyUri:{kind:"attribute",type:"string",description:"Endpoint to call in AOP after finally. The difference between after and afterFinally is that afterFinally is invoked from a finally block so it will always be invoked no matter what, eg also in case of an exception occur.",title:"After Finally Uri",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},"batch-config":{type:"object",title:"Batch-config",group:"eip,routing,resequence",icon:"generic24.png",description:"Configures batch-processing resequence eip.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{batchSize:{kind:"attribute",type:"integer",defaultValue:"100",description:"Sets the size of the batch to be re-ordered. The default size is 100.",title:"Batch Size",required:!1,deprecated:!1},batchTimeout:{kind:"attribute",type:"integer",defaultValue:"1000",description:"Sets the timeout for collecting elements to be re-ordered. The default timeout is 1000 msec.",title:"Batch Timeout",required:!1,deprecated:!1},allowDuplicates:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to allow duplicates.",title:"Allow Duplicates",required:!1,deprecated:!1},reverse:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to reverse the ordering.",title:"Reverse",required:!1,deprecated:!1},ignoreInvalidExchanges:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore invalid exchanges",title:"Ignore Invalid Exchanges",required:!1,deprecated:!1}}},bean:{type:"object",title:"Bean",group:"eip,endpoint",icon:"bean24.png",description:"Calls a java bean",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{ref:{kind:"attribute",type:"string",description:"Sets a reference to a bean to use",title:"Ref",required:!1,deprecated:!1},method:{kind:"attribute",type:"string",description:"Sets the method name on the bean to use",title:"Method",required:!1,deprecated:!1},beanType:{kind:"attribute",type:"string",description:"Sets the Class of the bean",title:"Bean Type",required:!1,deprecated:!1},cache:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Caches the bean lookup, to avoid lookup up bean on every usage.",title:"Cache",required:!1,deprecated:!1},multiParameterArray:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the message body is an array type.",title:"Multi Parameter Array",required:!1,deprecated:!0},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},beanPostProcessor:{type:"object",title:"Bean Post Processor",group:"spring,configuration",icon:"generic24.png",description:"Spring specific DefaultCamelBeanPostProcessor which uses Spring BeanPostProcessor to post process beans.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{}},blacklistServiceFilter:{type:"object",title:"Blacklist Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{servers:{kind:"element",type:"array",description:"Sets the server blacklist. Each entry can be a list of servers separated by comma in the format: servicehost:port,servicehost2:port,servicehost3:port",title:"Servers",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},cachingServiceDiscovery:{type:"object",title:"Caching Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{timeout:{kind:"attribute",type:"integer",defaultValue:"60",description:"Set the time the services will be retained.",title:"Timeout",required:!1,deprecated:!1},units:{kind:"attribute",type:"object",defaultValue:"SECONDS",enum:["DAYS","HOURS","MICROSECONDS","MILLISECONDS","MINUTES","NANOSECONDS","SECONDS"],description:"Set the time unit for the timeout.",title:"Units",required:!1,deprecated:!1},serviceDiscoveryConfiguration:{kind:"element",type:"object",description:"Set the service-call configuration to use",title:"Service Discovery Configuration",required:!0,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},camelContext:{type:"object",title:"Camel Context",group:"spring,configuration",icon:"generic24.png",description:"CamelContext using XML configuration.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{"depends-on":{kind:"attribute",type:"string",description:"List of other bean id's this CamelContext depends up. Multiple bean id's can be separated by comma.",title:"Depends-on",required:!1,deprecated:!1},trace:{kind:"attribute",type:"string",description:"Sets whether tracing is enabled or not.",title:"Trace",required:!1,deprecated:!1},messageHistory:{kind:"attribute",type:"string",defaultValue:"true",description:"Sets whether message history is enabled or not.",title:"Message History",required:!1,deprecated:!1},logMask:{kind:"attribute",type:"string",defaultValue:"false",description:"Sets whether security mask for Logging is enabled or not.",title:"Log Mask",required:!1,deprecated:!1},logExhaustedMessageBody:{kind:"attribute",type:"string",description:"Sets whether to log exhausted message body with message history.",title:"Log Exhausted Message Body",required:!1,deprecated:!1},streamCache:{kind:"attribute",type:"string",description:"Sets whether stream caching is enabled or not.",title:"Stream Cache",required:!1,deprecated:!1},delayer:{kind:"attribute",type:"string",description:"Sets a delay value in millis that a message is delayed at every step it takes in the route path, slowing the process down to better observe what is occurring",title:"Delayer",required:!1,deprecated:!1},handleFault:{kind:"attribute",type:"string",description:"Sets whether fault handling is enabled or not (default is disabled).",title:"Handle Fault",required:!1,deprecated:!1},errorHandlerRef:{kind:"attribute",type:"string",description:"Sets the name of the error handler object used to default the error handling strategy",title:"Error Handler Ref",required:!1,deprecated:!1},autoStartup:{kind:"attribute",type:"string",defaultValue:"true",description:"Sets whether the object should automatically start when Camel starts. Important: Currently only routes can be disabled, as CamelContexts are always started. Note: When setting auto startup false on CamelContext then that takes precedence and no routes is started. You would need to start CamelContext explicit using the org.apache.camel.CamelContext#start() method, to start the context, and then you would need to start the routes manually using CamelContext#startRoute(String).",title:"Auto Startup",required:!1,deprecated:!1},shutdownEager:{kind:"attribute",type:"string",defaultValue:"true",description:"Whether to shutdown CamelContext eager when Spring is shutting down. This ensure a cleaner shutdown of Camel, as dependent bean's are not shutdown at this moment. The bean's will then be shutdown after camelContext.",title:"Shutdown Eager",required:!1,deprecated:!1},registerEndpointIdsFromRoute:{kind:"attribute",type:"string",defaultValue:"false",description:"Sets whether to register endpoints that has id attribute assigned in the Spring registry. This mode is by default false, but can be turned on for backwards compatibility.",title:"Register Endpoint Ids From Route",required:!1,deprecated:!0},useMDCLogging:{kind:"attribute",type:"string",description:"Set whether MDC is enabled.",title:"Use M D C Logging",required:!1,deprecated:!1},useDataType:{kind:"attribute",type:"string",description:"Whether to enable using data type on Camel messages. Data type are automatic turned on if: one ore more routes has been explicit configured with input and output types when using rest-dsl with binding turned on Otherwise data type is default off.",title:"Use Data Type",required:!1,deprecated:!1},useBreadcrumb:{kind:"attribute",type:"string",defaultValue:"true",description:"Set whether breadcrumb is enabled.",title:"Use Breadcrumb",required:!1,deprecated:!1},allowUseOriginalMessage:{kind:"attribute",type:"string",description:"Sets whether to allow access to the original message from Camel's error handler, or from org.apache.camel.spi.UnitOfWork#getOriginalInMessage(). Turning this off can optimize performance, as defensive copy of the original message is not needed.",title:"Allow Use Original Message",required:!1,deprecated:!1},runtimeEndpointRegistryEnabled:{kind:"attribute",type:"string",description:"Sets whether org.apache.camel.spi.RuntimeEndpointRegistry is enabled.",title:"Runtime Endpoint Registry Enabled",required:!1,deprecated:!1},managementNamePattern:{kind:"attribute",type:"string",defaultValue:"#name#",description:"The naming pattern for creating the CamelContext management name.",title:"Management Name Pattern",required:!1,deprecated:!1},threadNamePattern:{kind:"attribute",type:"string",defaultValue:"Camel (#camelId#) thread ##counter# - #name#",description:"Sets the thread name pattern used for creating the full thread name. The default pattern is: Camel (#camelId#) thread ##counter# - #name# Where #camelId# is the name of the org.apache.camel.CamelContext and #counter# is a unique incrementing counter. and #name# is the regular thread name. You can also use #longName# is the long thread name which can includes endpoint parameters etc.",title:"Thread Name Pattern",required:!1,deprecated:!1},shutdownRoute:{kind:"attribute",type:"object",defaultValue:"Default",enum:["Default","Defer"],description:"Sets the ShutdownRoute option for routes.",title:"Shutdown Route",required:!1,deprecated:!1},shutdownRunningTask:{kind:"attribute",type:"object",defaultValue:"CompleteCurrentTaskOnly",enum:["CompleteAllTasks","CompleteCurrentTaskOnly"],description:"Sets the ShutdownRunningTask option to use when shutting down a route.",title:"Shutdown Running Task",required:!1,deprecated:!1},lazyLoadTypeConverters:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether type converters should be loaded lazy",title:"Lazy Load Type Converters",required:!1,deprecated:!0},loadTypeConverters:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether to load custom type converters by scanning classpath. This can be turned off if you are only using Camel components that does not provide type converters which is needed at runtime. In such situations setting this option to false, can speedup starting Camel.",title:"Load Type Converters",required:!1,deprecated:!1},typeConverterStatisticsEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether or not type converter statistics is enabled. By default the type converter utilization statistics is disabled. Notice: If enabled then there is a slight performance impact under very heavy load. You can enable/disable the statistics at runtime using the org.apache.camel.spi.TypeConverterRegistry#getStatistics()#setTypeConverterStatisticsEnabled(Boolean) method, or from JMX on the org.apache.camel.api.management.mbean.ManagedTypeConverterRegistryMBean mbean.",title:"Type Converter Statistics Enabled",required:!1,deprecated:!1},typeConverterExists:{kind:"attribute",type:"object",defaultValue:"Override",enum:["Fail","Ignore","Override"],description:"What should happen when attempting to add a duplicate type converter. The default behavior is to override the existing.",title:"Type Converter Exists",required:!1,deprecated:!1},typeConverterExistsLoggingLevel:{kind:"attribute",type:"object",defaultValue:"WARN",enum:["DEBUG","ERROR","INFO","OFF","TRACE","WARN"],description:"The logging level to use when logging that a type converter already exists when attempting to add a duplicate type converter. The default logging level is WARN",title:"Type Converter Exists Logging Level",required:!1,deprecated:!1},properties:{kind:"element",type:"object",description:"Configuration of CamelContext properties such as limit of debug logging and other general options.",title:"Properties",required:!1,deprecated:!0},globalOptions:{kind:"element",type:"object",description:"Configuration of CamelContext properties such as limit of debug logging and other general options.",title:"Global Options",required:!1,deprecated:!1},propertyPlaceholder:{kind:"element",type:"object",description:"Configuration of property placeholder",title:"Property Placeholder",required:!1,deprecated:!1},package:{kind:"element",type:"array",description:"Sets the package names to be recursively searched for Java classes which extend org.apache.camel.builder.RouteBuilder to be auto-wired up to the CamelContext as a route. Note that classes are excluded if they are specifically configured in the spring.xml A more advanced configuration can be done using setPackageScan(org.apache.camel.model.PackageScanDefinition)",title:"Package",required:!1,deprecated:!1},packageScan:{kind:"element",type:"object",description:"Sets the package scanning information. Package scanning allows for the automatic discovery of certain camel classes at runtime for inclusion e.g. org.apache.camel.builder.RouteBuilder implementations",title:"Package Scan",required:!1,deprecated:!1},contextScan:{kind:"element",type:"object",description:"Sets the context scanning (eg Spring's ApplicationContext) information. Context scanning allows for the automatic discovery of Camel routes runtime for inclusion e.g. org.apache.camel.builder.RouteBuilder implementations",title:"Context Scan",required:!1,deprecated:!1},streamCaching:{kind:"element",type:"object",description:"Configuration of stream caching.",title:"Stream Caching",required:!1,deprecated:!1},jmxAgent:{kind:"element",type:"object",description:"Configuration of JMX.",title:"Jmx Agent",required:!1,deprecated:!1},beansFactory:{kind:"null",type:"array",description:"Miscellaneous configurations",title:"Beans Factory",required:!1,deprecated:!1},beans:{kind:"null",type:"array",description:"Miscellaneous configurations",title:"Beans",required:!1,deprecated:!1},defaultServiceCallConfiguration:{kind:"element",type:"object",description:"ServiceCall EIP default configuration",title:"Default Service Call Configuration",required:!1,deprecated:!1},serviceCallConfiguration:{kind:"element",type:"array",description:"ServiceCall EIP configurations",title:"Service Call Configuration",required:!1,deprecated:!1},defaultHystrixConfiguration:{kind:"element",type:"object",description:"Hystrix EIP default configuration",title:"Default Hystrix Configuration",required:!1,deprecated:!1},hystrixConfiguration:{kind:"element",type:"array",description:"Hystrix EIP configurations",title:"Hystrix Configuration",required:!1,deprecated:!1},routeBuilder:{kind:"element",type:"array",description:"Refers to Java RouteBuilder instances to include as routes in this CamelContext.",title:"Route Builder",required:!1,deprecated:!1},routeContextRef:{kind:"element",type:"array",description:"Refers to XML routes to include as routes in this CamelContext.",title:"Route Context Ref",required:!1,deprecated:!1},restContextRef:{kind:"element",type:"array",description:"Refers to XML rest-dsl to include as REST services in this CamelContext.",title:"Rest Context Ref",required:!1,deprecated:!1},threadPoolProfile:{kind:"element",type:"array",description:"Configuration of thread pool profiles.",title:"Thread Pool Profile",required:!1,deprecated:!1},threadPool:{kind:"element",type:"array",description:"Configuration of thread pool",title:"Thread Pool",required:!1,deprecated:!1},endpoint:{kind:"element",type:"array",description:"Configuration of endpoints",title:"Endpoint",required:!1,deprecated:!1},dataFormats:{kind:"element",type:"object",description:"Configuration of data formats.",title:"Data Formats",required:!1,deprecated:!1},transformers:{kind:"element",type:"object",description:"Configuration of transformers.",title:"Transformers",required:!1,deprecated:!1},validators:{kind:"element",type:"object",description:"Configuration of validators.",title:"Validators",required:!1,deprecated:!1},redeliveryPolicyProfile:{kind:"element",type:"array",description:"Configuration of redelivery settings.",title:"Redelivery Policy Profile",required:!1,deprecated:!1},onException:{kind:"element",type:"array",description:"Configuration of error handlers that triggers on exceptions thrown.",title:"On Exception",required:!1,deprecated:!1},onCompletion:{kind:"element",type:"array",description:"Configuration of sub routes to run at the completion of routing.",title:"On Completion",required:!1,deprecated:!1},intercept:{kind:"element",type:"array",description:"Configuration of interceptors.",title:"Intercept",required:!1,deprecated:!1},interceptFrom:{kind:"element",type:"array",description:"Configuration of interceptors that triggers from the beginning of routes.",title:"Intercept From",required:!1,deprecated:!1},interceptSendToEndpoint:{kind:"element",type:"array",description:"Configuration of interceptors that triggers sending messages to endpoints.",title:"Intercept Send To Endpoint",required:!1,deprecated:!1},restConfiguration:{kind:"element",type:"object",description:"Configuration for rest-dsl",title:"Rest Configuration",required:!1,deprecated:!1},rest:{kind:"element",type:"array",description:"Contains the rest services defined using the rest-dsl",title:"Rest",required:!1,deprecated:!1},route:{kind:"element",type:"array",description:"Contains the Camel routes",title:"Route",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id (name) of this CamelContext",title:"Id",required:!1,deprecated:!1}}},choice:{type:"object",title:"Choice",group:"eip,routing",icon:"choice24.png",description:"Routes messages based on a series of predicates",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{whenClauses:{kind:"element",type:"array",description:"Sets the when clauses",title:"When Clauses",required:!1,deprecated:!1},otherwise:{kind:"element",type:"object",description:"Sets the otherwise node",title:"Otherwise",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},circuitBreaker:{type:"object",title:"Circuit Breaker",group:"eip,routing,loadbalance,circuitbreaker",icon:"generic24.png",description:"Circuit break load balancer",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{exception:{kind:"element",type:"array",description:"A list of class names for specific exceptions to monitor. If no exceptions is configured then all exceptions is monitored",title:"Exception",required:!1,deprecated:!1},halfOpenAfter:{kind:"attribute",type:"integer",description:"The timeout in millis to use as threshold to move state from closed to half-open or open state",title:"Half Open After",required:!1,deprecated:!1},threshold:{kind:"attribute",type:"integer",description:"Number of previous failed messages to use as threshold to move state from closed to half-open or open state",title:"Threshold",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},claimCheck:{type:"object",title:"Claim Check",group:"eip,routing",icon:"generic24.png",description:"The Claim Check EIP allows you to replace message content with a claim check (a unique key), which can be used to retrieve the message content at a later time.",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{operation:{kind:"attribute",type:"object",enum:["Get","GetAndRemove","Pop","Push","Set"],description:"The claim check operation to use. The following operations is supported: Get - Gets (does not remove) the claim check by the given key. GetAndRemove - Gets and remove the claim check by the given key. Set - Sets a new (will override if key already exists) claim check with the given key. Push - Sets a new claim check on the stack (does not use key). Pop - Gets the latest claim check from the stack (does not use key).",title:"Operation",required:!0,deprecated:!1},key:{kind:"attribute",type:"string",description:"To use a specific key for claim check id.",title:"Key",required:!1,deprecated:!1},filter:{kind:"attribute",type:"string",description:"Specified a filter to control what data gets merging data back from the claim check repository. The following syntax is supported: body - to aggregate the message body attachments - to aggregate all the message attachments headers - to aggregate all the message headers header:pattern - to aggregate all the message headers that matches the pattern. The pattern syntax is documented by: link EndpointHelper#matchPattern(String, String). You can specify multiple rules separated by comma. For example to include the message body and all headers starting with foo body,header:foo. The syntax supports the following prefixes which can be used to specify include,exclude, or remove - to include (which is the default mode) - - to exclude (exclude takes precedence over include) -- - to remove (remove takes precedence) For example to exclude a header name foo, and remove all headers starting with bar -header:foo,--headers:bar Note you cannot have both include and exclude header:pattern at the same time.",title:"Filter",required:!1,deprecated:!1},strategyRef:{kind:"attribute",type:"string",description:"To use a custom AggregationStrategy instead of the default implementation. Notice you cannot use both custom aggregation strategy and configure data at the same time.",title:"Strategy Ref",required:!1,deprecated:!1},strategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Strategy Method Name",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},combinedServiceDiscovery:{type:"object",title:"Combined Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{serviceDiscoveryConfigurations:{kind:"element",type:"array",description:"List of ServiceDiscovery configuration to use",title:"Service Discovery Configurations",required:!0,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},combinedServiceFilter:{type:"object",title:"Combined Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{serviceFilterConfigurations:{kind:"element",type:"array",description:"List of ServiceFilter configuration to use",title:"Service Filter Configurations",required:!0,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},consulServiceDiscovery:{type:"object",title:"Consul Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{url:{kind:"attribute",type:"string",description:"The Consul agent URL",title:"Url",required:!1,deprecated:!1},datacenter:{kind:"attribute",type:"string",description:"The data center",title:"Datacenter",required:!1,deprecated:!1},aclToken:{kind:"attribute",type:"string",description:"Sets the ACL token to be used with Consul",title:"Acl Token",required:!1,deprecated:!1},userName:{kind:"attribute",type:"string",description:"Sets the username to be used for basic authentication",title:"User Name",required:!1,deprecated:!1},password:{kind:"attribute",type:"string",description:"Sets the password to be used for basic authentication",title:"Password",required:!1,deprecated:!1},connectTimeoutMillis:{kind:"attribute",type:"integer",description:"Connect timeout for OkHttpClient",title:"Connect Timeout Millis",required:!1,deprecated:!1},readTimeoutMillis:{kind:"attribute",type:"integer",description:"Read timeout for OkHttpClient",title:"Read Timeout Millis",required:!1,deprecated:!1},writeTimeoutMillis:{kind:"attribute",type:"integer",description:"Write timeout for OkHttpClient",title:"Write Timeout Millis",required:!1,deprecated:!1},blockSeconds:{kind:"attribute",type:"integer",defaultValue:"10",description:"The seconds to wait for a watch event, default 10 seconds",title:"Block Seconds",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},consumerTemplate:{type:"object",title:"Consumer Template",group:"spring,configuration",icon:"generic24.png",description:"Configures a ConsumerTemplate",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{maximumCacheSize:{kind:"attribute",type:"integer",description:"Sets a custom maximum cache size to use in the backing cache pools.",title:"Maximum Cache Size",required:!1,deprecated:!1},camelContextId:{kind:"attribute",type:"string",description:"Id of CamelContext to use if there are multiple CamelContexts in the same JVM",title:"Camel Context Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},contextScan:{type:"object",title:"Context Scan",group:"configuration",icon:"generic24.png",description:"Scans for Java org.apache.camel.builder.RouteBuilder instances in the context org.apache.camel.spi.Registry.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{includeNonSingletons:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include non-singleton beans (prototypes) By default only singleton beans is included in the context scan",title:"Include Non Singletons",required:!1,deprecated:!1},excludes:{kind:"element",type:"array",description:"Exclude finding route builder from these java package names.",title:"Excludes",required:!1,deprecated:!1},includes:{kind:"element",type:"array",description:"Include finding route builder from these java package names.",title:"Includes",required:!1,deprecated:!1}}},convertBodyTo:{type:"object",title:"Convert Body To",group:"eip,transformation",icon:"convertBodyTo24.png",description:"Converts the message body to another type",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{type:{kind:"attribute",type:"string",description:"The java type to convert to",title:"Type",required:!0,deprecated:!1},charset:{kind:"attribute",type:"string",description:"To use a specific charset when converting",title:"Charset",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},customLoadBalancer:{type:"object",title:"Custom Load Balancer",group:"eip,routing,loadbalance",icon:"generic24.png",description:"Custom load balancer",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{ref:{kind:"attribute",type:"string",description:"Refers to the custom load balancer to lookup from the registry",title:"Ref",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},customServiceFilter:{type:"object",title:"Custom Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{ref:{kind:"attribute",type:"string",description:"Reference of a ServiceFilter",title:"Ref",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},defaultLoadBalancer:{type:"object",title:"Default Load Balancer",group:"routing,cloud,load-balancing",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},delay:{type:"object",title:"Delay",group:"eip,routing",icon:"generic24.png",description:"Delays processing for a specified length of time",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression to define how long time to wait (in millis)",title:"Expression",required:!0,deprecated:!1},executorServiceRef:{kind:"attribute",type:"string",description:"Refers to a custom Thread Pool if asyncDelay has been enabled.",title:"Executor Service Ref",required:!1,deprecated:!1},asyncDelayed:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables asynchronous delay which means the thread will noy block while delaying.",title:"Async Delayed",required:!1,deprecated:!1},callerRunsWhenRejected:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the caller should run the task when it was rejected by the thread pool. Is by default true",title:"Caller Runs When Rejected",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},description:{type:"object",title:"Description",group:"configuration",icon:"generic24.png",description:"To provide comments about the node.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{lang:{kind:"attribute",type:"string",description:"Language, such as en for english.",title:"Lang",required:!1,deprecated:!1},layoutX:{kind:"attribute",type:"number",description:"Layout position X",title:"Layout X",required:!1,deprecated:!0},layoutY:{kind:"attribute",type:"number",description:"Layout position Y",title:"Layout Y",required:!1,deprecated:!0},layoutWidth:{kind:"attribute",type:"number",description:"Layout width",title:"Layout Width",required:!1,deprecated:!0},layoutHeight:{kind:"attribute",type:"number",description:"Layout height",title:"Layout Height",required:!1,deprecated:!0},text:{kind:"value",type:"string",description:"The description as human readable text",title:"Text",required:!0,deprecated:!1}}},dnsServiceDiscovery:{type:"object",title:"Dns Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{proto:{kind:"attribute",type:"string",defaultValue:"_tcp",description:"The transport protocol of the desired service.",title:"Proto",required:!1,deprecated:!1},domain:{kind:"attribute",type:"string",description:"The domain name;",title:"Domain",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},doCatch:{type:"object",title:"Do Catch",group:"error",icon:"generic24.png",description:"Catches exceptions as part of a try, catch, finally block",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{exception:{kind:"element",type:"array",description:"The exception(s) to catch.",title:"Exception",required:!1,deprecated:!1},onWhen:{kind:"element",type:"object",description:"Sets an additional predicate that should be true before the onCatch is triggered. To be used for fine grained controlling whether a thrown exception should be intercepted by this exception type or not.",title:"On When",required:!1,deprecated:!1},handled:{kind:"expression",type:"object",description:"Expression to be used for evaluate whether the doCatch should catch the exception or not.",title:"Handled",required:!1,deprecated:!0},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},doFinally:{type:"object",title:"Do Finally",group:"error",icon:"generic24.png",description:"Path traversed when a try, catch, finally block exits",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},doTry:{type:"object",title:"Do Try",group:"error",icon:"generic24.png",description:"Marks the beginning of a try, catch, finally block",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},dynamicRouter:{type:"object",title:"Dynamic Router",group:"eip,endpoint,routing",icon:"dynamicRouter24.png",description:"Routes messages based on dynamic rules",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to call that returns the endpoint(s) to route to in the dynamic routing. Important: The expression will be called in a while loop fashion, until the expression returns null which means the dynamic router is finished.",title:"Expression",required:!0,deprecated:!1},uriDelimiter:{kind:"attribute",type:"string",defaultValue:",",description:"Sets the uri delimiter to use",title:"Uri Delimiter",required:!1,deprecated:!1},ignoreInvalidEndpoints:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoints",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.impl.ProducerCache which is used to cache and reuse producers when using this dynamic router, when uris are reused.",title:"Cache Size",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},endpoint:{type:"object",title:"Endpoint",group:"spring,configuration,endpoint",icon:"generic24.png",description:"Camel endpoint configuration",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{singleton:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Not in use",title:"Singleton",required:!1,deprecated:!0},uri:{kind:"attribute",type:"string",description:"Sets the URI to use to resolve the endpoint. Notice that additional options can be configured using a series of property.",title:"Uri",required:!0,deprecated:!1},pattern:{kind:"attribute",type:"object",enum:["InOnly","InOptionalOut","InOut","OutIn","OutOnly","OutOptionalIn","RobustInOnly","RobustOutOnly"],description:"Sets the exchange pattern of the endpoint",title:"Pattern",required:!1,deprecated:!0},properties:{kind:"element",type:"array",description:"To configure additional endpoint options using a XML style which is similar as configuring Spring or Blueprint beans.",title:"Properties",required:!0,deprecated:!1},camelContextId:{kind:"attribute",type:"string",description:"Id of CamelContext to use if there are multiple CamelContexts in the same JVM",title:"Camel Context Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},enrich:{type:"object",title:"Enrich",group:"eip,transformation",icon:"enrich24.png",description:"Enriches a message with data from a secondary resource",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression that computes the endpoint uri to use as the resource endpoint to enrich from",title:"Expression",required:!0,deprecated:!1},strategyRef:{kind:"attribute",type:"string",description:"Refers to an AggregationStrategy to be used to merge the reply from the external service, into a single outgoing message. By default Camel will use the reply from the external service as outgoing message.",title:"Strategy Ref",required:!1,deprecated:!1},strategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Strategy Method Name",required:!1,deprecated:!1},strategyMethodAllowNull:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich), when using POJOs as the AggregationStrategy.",title:"Strategy Method Allow Null",required:!1,deprecated:!1},aggregateOnException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was an exception thrown while trying to retrieve the data to enrich from the resource. Setting this option to true allows end users to control what to do if there was an exception in the aggregate method. For example to suppress the exception or set a custom message body etc.",title:"Aggregate On Exception",required:!1,deprecated:!1},shareUnitOfWork:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Shares the org.apache.camel.spi.UnitOfWork with the parent and the resource exchange. Enrich will by default not share unit of work between the parent exchange and the resource exchange. This means the resource exchange has its own individual unit of work.",title:"Share Unit Of Work",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.impl.ProducerCache which is used to cache and reuse producer when uris are reused.",title:"Cache Size",required:!1,deprecated:!1},ignoreInvalidEndpoint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoint",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},errorHandler:{type:"object",title:"Error Handler",group:"spring,configuration,error",icon:"generic24.png",description:"Error handler settings",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{type:{kind:"attribute",type:"object",defaultValue:"DefaultErrorHandler",enum:["DeadLetterChannel","DefaultErrorHandler","LoggingErrorHandler","NoErrorHandler","TransactionErrorHandler"],description:"The type of the error handler",title:"Type",required:!0,deprecated:!1},deadLetterUri:{kind:"attribute",type:"string",description:"The dead letter endpoint uri for the Dead Letter error handler.",title:"Dead Letter Uri",required:!1,deprecated:!1},deadLetterHandleNewException:{kind:"attribute",type:"string",description:"Whether the dead letter channel should handle (and ignore) any new exception that may been thrown during sending the message to the dead letter endpoint. The default value is true which means any such kind of exception is handled and ignored. Set this to false to let the exception be propagated back on the org.apache.camel.Exchange. This can be used in situations where you use transactions, and want to use Camel's dead letter channel to deal with exceptions during routing, but if the dead letter channel itself fails because of a new exception being thrown, then by setting this to false the new exceptions is propagated back and set on the org.apache.camel.Exchange, which allows the transaction to detect the exception, and rollback.",title:"Dead Letter Handle New Exception",required:!1,deprecated:!1},level:{kind:"attribute",type:"object",defaultValue:"ERROR",enum:["DEBUG","ERROR","INFO","OFF","TRACE","WARN"],description:"Logging level to use when using the logging error handler type.",title:"Level",required:!1,deprecated:!1},rollbackLoggingLevel:{kind:"attribute",type:"object",defaultValue:"WARN",enum:["DEBUG","ERROR","INFO","OFF","TRACE","WARN"],description:"Sets the logging level to use for logging transactional rollback. This option is default WARN.",title:"Rollback Logging Level",required:!1,deprecated:!1},logName:{kind:"attribute",type:"string",description:"Name of the logger to use for the logging error handler",title:"Log Name",required:!1,deprecated:!1},useOriginalMessage:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input message when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current inprogress org.apache.camel.Exchange IN body we use the original IN body instead. This allows you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN body. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN body is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. By default this feature is off.",title:"Use Original Message",required:!1,deprecated:!1},transactionTemplateRef:{kind:"attribute",type:"string",description:"References to the org.springframework.transaction.support.TransactionTemplate to use with the transaction error handler.",title:"Transaction Template Ref",required:!1,deprecated:!1},transactionManagerRef:{kind:"attribute",type:"string",description:"References to the org.springframework.transaction.PlatformTransactionManager to use with the transaction error handler.",title:"Transaction Manager Ref",required:!1,deprecated:!1},onRedeliveryRef:{kind:"attribute",type:"string",description:"Sets a reference to a processor that should be processed before a redelivery attempt. Can be used to change the org.apache.camel.Exchange before its being redelivered.",title:"On Redelivery Ref",required:!1,deprecated:!1},onExceptionOccurredRef:{kind:"attribute",type:"string",description:"Sets a reference to a processor that should be processed just after an exception occurred. Can be used to perform custom logging about the occurred exception at the exact time it happened. Important: Any exception thrown from this processor will be ignored.",title:"On Exception Occurred Ref",required:!1,deprecated:!1},onPrepareFailureRef:{kind:"attribute",type:"string",description:"Sets a reference to a processor to prepare the org.apache.camel.Exchange before handled by the failure processor / dead letter channel. This allows for example to enrich the message before sending to a dead letter queue.",title:"On Prepare Failure Ref",required:!1,deprecated:!1},retryWhileRef:{kind:"attribute",type:"string",description:"Sets a reference to an retry while expression. Will continue retrying until expression evaluates to false.",title:"Retry While Ref",required:!1,deprecated:!1},redeliveryPolicyRef:{kind:"attribute",type:"string",description:"Sets a reference to a RedeliveryPolicy to be used for redelivery settings.",title:"Redelivery Policy Ref",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"string",description:"Sets a reference to a thread pool to be used by the error handler",title:"Executor Service Ref",required:!1,deprecated:!1},redeliveryPolicy:{kind:"element",type:"object",description:"Sets the redelivery settings",title:"Redelivery Policy",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},etcdServiceDiscovery:{type:"object",title:"Etcd Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{uris:{kind:"attribute",type:"string",description:"The URIs the client can connect to.",title:"Uris",required:!1,deprecated:!1},userName:{kind:"attribute",type:"string",description:"The user name to use for basic authentication.",title:"User Name",required:!1,deprecated:!1},password:{kind:"attribute",type:"string",description:"The password to use for basic authentication.",title:"Password",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"integer",description:"To set the maximum time an action could take to complete.",title:"Timeout",required:!1,deprecated:!1},servicePath:{kind:"attribute",type:"string",defaultValue:"/services/",description:"The path to look for for service discovery",title:"Service Path",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",defaultValue:"on-demand",enum:["on-demand","watch"],description:"To set the discovery type, valid values are on-demand and watch.",title:"Type",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},export:{type:"object",title:"Export",group:"spring,configuration",icon:"generic24.png",description:"Used for export a service using Spring Remoting to hide the network call using an interface.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{uri:{kind:"attribute",type:"string",description:"Camel endpoint uri to use a remote transport when calling the service",title:"Uri",required:!0,deprecated:!1},serviceRef:{kind:"attribute",type:"string",description:"Reference to the service name to lookup in the registry.",title:"Service Ref",required:!1,deprecated:!1},serviceInterface:{kind:"attribute",type:"string",description:"Java interfaces to use as facade for the service to be exported",title:"Service Interface",required:!1,deprecated:!1},camelContextId:{kind:"attribute",type:"string",description:"The id of the CamelContext to use, if there is multiple CamelContext in the same JVM.",title:"Camel Context Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},failover:{type:"object",title:"Failover",group:"eip,routing,loadbalance",icon:"generic24.png",description:"Failover load balancer",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{exception:{kind:"element",type:"array",description:"A list of class names for specific exceptions to monitor. If no exceptions is configured then all exceptions is monitored",title:"Exception",required:!1,deprecated:!1},roundRobin:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the failover load balancer should operate in round robin mode or not. If not, then it will always start from the first endpoint when a new message is to be processed. In other words it restart from the top for every message. If round robin is enabled, then it keeps state and will continue with the next endpoint in a round robin fashion. You can also enable sticky mode together with round robin, if so then it will pick the last known good endpoint to use when starting the load balancing (instead of using the next when starting).",title:"Round Robin",required:!1,deprecated:!1},sticky:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the failover load balancer should operate in sticky mode or not. If not, then it will always start from the first endpoint when a new message is to be processed. In other words it restart from the top for every message. If sticky is enabled, then it keeps state and will continue with the last known good endpoint. You can also enable sticky mode together with round robin, if so then it will pick the last known good endpoint to use when starting the load balancing (instead of using the next when starting).",title:"Sticky",required:!1,deprecated:!1},maximumFailoverAttempts:{kind:"attribute",type:"integer",defaultValue:"-1",description:"A value to indicate after X failover attempts we should exhaust (give up). Use -1 to indicate never give up and continuously try to failover. Use 0 to never failover. And use e.g. 3 to failover at most 3 times before giving up. his option can be used whether or not roundRobin is enabled or not.",title:"Maximum Failover Attempts",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},filter:{type:"object",title:"Filter",group:"eip,routing",icon:"filter24.png",description:"Filter out messages based using a predicate",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression to determine if the message should be filtered or not. If the expression returns an empty value or false then the message is filtered (dropped), otherwise the message is continued being routed.",title:"Expression",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},fluentTemplate:{type:"object",title:"Fluent Template",group:"spring,configuration",icon:"generic24.png",description:"Configures a org.apache.camel.FluentProducerTemplate",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{defaultEndpoint:{kind:"attribute",type:"string",description:"Sets the default endpoint URI used by default for sending message exchanges",title:"Default Endpoint",required:!1,deprecated:!1},maximumCacheSize:{kind:"attribute",type:"integer",description:"Sets a custom maximum cache size to use in the backing cache pools.",title:"Maximum Cache Size",required:!1,deprecated:!1},camelContextId:{kind:"attribute",type:"string",description:"Id of CamelContext to use if there are multiple CamelContexts in the same JVM",title:"Camel Context Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},from:{type:"object",title:"From",group:"eip,endpoint,routing",icon:"endpoint24.png",description:"Act as a message source as input to a route",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{uri:{kind:"attribute",type:"string",description:"Sets the URI of the endpoint to use",title:"Uri",required:!0,deprecated:!1},ref:{kind:"attribute",type:"string",description:"Sets the name of the endpoint within the registry (such as the Spring ApplicationContext or JNDI) to use",title:"Ref",required:!1,deprecated:!0},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},globalOption:{type:"object",title:"Global Option",group:"configuration",icon:"generic24.png",description:"Models a string key/value pair for configuring some global options on a Camel context such as max debug log length.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Global option key",title:"Key",required:!0,deprecated:!1},value:{kind:"attribute",type:"string",description:"Global option value",title:"Value",required:!0,deprecated:!1}}},globalOptions:{type:"object",title:"Global Options",group:"configuration",icon:"generic24.png",description:"Models a series of string key/value pairs for configuring some global options on a Camel context such as max debug log length.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{globalOption:{kind:"element",type:"array",description:"A series of global options as key value pairs",title:"Global Option",required:!1,deprecated:!1}}},healthyServiceFilter:{type:"object",title:"Healthy Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},hystrix:{type:"object",title:"Hystrix",group:"eip,routing,circuitbreaker",icon:"generic24.png",description:"Hystrix Circuit Breaker EIP",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{hystrixConfiguration:{kind:"element",type:"object",description:"Configures the Hystrix EIP Use end when configuration is complete, to return back to the Hystrix EIP.",title:"Hystrix Configuration",required:!1,deprecated:!1},hystrixConfigurationRef:{kind:"attribute",type:"string",description:"Refers to a Hystrix configuration to use for configuring the Hystrix EIP.",title:"Hystrix Configuration Ref",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},hystrixConfiguration:{type:"object",title:"Hystrix Configuration",group:"eip,routing,circuitbreaker",icon:"generic24.png",description:"Hystrix Circuit Breaker EIP configuration",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{groupKey:{kind:"attribute",type:"string",defaultValue:"CamelHystrix",description:"Sets the group key to use. The default value is CamelHystrix.",title:"Group Key",required:!1,deprecated:!1},threadPoolKey:{kind:"attribute",type:"string",defaultValue:"CamelHystrix",description:"Sets the thread pool key to use. Will by default use the same value as groupKey has been configured to use.",title:"Thread Pool Key",required:!1,deprecated:!1},circuitBreakerEnabled:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to use a HystrixCircuitBreaker or not. If false no circuit-breaker logic will be used and all requests permitted. This is similar in effect to circuitBreakerForceClosed() except that continues tracking metrics and knowing whether it should be open/closed, this property results in not even instantiating a circuit-breaker.",title:"Circuit Breaker Enabled",required:!1,deprecated:!1},circuitBreakerErrorThresholdPercentage:{kind:"attribute",type:"integer",defaultValue:"50",description:"Error percentage threshold (as whole number such as 50) at which point the circuit breaker will trip open and reject requests. It will stay tripped for the duration defined in circuitBreakerSleepWindowInMilliseconds; The error percentage this is compared against comes from HystrixCommandMetrics.getHealthCounts().",title:"Circuit Breaker Error Threshold Percentage",required:!1,deprecated:!1},circuitBreakerForceClosed:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If true the HystrixCircuitBreaker#allowRequest() will always return true to allow requests regardless of the error percentage from HystrixCommandMetrics.getHealthCounts(). The circuitBreakerForceOpen() property takes precedence so if it set to true this property does nothing.",title:"Circuit Breaker Force Closed",required:!1,deprecated:!1},circuitBreakerForceOpen:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If true the HystrixCircuitBreaker.allowRequest() will always return false, causing the circuit to be open (tripped) and reject all requests. This property takes precedence over circuitBreakerForceClosed();",title:"Circuit Breaker Force Open",required:!1,deprecated:!1},circuitBreakerRequestVolumeThreshold:{kind:"attribute",type:"integer",defaultValue:"20",description:"Minimum number of requests in the metricsRollingStatisticalWindowInMilliseconds() that must exist before the HystrixCircuitBreaker will trip. If below this number the circuit will not trip regardless of error percentage.",title:"Circuit Breaker Request Volume Threshold",required:!1,deprecated:!1},circuitBreakerSleepWindowInMilliseconds:{kind:"attribute",type:"integer",defaultValue:"5000",description:"The time in milliseconds after a HystrixCircuitBreaker trips open that it should wait before trying requests again.",title:"Circuit Breaker Sleep Window In Milliseconds",required:!1,deprecated:!1},executionIsolationSemaphoreMaxConcurrentRequests:{kind:"attribute",type:"integer",defaultValue:"20",description:"Number of concurrent requests permitted to HystrixCommand.run(). Requests beyond the concurrent limit will be rejected. Applicable only when executionIsolationStrategy == SEMAPHORE.",title:"Execution Isolation Semaphore Max Concurrent Requests",required:!1,deprecated:!1},executionIsolationStrategy:{kind:"attribute",type:"string",defaultValue:"THREAD",enum:["SEMAPHORE","THREAD"],description:"What isolation strategy HystrixCommand.run() will be executed with. If THREAD then it will be executed on a separate thread and concurrent requests limited by the number of threads in the thread-pool. If SEMAPHORE then it will be executed on the calling thread and concurrent requests limited by the semaphore count.",title:"Execution Isolation Strategy",required:!1,deprecated:!1},executionIsolationThreadInterruptOnTimeout:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the execution thread should attempt an interrupt (using Future#cancel) when a thread times out. Applicable only when executionIsolationStrategy() == THREAD.",title:"Execution Isolation Thread Interrupt On Timeout",required:!1,deprecated:!1},executionTimeoutInMilliseconds:{kind:"attribute",type:"integer",defaultValue:"1000",description:"Time in milliseconds at which point the command will timeout and halt execution. If executionIsolationThreadInterruptOnTimeout == true and the command is thread-isolated, the executing thread will be interrupted. If the command is semaphore-isolated and a HystrixObservableCommand, that command will get unsubscribed.",title:"Execution Timeout In Milliseconds",required:!1,deprecated:!1},executionTimeoutEnabled:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the timeout mechanism is enabled for this command",title:"Execution Timeout Enabled",required:!1,deprecated:!1},fallbackIsolationSemaphoreMaxConcurrentRequests:{kind:"attribute",type:"integer",defaultValue:"10",description:"Number of concurrent requests permitted to HystrixCommand.getFallback(). Requests beyond the concurrent limit will fail-fast and not attempt retrieving a fallback.",title:"Fallback Isolation Semaphore Max Concurrent Requests",required:!1,deprecated:!1},fallbackEnabled:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether HystrixCommand.getFallback() should be attempted when failure occurs.",title:"Fallback Enabled",required:!1,deprecated:!1},metricsHealthSnapshotIntervalInMilliseconds:{kind:"attribute",type:"integer",defaultValue:"500",description:"Time in milliseconds to wait between allowing health snapshots to be taken that calculate success and error percentages and affect HystrixCircuitBreaker.isOpen() status. On high-volume circuits the continual calculation of error percentage can become CPU intensive thus this controls how often it is calculated.",title:"Metrics Health Snapshot Interval In Milliseconds",required:!1,deprecated:!1},metricsRollingPercentileBucketSize:{kind:"attribute",type:"integer",defaultValue:"10",description:"Maximum number of values stored in each bucket of the rolling percentile. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.",title:"Metrics Rolling Percentile Bucket Size",required:!1,deprecated:!1},metricsRollingPercentileEnabled:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether percentile metrics should be captured using HystrixRollingPercentile inside HystrixCommandMetrics.",title:"Metrics Rolling Percentile Enabled",required:!1,deprecated:!1},metricsRollingPercentileWindowInMilliseconds:{kind:"attribute",type:"integer",defaultValue:"10000",description:"Duration of percentile rolling window in milliseconds. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.",title:"Metrics Rolling Percentile Window In Milliseconds",required:!1,deprecated:!1},metricsRollingPercentileWindowBuckets:{kind:"attribute",type:"integer",defaultValue:"6",description:"Number of buckets the rolling percentile window is broken into. This is passed into HystrixRollingPercentile inside HystrixCommandMetrics.",title:"Metrics Rolling Percentile Window Buckets",required:!1,deprecated:!1},metricsRollingStatisticalWindowInMilliseconds:{kind:"attribute",type:"integer",defaultValue:"10000",description:"This property sets the duration of the statistical rolling window, in milliseconds. This is how long metrics are kept for the thread pool. The window is divided into buckets and rolls by those increments.",title:"Metrics Rolling Statistical Window In Milliseconds",required:!1,deprecated:!1},metricsRollingStatisticalWindowBuckets:{kind:"attribute",type:"integer",defaultValue:"10",description:"Number of buckets the rolling statistical window is broken into. This is passed into HystrixRollingNumber inside HystrixCommandMetrics.",title:"Metrics Rolling Statistical Window Buckets",required:!1,deprecated:!1},requestLogEnabled:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether HystrixCommand execution and events should be logged to HystrixRequestLog.",title:"Request Log Enabled",required:!1,deprecated:!1},corePoolSize:{kind:"attribute",type:"integer",defaultValue:"10",description:"Core thread-pool size that gets passed to java.util.concurrent.ThreadPoolExecutor#setCorePoolSize(int)",title:"Core Pool Size",required:!1,deprecated:!1},maximumSize:{kind:"attribute",type:"integer",defaultValue:"10",description:"Maximum thread-pool size that gets passed to ThreadPoolExecutor#setMaximumPoolSize(int). This is the maximum amount of concurrency that can be supported without starting to reject HystrixCommands. Please note that this setting only takes effect if you also set allowMaximumSizeToDivergeFromCoreSize",title:"Maximum Size",required:!1,deprecated:!1},keepAliveTime:{kind:"attribute",type:"integer",defaultValue:"1",description:"Keep-alive time in minutes that gets passed to link ThreadPoolExecutor#setKeepAliveTime(long, TimeUnit)",title:"Keep Alive Time",required:!1,deprecated:!1},maxQueueSize:{kind:"attribute",type:"integer",defaultValue:"-1",description:"Max queue size that gets passed to BlockingQueue in HystrixConcurrencyStrategy.getBlockingQueue(int) This should only affect the instantiation of a threadpool - it is not eliglible to change a queue size on the fly. For that, use queueSizeRejectionThreshold().",title:"Max Queue Size",required:!1,deprecated:!1},queueSizeRejectionThreshold:{kind:"attribute",type:"integer",defaultValue:"5",description:"Queue size rejection threshold is an artificial max size at which rejections will occur even if maxQueueSize has not been reached. This is done because the maxQueueSize of a BlockingQueue can not be dynamically changed and we want to support dynamically changing the queue size that affects rejections. This is used by HystrixCommand when queuing a thread for execution.",title:"Queue Size Rejection Threshold",required:!1,deprecated:!1},threadPoolRollingNumberStatisticalWindowInMilliseconds:{kind:"attribute",type:"integer",defaultValue:"10000",description:"Duration of statistical rolling window in milliseconds. This is passed into HystrixRollingNumber inside each HystrixThreadPoolMetrics instance.",title:"Thread Pool Rolling Number Statistical Window In Milliseconds",required:!1,deprecated:!1},threadPoolRollingNumberStatisticalWindowBuckets:{kind:"attribute",type:"integer",defaultValue:"10",description:"Number of buckets the rolling statistical window is broken into. This is passed into HystrixRollingNumber inside each HystrixThreadPoolMetrics instance.",title:"Thread Pool Rolling Number Statistical Window Buckets",required:!1,deprecated:!1},allowMaximumSizeToDivergeFromCoreSize:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Allows the configuration for maximumSize to take effect. That value can then be equal to, or higher, than coreSize",title:"Allow Maximum Size To Diverge From Core Size",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},idempotentConsumer:{type:"object",title:"Idempotent Consumer",group:"eip,routing",icon:"idempotentConsumer24.png",description:"Filters out duplicate messages",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression used to calculate the correlation key to use for duplicate check. The Exchange which has the same correlation key is regarded as a duplicate and will be rejected.",title:"Expression",required:!0,deprecated:!1},messageIdRepositoryRef:{kind:"attribute",type:"string",description:"Sets the reference name of the message id repository",title:"Message Id Repository Ref",required:!0,deprecated:!1},eager:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether to eagerly add the key to the idempotent repository or wait until the exchange is complete. Eager is default enabled.",title:"Eager",required:!1,deprecated:!1},completionEager:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether to complete the idempotent consumer eager or when the exchange is done. If this option is true to complete eager, then the idempotent consumer will trigger its completion when the exchange reached the end of the block of the idempotent consumer pattern. So if the exchange is continued routed after the block ends, then whatever happens there does not affect the state. If this option is false (default) to not complete eager, then the idempotent consumer will complete when the exchange is done being routed. So if the exchange is continued routed after the block ends, then whatever happens there also affect the state. For example if the exchange failed due to an exception, then the state of the idempotent consumer will be a rollback.",title:"Completion Eager",required:!1,deprecated:!1},skipDuplicate:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether to skip duplicates or not. The default behavior is to skip duplicates. A duplicate message would have the Exchange property org.apache.camel.Exchange#DUPLICATE_MESSAGE set to a Boolean#TRUE value. A none duplicate message will not have this property set.",title:"Skip Duplicate",required:!1,deprecated:!1},removeOnFailure:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets whether to remove or keep the key on failure. The default behavior is to remove the key on failure.",title:"Remove On Failure",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},inOnly:{type:"object",title:"In Only",group:"eip,endpoint,routing",icon:"eventMessage24.png",description:"Marks the exchange pattern for the route to one way",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{uri:{kind:"attribute",type:"string",description:"Sets the uri of the endpoint to send to.",title:"Uri",required:!0,deprecated:!1},ref:{kind:"attribute",type:"string",description:"Sets the reference of the endpoint to send to.",title:"Ref",required:!1,deprecated:!0},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},inOut:{type:"object",title:"In Out",group:"eip,endpoint,routing",icon:"requestReply24.png",description:"Marks the exchange pattern for the route to request/reply",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{uri:{kind:"attribute",type:"string",description:"Sets the uri of the endpoint to send to.",title:"Uri",required:!0,deprecated:!1},ref:{kind:"attribute",type:"string",description:"Sets the reference of the endpoint to send to.",title:"Ref",required:!1,deprecated:!0},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},inputType:{type:"object",title:"Input Type",group:"configuration",icon:"generic24.png",description:"Set the expected data type of the input message. If the actual message type is different at runtime, camel look for a required Transformer and apply if exists. If validate attribute is true then camel applies Validator as well.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{urn:{kind:"attribute",type:"string",description:"Set input type URN.",title:"Urn",required:!0,deprecated:!1},validate:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Set if validation is required for this input type.",title:"Validate",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},intercept:{type:"object",title:"Intercept",group:"configuration",icon:"generic24.png",description:"Intercepts a message at each step in the route",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},interceptFrom:{type:"object",title:"Intercept From",group:"configuration",icon:"generic24.png",description:"Intercepts incoming messages",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{uri:{kind:"attribute",type:"string",description:"Intercept incoming messages from the uri or uri pattern. If this option is not configured, then all incoming messages is intercepted.",title:"Uri",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},interceptSendToEndpoint:{type:"object",title:"Intercept Send To Endpoint",group:"configuration",icon:"generic24.png",description:"Intercepts messages being sent to an endpoint",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{uri:{kind:"attribute",type:"string",description:"Intercept sending to the uri or uri pattern.",title:"Uri",required:!0,deprecated:!1},skipSendToOriginalEndpoint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true then the message is not sent to the original endpoint. By default (false) the message is both intercepted and then sent to the original endpoint.",title:"Skip Send To Original Endpoint",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},jmxAgent:{type:"object",title:"Jmx Agent",group:"spring,configuration",icon:"generic24.png",description:"JMX configuration.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{disabled:{kind:"attribute",type:"string",defaultValue:"false",description:"Disable JMI (default false)",title:"Disabled",required:!1,deprecated:!1},onlyRegisterProcessorWithCustomId:{kind:"attribute",type:"string",defaultValue:"false",description:"Only register processor if a custom id was defined for it.",title:"Only Register Processor With Custom Id",required:!1,deprecated:!1},registryPort:{kind:"attribute",type:"string",defaultValue:"1099",description:"RMI connector registry port (default 1099)",title:"Registry Port",required:!1,deprecated:!1},connectorPort:{kind:"attribute",type:"string",defaultValue:"-1",description:"RMI connector server port (default -1 not used)",title:"Connector Port",required:!1,deprecated:!1},mbeanServerDefaultDomain:{kind:"attribute",type:"string",defaultValue:"org.apache.camel",description:"MBean server default domain name (default org.apache.camel)",title:"Mbean Server Default Domain",required:!1,deprecated:!1},mbeanObjectDomainName:{kind:"attribute",type:"string",defaultValue:"org.apache.camel",description:"MBean object domain name (default org.apache.camel)",title:"Mbean Object Domain Name",required:!1,deprecated:!1},serviceUrlPath:{kind:"attribute",type:"string",defaultValue:"/jmxrmi",description:"JMX Service URL path (default /jmxrmi)",title:"Service Url Path",required:!1,deprecated:!1},createConnector:{kind:"attribute",type:"string",defaultValue:"false",description:"A flag that indicates whether the agent should be created",title:"Create Connector",required:!1,deprecated:!1},usePlatformMBeanServer:{kind:"attribute",type:"string",defaultValue:"true",description:"A flag that indicates whether the platform mbean server should be used",title:"Use Platform M Bean Server",required:!1,deprecated:!1},registerAlways:{kind:"attribute",type:"string",defaultValue:"false",description:"A flag that indicates whether to register mbeans always",title:"Register Always",required:!1,deprecated:!1},registerNewRoutes:{kind:"attribute",type:"string",defaultValue:"false",description:"A flag that indicates whether to register mbeans when starting new routes",title:"Register New Routes",required:!1,deprecated:!1},statisticsLevel:{kind:"attribute",type:"string",defaultValue:"Default",description:"Level of granularity for performance statistics enabled",title:"Statistics Level",required:!1,deprecated:!1},loadStatisticsEnabled:{kind:"attribute",type:"string",defaultValue:"false",description:"A flag that indicates whether Load statistics is enabled",title:"Load Statistics Enabled",required:!1,deprecated:!1},endpointRuntimeStatisticsEnabled:{kind:"attribute",type:"string",defaultValue:"true",description:"A flag that indicates whether endpoint runtime statistics is enabled",title:"Endpoint Runtime Statistics Enabled",required:!1,deprecated:!1},includeHostName:{kind:"attribute",type:"string",defaultValue:"false",description:"A flag that indicates whether to include hostname in JMX MBean names.",title:"Include Host Name",required:!1,deprecated:!1},useHostIPAddress:{kind:"attribute",type:"string",defaultValue:"false",description:"A flag that indicates whether to use hostname or IP Address in the service url.",title:"Use Host I P Address",required:!1,deprecated:!1},mask:{kind:"attribute",type:"string",defaultValue:"true",description:"A flag that indicates whether to remove detected sensitive information (such as passwords) from MBean names and attributes.",title:"Mask",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},kubernetesServiceDiscovery:{type:"object",title:"Kubernetes Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{lookup:{kind:"attribute",type:"string",defaultValue:"environment",enum:["client","dns","environment"],description:"How to perform service lookup. Possible values: client, dns, environment. When using client, then the client queries the kubernetes master to obtain a list of active pods that provides the service, and then random (or round robin) select a pod. When using dns the service name is resolved as name.namespace.svc.dnsDomain. When using dnssrv the service name is resolved with SRV query for _._...svc... When using environment then environment variables are used to lookup the service. By default environment is used.",title:"Lookup",required:!1,deprecated:!1},dnsDomain:{kind:"attribute",type:"string",description:"Sets the DNS domain to use for DNS lookup.",title:"Dns Domain",required:!1,deprecated:!1},portName:{kind:"attribute",type:"string",description:"Sets the Port Name to use for DNS/DNSSRV lookup.",title:"Port Name",required:!1,deprecated:!1},portProtocol:{kind:"attribute",type:"string",description:"Sets the Port Protocol to use for DNS/DNSSRV lookup.",title:"Port Protocol",required:!1,deprecated:!1},namespace:{kind:"attribute",type:"string",description:"Sets the namespace to use. Will by default use namespace from the ENV variable KUBERNETES_MASTER.",title:"Namespace",required:!1,deprecated:!1},apiVersion:{kind:"attribute",type:"string",description:"Sets the API version when using client lookup",title:"Api Version",required:!1,deprecated:!1},masterUrl:{kind:"attribute",type:"string",description:"Sets the URL to the master when using client lookup",title:"Master Url",required:!1,deprecated:!1},username:{kind:"attribute",type:"string",description:"Sets the username for authentication when using client lookup",title:"Username",required:!1,deprecated:!1},password:{kind:"attribute",type:"string",description:"Sets the password for authentication when using client lookup",title:"Password",required:!1,deprecated:!1},oauthToken:{kind:"attribute",type:"string",description:"Sets the OAUTH token for authentication (instead of username/password) when using client lookup",title:"Oauth Token",required:!1,deprecated:!1},caCertData:{kind:"attribute",type:"string",description:"Sets the Certificate Authority data when using client lookup",title:"Ca Cert Data",required:!1,deprecated:!1},caCertFile:{kind:"attribute",type:"string",description:"Sets the Certificate Authority data that are loaded from the file when using client lookup",title:"Ca Cert File",required:!1,deprecated:!1},clientCertData:{kind:"attribute",type:"string",description:"Sets the Client Certificate data when using client lookup",title:"Client Cert Data",required:!1,deprecated:!1},clientCertFile:{kind:"attribute",type:"string",description:"Sets the Client Certificate data that are loaded from the file when using client lookup",title:"Client Cert File",required:!1,deprecated:!1},clientKeyAlgo:{kind:"attribute",type:"string",description:"Sets the Client Keystore algorithm, such as RSA when using client lookup",title:"Client Key Algo",required:!1,deprecated:!1},clientKeyData:{kind:"attribute",type:"string",description:"Sets the Client Keystore data when using client lookup",title:"Client Key Data",required:!1,deprecated:!1},clientKeyFile:{kind:"attribute",type:"string",description:"Sets the Client Keystore data that are loaded from the file when using client lookup",title:"Client Key File",required:!1,deprecated:!1},clientKeyPassphrase:{kind:"attribute",type:"string",description:"Sets the Client Keystore passphrase when using client lookup",title:"Client Key Passphrase",required:!1,deprecated:!1},trustCerts:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether to turn on trust certificate check when using client lookup",title:"Trust Certs",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},loadBalance:{type:"object",title:"Load Balance",group:"eip,routing",icon:"loadBalance24.png",description:"Balances message processing among a number of nodes",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{loadBalancerType:{kind:"element",type:"object",description:"The load balancer to be used",title:"Load Balancer Type",required:!0,deprecated:!1},inheritErrorHandler:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether or not to inherit the configured error handler. The default value is true. You can use this to disable using the inherited error handler for a given DSL such as a load balancer where you want to use a custom error handler strategy.",title:"Inherit Error Handler",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},loadBalancerConfiguration:{type:"object",title:"Load Balancer Configuration",group:"routing,cloud,load-balancing",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},log:{type:"object",title:"Log",group:"eip,configuration",icon:"log24.png",description:"Logs the defined message to the logger",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{message:{kind:"attribute",type:"string",description:"Sets the log message (uses simple language)",title:"Message",required:!0,deprecated:!1},loggingLevel:{kind:"attribute",type:"object",defaultValue:"INFO",enum:["DEBUG","ERROR","INFO","OFF","TRACE","WARN"],description:"Sets the logging level. The default value is INFO",title:"Logging Level",required:!1,deprecated:!1},logName:{kind:"attribute",type:"string",description:"Sets the name of the logger",title:"Log Name",required:!1,deprecated:!1},marker:{kind:"attribute",type:"string",description:"To use slf4j marker",title:"Marker",required:!1,deprecated:!1},loggerRef:{kind:"attribute",type:"string",description:"To refer to a custom logger instance to lookup from the registry.",title:"Logger Ref",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},loop:{type:"object",title:"Loop",group:"eip,routing",icon:"generic24.png",description:"Processes a message multiple times",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression to define how many times we should loop. Notice the expression is only evaluated once, and should return a number as how many times to loop. A value of zero or negative means no looping. The loop is like a for-loop fashion, if you want a while loop, then the dynamic router may be a better choice.",title:"Expression",required:!0,deprecated:!1},copy:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the copy attribute is true, a copy of the input Exchange is used for each iteration. That means each iteration will start from a copy of the same message. By default loop will loop the same exchange all over, so each iteration may have different message content.",title:"Copy",required:!1,deprecated:!1},doWhile:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables the while loop that loops until the predicate evaluates to false or null.",title:"Do While",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},marshal:{type:"object",title:"Marshal",group:"eip,transformation",icon:"marshal24.png",description:"Marshals data into a specified format for transmission over a transport or component",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{dataFormatType:{kind:"element",type:"object",description:"The data format to be used",title:"Data Format Type",required:!0,deprecated:!1},ref:{kind:"attribute",type:"string",description:"To refer to a custom data format to use as marshaller",title:"Ref",required:!1,deprecated:!0},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},multiServiceDiscovery:{type:"object",title:"Multi Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{serviceDiscoveryConfigurations:{kind:"element",type:"array",description:"List of ServiceDiscovery configuration to use",title:"Service Discovery Configurations",required:!0,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},multiServiceFilter:{type:"object",title:"Multi Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{serviceFilterConfigurations:{kind:"element",type:"array",description:"List of ServiceFilter configuration to use",title:"Service Filter Configurations",required:!0,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},multicast:{type:"object",title:"Multicast",group:"eip,routing",icon:"multicast24.png",description:"Routes the same message to multiple paths either sequentially or in parallel.",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{parallelProcessing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then sending messages to the multicasts occurs concurrently. Note the caller thread will still wait until all messages has been fully processed, before it continues. Its only the sending and processing the replies from the multicasts which happens concurrently.",title:"Parallel Processing",required:!1,deprecated:!1},strategyRef:{kind:"attribute",type:"string",description:"Refers to an AggregationStrategy to be used to assemble the replies from the multicasts, into a single outgoing message from the Multicast. By default Camel will use the last reply as the outgoing message. You can also use a POJO as the AggregationStrategy",title:"Strategy Ref",required:!1,deprecated:!1},strategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Strategy Method Name",required:!1,deprecated:!1},strategyMethodAllowNull:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich), when using POJOs as the AggregationStrategy",title:"Strategy Method Allow Null",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"string",description:"Refers to a custom Thread Pool to be used for parallel processing. Notice if you set this option, then parallel processing is automatic implied, and you do not have to enable that option as well.",title:"Executor Service Ref",required:!1,deprecated:!1},streaming:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Camel will process replies out-of-order, eg in the order they come back. If disabled, Camel will process replies in the same order as defined by the multicast.",title:"Streaming",required:!1,deprecated:!1},stopOnException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will now stop further processing if an exception or failure occurred during processing of an org.apache.camel.Exchange and the caused exception will be thrown. Will also stop if processing the exchange failed (has a fault message) or an exception was thrown and handled by the error handler (such as using onException). In all situations the multicast will stop further processing. This is the same behavior as in pipeline, which is used by the routing engine. The default behavior is to not stop but continue processing till the end",title:"Stop On Exception",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"integer",defaultValue:"0",description:"Sets a total timeout specified in millis, when using parallel processing. If the Multicast hasn't been able to send and process all replies within the given timeframe, then the timeout triggers and the Multicast breaks out and continues. Notice if you provide a TimeoutAwareAggregationStrategy then the timeout method is invoked before breaking out. If the timeout is reached with running tasks still remaining, certain tasks for which it is difficult for Camel to shut down in a graceful manner may continue to run. So use this option with a bit of care.",title:"Timeout",required:!1,deprecated:!1},onPrepareRef:{kind:"attribute",type:"string",description:"Uses the Processor when preparing the org.apache.camel.Exchange to be send. This can be used to deep-clone messages that should be send, or any custom logic needed before the exchange is send.",title:"On Prepare Ref",required:!1,deprecated:!1},shareUnitOfWork:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Shares the org.apache.camel.spi.UnitOfWork with the parent and each of the sub messages. Multicast will by default not share unit of work between the parent exchange and each multicasted exchange. This means each sub exchange has its own individual unit of work.",title:"Share Unit Of Work",required:!1,deprecated:!1},parallelAggregate:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then the aggregate method on AggregationStrategy can be called concurrently. Notice that this would require the implementation of AggregationStrategy to be implemented as thread-safe. By default this is false meaning that Camel synchronizes the call to the aggregate method. Though in some use-cases this can be used to archive higher performance when the AggregationStrategy is implemented as thread-safe.",title:"Parallel Aggregate",required:!1,deprecated:!1},stopOnAggregateException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled, unwind exceptions occurring at aggregation time to the error handler when parallelProcessing is used. Currently, aggregation time exceptions do not stop the route processing when parallelProcessing is used. Enabling this option allows to work around this behavior. The default value is false for the sake of backward compatibility.",title:"Stop On Aggregate Exception",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},onCompletion:{type:"object",title:"On Completion",group:"configuration",icon:"generic24.png",description:"Route to be executed when normal route processing completes",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{mode:{kind:"attribute",type:"object",defaultValue:"AfterConsumer",enum:["AfterConsumer","BeforeConsumer"],description:"Sets the on completion mode. The default value is AfterConsumer",title:"Mode",required:!1,deprecated:!1},onCompleteOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will only synchronize when the org.apache.camel.Exchange completed successfully (no errors).",title:"On Complete Only",required:!1,deprecated:!1},onFailureOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will only synchronize when the org.apache.camel.Exchange ended with failure (exception or FAULT message).",title:"On Failure Only",required:!1,deprecated:!1},onWhen:{kind:"element",type:"object",description:"Sets an additional predicate that should be true before the onCompletion is triggered. To be used for fine grained controlling whether a completion callback should be invoked or not",title:"On When",required:!1,deprecated:!1},parallelProcessing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then the on completion process will run asynchronously by a separate thread from a thread pool. By default this is false, meaning the on completion process will run synchronously using the same caller thread as from the route.",title:"Parallel Processing",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"string",description:"Refers to a custom Thread Pool to be used for parallel processing. Notice if you set this option, then parallel processing is automatic implied, and you do not have to enable that option as well.",title:"Executor Service Ref",required:!1,deprecated:!1},useOriginalMessage:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input body when an org.apache.camel.Exchange for this on completion. By default this feature is off.",title:"Use Original Message",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},onException:{type:"object",title:"On Exception",group:"error",icon:"generic24.png",description:"Route to be executed when an exception is thrown",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{exception:{kind:"element",type:"array",description:"A set of exceptions to react upon.",title:"Exception",required:!0,deprecated:!1},onWhen:{kind:"element",type:"object",description:"Sets an additional predicate that should be true before the onException is triggered. To be used for fine grained controlling whether a thrown exception should be intercepted by this exception type or not.",title:"On When",required:!1,deprecated:!1},retryWhile:{kind:"expression",type:"object",description:"Sets the retry while predicate. Will continue retrying until predicate returns false.",title:"Retry While",required:!1,deprecated:!1},redeliveryPolicy:{kind:"element",type:"object",description:"Used for configuring redelivery options",title:"Redelivery Policy",required:!1,deprecated:!1},redeliveryPolicyRef:{kind:"attribute",type:"string",description:"Sets a reference to a RedeliveryPolicy to lookup in the org.apache.camel.spi.Registry to be used.",title:"Redelivery Policy Ref",required:!1,deprecated:!1},handled:{kind:"expression",type:"object",description:"Sets whether the exchange should be marked as handled or not.",title:"Handled",required:!1,deprecated:!1},continued:{kind:"expression",type:"object",description:"Sets whether the exchange should handle and continue routing from the point of failure. If this option is enabled then its considered handled as well.",title:"Continued",required:!1,deprecated:!1},onRedeliveryRef:{kind:"attribute",type:"string",description:"Sets a reference to a processor that should be processed before a redelivery attempt. Can be used to change the org.apache.camel.Exchange before its being redelivered.",title:"On Redelivery Ref",required:!1,deprecated:!1},onExceptionOccurredRef:{kind:"attribute",type:"string",description:"Sets a reference to a processor that should be processed just after an exception occurred. Can be used to perform custom logging about the occurred exception at the exact time it happened. Important: Any exception thrown from this processor will be ignored.",title:"On Exception Occurred Ref",required:!1,deprecated:!1},useOriginalMessage:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will use the original input message when an org.apache.camel.Exchange is moved to the dead letter queue. Notice: this only applies when all redeliveries attempt have failed and the org.apache.camel.Exchange is doomed for failure. Instead of using the current in-progress org.apache.camel.Exchange IN body we use the original IN body instead. This allows you to store the original input in the dead letter queue instead of the in-progress snapshot of the IN body. For instance if you route transform the IN body during routing and then failed. With the original exchange store in the dead letter queue it might be easier to manually re submit the org.apache.camel.Exchange again as the IN body is the same as when Camel received it. So you should be able to send the org.apache.camel.Exchange to the same input. By default this feature is off.",title:"Use Original Message",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},onFallback:{type:"object",title:"On Fallback",group:"eip,routing,circuitbreaker",icon:"generic24.png",description:"Route to be executed when Hystrix EIP executes fallback",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{fallbackViaNetwork:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the fallback goes over the network. If the fallback will go over the network it is another possible point of failure and so it also needs to be wrapped by a HystrixCommand. It is important to execute the fallback command on a separate thread-pool, otherwise if the main command were to become latent and fill the thread-pool this would prevent the fallback from running if the two commands share the same pool.",title:"Fallback Via Network",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},optimisticLockRetryPolicy:{type:"object",title:"Optimistic Lock Retry Policy",group:"configuration",icon:"generic24.png",description:"To configure optimistic locking",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{maximumRetries:{kind:"attribute",type:"integer",description:"Sets the maximum number of retries",title:"Maximum Retries",required:!1,deprecated:!1},retryDelay:{kind:"attribute",type:"integer",defaultValue:"50",description:"Sets the delay in millis between retries",title:"Retry Delay",required:!1,deprecated:!1},maximumRetryDelay:{kind:"attribute",type:"integer",defaultValue:"1000",description:"Sets the upper value of retry in millis between retries, when using exponential or random backoff",title:"Maximum Retry Delay",required:!1,deprecated:!1},exponentialBackOff:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Enable exponential backoff",title:"Exponential Back Off",required:!1,deprecated:!1},randomBackOff:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables random backoff",title:"Random Back Off",required:!1,deprecated:!1}}},otherwise:{type:"object",title:"Otherwise",group:"eip,routing",icon:"generic24.png",description:"Route to be executed when all other choices evaluate to false",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},outputType:{type:"object",title:"Output Type",group:"configuration",icon:"generic24.png",description:"Set the expected data type of the output message. If the actual message type is different at runtime, camel look for a required Transformer and apply if exists. If validate attribute is true then camel applies Validator as well.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{urn:{kind:"attribute",type:"string",description:"Set output type URN.",title:"Urn",required:!0,deprecated:!1},validate:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Set if validation is required for this output type.",title:"Validate",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},packageScan:{type:"object",title:"Package Scan",group:"configuration",icon:"generic24.png",description:"Scans for Java org.apache.camel.builder.RouteBuilder classes in java packages",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{package:{kind:"element",type:"array",description:"Sets the java package names to use for scanning for route builder classes",title:"Package",required:!0,deprecated:!1},excludes:{kind:"element",type:"array",description:"Exclude finding route builder from these java package names.",title:"Excludes",required:!1,deprecated:!1},includes:{kind:"element",type:"array",description:"Include finding route builder from these java package names.",title:"Includes",required:!1,deprecated:!1}}},passThroughServiceFilter:{type:"object",title:"Pass Through Service Filter",group:"routing,cloud,service-filter",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},pipeline:{type:"object",title:"Pipeline",group:"eip,routing",icon:"pipeline24.png",description:"Routes the message to a sequence of processors.",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},policy:{type:"object",title:"Policy",group:"configuration",icon:"generic24.png",description:"Defines a policy the route will use",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{ref:{kind:"attribute",type:"string",description:"Sets a reference to use for lookup the policy in the registry.",title:"Ref",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},pollEnrich:{type:"object",title:"Poll Enrich",group:"eip,transformation",icon:"pollEnrich24.png",description:"Enriches messages with data polled from a secondary resource",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression that computes the endpoint uri to use as the resource endpoint to enrich from",title:"Expression",required:!0,deprecated:!1},timeout:{kind:"attribute",type:"integer",defaultValue:"-1",description:"Timeout in millis when polling from the external service. The timeout has influence about the poll enrich behavior. It basically operations in three different modes: negative value - Waits until a message is available and then returns it. Warning that this method could block indefinitely if no messages are available. 0 - Attempts to receive a message exchange immediately without waiting and returning null if a message exchange is not available yet. positive value - Attempts to receive a message exchange, waiting up to the given timeout to expire if a message is not yet available. Returns null if timed out The default value is -1 and therefore the method could block indefinitely, and therefore its recommended to use a timeout value",title:"Timeout",required:!1,deprecated:!1},strategyRef:{kind:"attribute",type:"string",description:"Refers to an AggregationStrategy to be used to merge the reply from the external service, into a single outgoing message. By default Camel will use the reply from the external service as outgoing message.",title:"Strategy Ref",required:!1,deprecated:!1},strategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Strategy Method Name",required:!1,deprecated:!1},strategyMethodAllowNull:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich), when using POJOs as the AggregationStrategy.",title:"Strategy Method Allow Null",required:!1,deprecated:!1},aggregateOnException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was an exception thrown while trying to retrieve the data to enrich from the resource. Setting this option to true allows end users to control what to do if there was an exception in the aggregate method. For example to suppress the exception or set a custom message body etc.",title:"Aggregate On Exception",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.impl.ConsumerCache which is used to cache and reuse consumers when uris are reused.",title:"Cache Size",required:!1,deprecated:!1},ignoreInvalidEndpoint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoint",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},process:{type:"object",title:"Process",group:"eip,endpoint",icon:"process24.png",description:"Calls a Camel processor",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the Processor to lookup in the registry to use.",title:"Ref",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},properties:{type:"object",title:"Properties",group:"configuration",icon:"generic24.png",description:"A series of key value pair",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{property:{kind:"element",type:"array",description:"A series of properties as key value pairs",title:"Property",required:!1,deprecated:!1}}},propertiesFunction:{type:"object",title:"Properties Function",group:"spring,configuration",icon:"generic24.png",description:"Function to use with properties placeholder",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the custom properties function to lookup in the registry",title:"Ref",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},propertiesLocation:{type:"object",title:"Properties Location",group:"spring,configuration",icon:"generic24.png",description:"Properties to use with properties placeholder",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{resolver:{kind:"attribute",type:"string",defaultValue:"classpath",description:"The resolver to use to locate the location",title:"Resolver",required:!1,deprecated:!1},path:{kind:"attribute",type:"string",description:"Property locations to use.",title:"Path",required:!0,deprecated:!1},optional:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the location is optional.",title:"Optional",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},property:{type:"object",title:"Property",group:"configuration",icon:"generic24.png",description:"A key value pair",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Property key",title:"Key",required:!0,deprecated:!1},value:{kind:"attribute",type:"string",description:"Property value",title:"Value",required:!0,deprecated:!1}}},propertyPlaceholder:{type:"object",title:"Property Placeholder",group:"spring,configuration",icon:"generic24.png",description:"Properties placeholder",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{location:{kind:"attribute",type:"string",description:"A list of locations to load properties. You can use comma to separate multiple locations. This option will override any default locations and only use the locations from this option.",title:"Location",required:!1,deprecated:!1},encoding:{kind:"attribute",type:"string",description:"Encoding to use when loading properties file from the file system or classpath. If no encoding has been set, then the properties files is loaded using ISO-8859-1 encoding (latin-1) as documented by java.util.Properties#load(java.io.InputStream)",title:"Encoding",required:!1,deprecated:!1},cache:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not to cache loaded properties. The default value is true.",title:"Cache",required:!1,deprecated:!1},ignoreMissingLocation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to silently ignore if a location cannot be located, such as a properties file not found.",title:"Ignore Missing Location",required:!1,deprecated:!1},propertiesResolverRef:{kind:"attribute",type:"string",description:"Reference to a custom PropertiesResolver to be used",title:"Properties Resolver Ref",required:!1,deprecated:!1},propertiesParserRef:{kind:"attribute",type:"string",description:"Reference to a custom PropertiesParser to be used",title:"Properties Parser Ref",required:!1,deprecated:!1},propertyPrefix:{kind:"attribute",type:"string",description:"Optional prefix prepended to property names before resolution.",title:"Property Prefix",required:!1,deprecated:!1},propertySuffix:{kind:"attribute",type:"string",description:"Optional suffix appended to property names before resolution.",title:"Property Suffix",required:!1,deprecated:!1},fallbackToUnaugmentedProperty:{kind:"attribute",type:"boolean",defaultValue:"true",description:"If true, first attempt resolution of property name augmented with propertyPrefix and propertySuffix before falling back the plain property name specified. If false, only the augmented property name is searched.",title:"Fallback To Unaugmented Property",required:!1,deprecated:!1},defaultFallbackEnabled:{kind:"attribute",type:"boolean",defaultValue:"true",description:"If false, the component does not attempt to find a default for the key by looking after the colon separator.",title:"Default Fallback Enabled",required:!1,deprecated:!1},prefixToken:{kind:"attribute",type:"string",defaultValue:"{{",description:"Sets the value of the prefix token used to identify properties to replace. Setting a value of null restores the default token",title:"Prefix Token",required:!1,deprecated:!1},suffixToken:{kind:"attribute",type:"string",defaultValue:"}}",description:"Sets the value of the suffix token used to identify properties to replace. Setting a value of null restores the default token",title:"Suffix Token",required:!1,deprecated:!1},propertiesFunction:{kind:"element",type:"array",description:"List of custom properties function to use.",title:"Properties Function",required:!1,deprecated:!1},propertiesLocation:{kind:"element",type:"array",description:"List of property locations to use.",title:"Properties Location",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},proxy:{type:"object",title:"Proxy",group:"spring,configuration",icon:"generic24.png",description:"To proxy a service call using a interface",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{serviceUrl:{kind:"attribute",type:"string",description:"The camel endpoint uri used to send the message to when calling the service from the interface.",title:"Service Url",required:!1,deprecated:!1},serviceRef:{kind:"attribute",type:"string",description:"The camel endpoint reference used to send the message to when calling the service from the interface.",title:"Service Ref",required:!1,deprecated:!0},serviceInterface:{kind:"attribute",type:"string",description:"Java interfaces to use as facade for the service to be proxied",title:"Service Interface",required:!1,deprecated:!1},camelContextId:{kind:"attribute",type:"string",description:"The id of the CamelContext to use, if there is multiple CamelContext in the same JVM.",title:"Camel Context Id",required:!1,deprecated:!1},binding:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Camel parameter binding is enabled by default, which will use binding information from the method signature parameters to bind to the Exchange/Message with the following annotations. If disabled then a org.apache.camel.component.bean.CamelInvocationHandler is used.",title:"Binding",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},random:{type:"object",title:"Random",group:"eip,routing,loadbalance",icon:"generic24.png",description:"Random load balancer",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},recipientList:{type:"object",title:"Recipient List",group:"eip,endpoint,routing",icon:"recipientList24.png",description:"Routes messages to a number of dynamically specified recipients (dynamic to)",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression that returns which endpoints (url) to send the message to (the recipients). If the expression return an empty value then the message is not sent to any recipients.",title:"Expression",required:!0,deprecated:!1},delimiter:{kind:"attribute",type:"string",defaultValue:",",description:"Delimiter used if the Expression returned multiple endpoints. Can be turned off using the value false. The default value is ,",title:"Delimiter",required:!1,deprecated:!1},parallelProcessing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then sending messages to the recipients occurs concurrently. Note the caller thread will still wait until all messages has been fully processed, before it continues. Its only the sending and processing the replies from the recipients which happens concurrently.",title:"Parallel Processing",required:!1,deprecated:!1},strategyRef:{kind:"attribute",type:"string",description:"Sets a reference to the AggregationStrategy to be used to assemble the replies from the recipients, into a single outgoing message from the RecipientList. By default Camel will use the last reply as the outgoing message. You can also use a POJO as the AggregationStrategy",title:"Strategy Ref",required:!1,deprecated:!1},strategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Strategy Method Name",required:!1,deprecated:!1},strategyMethodAllowNull:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich), when using POJOs as the AggregationStrategy",title:"Strategy Method Allow Null",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"string",description:"Refers to a custom Thread Pool to be used for parallel processing. Notice if you set this option, then parallel processing is automatic implied, and you do not have to enable that option as well.",title:"Executor Service Ref",required:!1,deprecated:!1},stopOnException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will now stop further processing if an exception or failure occurred during processing of an org.apache.camel.Exchange and the caused exception will be thrown. Will also stop if processing the exchange failed (has a fault message) or an exception was thrown and handled by the error handler (such as using onException). In all situations the recipient list will stop further processing. This is the same behavior as in pipeline, which is used by the routing engine. The default behavior is to not stop but continue processing till the end",title:"Stop On Exception",required:!1,deprecated:!1},ignoreInvalidEndpoints:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoints",required:!1,deprecated:!1},streaming:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Camel will process replies out-of-order, eg in the order they come back. If disabled, Camel will process replies in the same order as defined by the recipient list.",title:"Streaming",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"integer",defaultValue:"0",description:"Sets a total timeout specified in millis, when using parallel processing. If the Recipient List hasn't been able to send and process all replies within the given timeframe, then the timeout triggers and the Recipient List breaks out and continues. Notice if you provide a TimeoutAwareAggregationStrategy then the timeout method is invoked before breaking out. If the timeout is reached with running tasks still remaining, certain tasks for which it is difficult for Camel to shut down in a graceful manner may continue to run. So use this option with a bit of care.",title:"Timeout",required:!1,deprecated:!1},onPrepareRef:{kind:"attribute",type:"string",description:"Uses the Processor when preparing the org.apache.camel.Exchange to be send. This can be used to deep-clone messages that should be send, or any custom logic needed before the exchange is send.",title:"On Prepare Ref",required:!1,deprecated:!1},shareUnitOfWork:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Shares the org.apache.camel.spi.UnitOfWork with the parent and each of the sub messages. Recipient List will by default not share unit of work between the parent exchange and each recipient exchange. This means each sub exchange has its own individual unit of work.",title:"Share Unit Of Work",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.impl.ProducerCache which is used to cache and reuse producers when using this recipient list, when uris are reused.",title:"Cache Size",required:!1,deprecated:!1},parallelAggregate:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then the aggregate method on AggregationStrategy can be called concurrently. Notice that this would require the implementation of AggregationStrategy to be implemented as thread-safe. By default this is false meaning that Camel synchronizes the call to the aggregate method. Though in some use-cases this can be used to archive higher performance when the AggregationStrategy is implemented as thread-safe.",title:"Parallel Aggregate",required:!1,deprecated:!1},stopOnAggregateException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled, unwind exceptions occurring at aggregation time to the error handler when parallelProcessing is used. Currently, aggregation time exceptions do not stop the route processing when parallelProcessing is used. Enabling this option allows to work around this behavior. The default value is false for the sake of backward compatibility.",title:"Stop On Aggregate Exception",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},redeliveryPolicy:{type:"object",title:"Redelivery Policy",group:"configuration",icon:"generic24.png",description:"To configure re-delivery for error handling",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{maximumRedeliveries:{kind:"attribute",type:"string",description:"Sets the maximum redeliveries x = redeliver at most x times 0 = no redeliveries -1 = redeliver forever",title:"Maximum Redeliveries",required:!1,deprecated:!1},redeliveryDelay:{kind:"attribute",type:"string",description:"Sets the initial redelivery delay",title:"Redelivery Delay",required:!1,deprecated:!1},asyncDelayedRedelivery:{kind:"attribute",type:"string",description:"Allow synchronous delayed redelivery. The route, in particular the consumer's component, must support the Asynchronous Routing Engine (e.g. seda).",title:"Async Delayed Redelivery",required:!1,deprecated:!1},backOffMultiplier:{kind:"attribute",type:"string",description:"Sets the back off multiplier",title:"Back Off Multiplier",required:!1,deprecated:!1},useExponentialBackOff:{kind:"attribute",type:"string",description:"Turn on exponential backk off",title:"Use Exponential Back Off",required:!1,deprecated:!1},collisionAvoidanceFactor:{kind:"attribute",type:"string",description:"Sets the collision avoidance factor",title:"Collision Avoidance Factor",required:!1,deprecated:!1},useCollisionAvoidance:{kind:"attribute",type:"string",description:"Turn on collision avoidance.",title:"Use Collision Avoidance",required:!1,deprecated:!1},maximumRedeliveryDelay:{kind:"attribute",type:"string",description:"Sets the maximum delay between redelivery",title:"Maximum Redelivery Delay",required:!1,deprecated:!1},retriesExhaustedLogLevel:{kind:"attribute",type:"object",enum:["DEBUG","ERROR","INFO","OFF","TRACE","WARN"],description:"Sets the logging level to use when retries has exhausted",title:"Retries Exhausted Log Level",required:!1,deprecated:!1},retryAttemptedLogLevel:{kind:"attribute",type:"object",enum:["DEBUG","ERROR","INFO","OFF","TRACE","WARN"],description:"Sets the logging level to use for logging retry attempts",title:"Retry Attempted Log Level",required:!1,deprecated:!1},retryAttemptedLogInterval:{kind:"attribute",type:"string",description:"Sets the interval to use for logging retry attempts",title:"Retry Attempted Log Interval",required:!1,deprecated:!1},logRetryAttempted:{kind:"attribute",type:"string",description:"Sets whether retry attempts should be logged or not. Can be used to include or reduce verbose.",title:"Log Retry Attempted",required:!1,deprecated:!1},logStackTrace:{kind:"attribute",type:"string",description:"Sets whether stack traces should be logged. Can be used to include or reduce verbose.",title:"Log Stack Trace",required:!1,deprecated:!1},logRetryStackTrace:{kind:"attribute",type:"string",description:"Sets whether stack traces should be logged when an retry attempt failed. Can be used to include or reduce verbose.",title:"Log Retry Stack Trace",required:!1,deprecated:!1},logHandled:{kind:"attribute",type:"string",description:"Sets whether handled exceptions should be logged or not. Can be used to include or reduce verbose.",title:"Log Handled",required:!1,deprecated:!1},logNewException:{kind:"attribute",type:"string",description:"Sets whether new exceptions should be logged or not. Can be used to include or reduce verbose. A new exception is an exception that was thrown while handling a previous exception.",title:"Log New Exception",required:!1,deprecated:!1},logContinued:{kind:"attribute",type:"string",description:"Sets whether continued exceptions should be logged or not. Can be used to include or reduce verbose.",title:"Log Continued",required:!1,deprecated:!1},logExhausted:{kind:"attribute",type:"string",description:"Sets whether exhausted exceptions should be logged or not. Can be used to include or reduce verbose.",title:"Log Exhausted",required:!1,deprecated:!1},logExhaustedMessageHistory:{kind:"attribute",type:"string",description:"Sets whether exhausted exceptions should be logged including message history or not (supports property placeholders). Can be used to include or reduce verbose.",title:"Log Exhausted Message History",required:!1,deprecated:!1},logExhaustedMessageBody:{kind:"attribute",type:"string",description:"Sets whether exhausted message body should be logged including message history or not (supports property placeholders). Can be used to include or reduce verbose. Requires logExhaustedMessageHistory to be enabled.",title:"Log Exhausted Message Body",required:!1,deprecated:!1},disableRedelivery:{kind:"attribute",type:"string",description:"Disables redelivery (same as setting maximum redeliveries to 0)",title:"Disable Redelivery",required:!1,deprecated:!1},delayPattern:{kind:"attribute",type:"string",description:"Sets the delay pattern with delay intervals.",title:"Delay Pattern",required:!1,deprecated:!1},allowRedeliveryWhileStopping:{kind:"attribute",type:"string",description:"Controls whether to allow redelivery while stopping/shutting down a route that uses error handling.",title:"Allow Redelivery While Stopping",required:!1,deprecated:!1},exchangeFormatterRef:{kind:"attribute",type:"string",description:"Sets the reference of the instance of org.apache.camel.spi.ExchangeFormatter to generate the log message from exchange.",title:"Exchange Formatter Ref",required:!1,deprecated:!1}}},redeliveryPolicyProfile:{type:"object",title:"Redelivery Policy Profile",group:"spring,configuration",icon:"generic24.png",description:"Configuration of redelivery policy.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{maximumRedeliveries:{kind:"attribute",type:"string",description:"Sets the maximum number of times a message exchange will be redelivered. Setting a negative value will retry forever.",title:"Maximum Redeliveries",required:!1,deprecated:!1},redeliveryDelay:{kind:"attribute",type:"string",defaultValue:"1000",description:"Sets the maximum redelivery delay. Use -1 if you wish to have no maximum",title:"Redelivery Delay",required:!1,deprecated:!1},asyncDelayedRedelivery:{kind:"attribute",type:"string",defaultValue:"false",description:"Sets whether asynchronous delayed redelivery is allowed. This is disabled by default. When enabled it allows Camel to schedule a future task for delayed redelivery which prevents current thread from blocking while waiting. Exchange which is transacted will however always use synchronous delayed redelivery because the transaction must execute in the same thread context.",title:"Async Delayed Redelivery",required:!1,deprecated:!1},backOffMultiplier:{kind:"attribute",type:"string",defaultValue:"2",description:"Sets the multiplier used to increase the delay between redeliveries if useExponentialBackOff is enabled",title:"Back Off Multiplier",required:!1,deprecated:!1},useExponentialBackOff:{kind:"attribute",type:"string",defaultValue:"false",description:"Enables/disables exponential backoff using the backOffMultiplier to increase the time between retries",title:"Use Exponential Back Off",required:!1,deprecated:!1},collisionAvoidanceFactor:{kind:"attribute",type:"string",defaultValue:"0.15",description:"Sets the factor used for collision avoidance if enabled via useCollisionAvoidance.",title:"Collision Avoidance Factor",required:!1,deprecated:!1},useCollisionAvoidance:{kind:"attribute",type:"string",defaultValue:"false",description:"Enables/disables collision avoidance which adds some randomization to the backoff timings to reduce contention probability",title:"Use Collision Avoidance",required:!1,deprecated:!1},maximumRedeliveryDelay:{kind:"attribute",type:"string",defaultValue:"60000",description:"Sets the maximum redelivery delay. Use -1 if you wish to have no maximum",title:"Maximum Redelivery Delay",required:!1,deprecated:!1},retriesExhaustedLogLevel:{kind:"attribute",type:"object",defaultValue:"ERROR",enum:["DEBUG","ERROR","INFO","OFF","TRACE","WARN"],description:"Sets the logging level to use for log messages when retries have been exhausted.",title:"Retries Exhausted Log Level",required:!1,deprecated:!1},retryAttemptedLogLevel:{kind:"attribute",type:"object",defaultValue:"DEBUG",enum:["DEBUG","ERROR","INFO","OFF","TRACE","WARN"],description:"Sets the logging level to use for log messages when retries are attempted.",title:"Retry Attempted Log Level",required:!1,deprecated:!1},retryAttemptedLogInterval:{kind:"attribute",type:"string",defaultValue:"0",description:"Sets the interval for log messages when retries are attempted.",title:"Retry Attempted Log Interval",required:!1,deprecated:!1},logRetryAttempted:{kind:"attribute",type:"string",defaultValue:"true",description:"Sets whether to log retry attempts",title:"Log Retry Attempted",required:!1,deprecated:!1},logStackTrace:{kind:"attribute",type:"string",defaultValue:"true",description:"Sets whether stack traces should be logged or not",title:"Log Stack Trace",required:!1,deprecated:!1},logRetryStackTrace:{kind:"attribute",type:"string",defaultValue:"false",description:"Sets whether stack traces should be logged or not",title:"Log Retry Stack Trace",required:!1,deprecated:!1},logHandled:{kind:"attribute",type:"string",defaultValue:"false",description:"Sets whether errors should be logged even if its handled",title:"Log Handled",required:!1,deprecated:!1},logNewException:{kind:"attribute",type:"string",defaultValue:"true",description:"Sets whether errors should be logged when a new exception occurred during handling a previous exception",title:"Log New Exception",required:!1,deprecated:!1},logContinued:{kind:"attribute",type:"string",defaultValue:"false",description:"Sets whether errors should be logged even if its continued",title:"Log Continued",required:!1,deprecated:!1},logExhausted:{kind:"attribute",type:"string",defaultValue:"true",description:"Sets whether exhausted exceptions should be logged or not",title:"Log Exhausted",required:!1,deprecated:!1},logExhaustedMessageHistory:{kind:"attribute",type:"string",defaultValue:"false",description:"Sets whether to log exhausted errors including message history",title:"Log Exhausted Message History",required:!1,deprecated:!1},logExhaustedMessageBody:{kind:"attribute",type:"string",defaultValue:"false",description:"Sets whether exhausted message body/headers should be logged with message history included",title:"Log Exhausted Message Body",required:!1,deprecated:!1},disableRedelivery:{kind:"attribute",type:"string",defaultValue:"false",description:"Disables redelivery by setting maximum redeliveries to 0.",title:"Disable Redelivery",required:!1,deprecated:!1},delayPattern:{kind:"attribute",type:"string",description:"Sets an optional delay pattern to use instead of fixed delay.",title:"Delay Pattern",required:!1,deprecated:!1},allowRedeliveryWhileStopping:{kind:"attribute",type:"string",defaultValue:"true",description:"Controls whether to allow redelivery while stopping/shutting down a route that uses error handling.",title:"Allow Redelivery While Stopping",required:!1,deprecated:!1},exchangeFormatterRef:{kind:"attribute",type:"string",description:"Sets the reference of the instance of org.apache.camel.spi.ExchangeFormatter to generate the log message from exchange.",title:"Exchange Formatter Ref",required:!1,deprecated:!1},camelContextId:{kind:"attribute",type:"string",description:"Id of CamelContext to use if there are multiple CamelContexts in the same JVM",title:"Camel Context Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},removeHeader:{type:"object",title:"Remove Header",group:"eip,transformation",icon:"generic24.png",description:"Removes a named header from the message",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{headerName:{kind:"attribute",type:"string",description:"Name of header to remove",title:"Header Name",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},removeHeaders:{type:"object",title:"Remove Headers",group:"eip,transformation",icon:"generic24.png",description:"Removes message headers whose name matches a specified pattern",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{pattern:{kind:"attribute",type:"string",description:"Name or pattern of headers to remove",title:"Pattern",required:!0,deprecated:!1},excludePattern:{kind:"attribute",type:"string",description:"Name or patter of headers to not remove",title:"Exclude Pattern",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},removeProperties:{type:"object",title:"Remove Properties",group:"eip,transformation",icon:"generic24.png",description:"Removes message exchange properties whose name matches a specified pattern",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{pattern:{kind:"attribute",type:"string",description:"Name or pattern of properties to remove",title:"Pattern",required:!0,deprecated:!1},excludePattern:{kind:"attribute",type:"string",description:"Name or pattern of properties to not remove",title:"Exclude Pattern",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},removeProperty:{type:"object",title:"Remove Property",group:"eip,transformation",icon:"generic24.png",description:"Removes a named property from the message exchange",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{propertyName:{kind:"attribute",type:"string",description:"Name of property to remove",title:"Property Name",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},resequence:{type:"object",title:"Resequence",group:"eip,routing",icon:"resequence24.png",description:"Resequences (re-order) messages based on an expression",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression to use for re-ordering the messages, such as a header with a sequence number",title:"Expression",required:!0,deprecated:!1},resequencerConfig:{kind:"element",type:"object",description:"To configure the resequencer in using either batch or stream configuration. Will by default use batch configuration.",title:"Resequencer Config",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},ribbonLoadBalancer:{type:"object",title:"Ribbon Load Balancer",group:"routing,cloud,load-balancing",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{namespace:{kind:"attribute",type:"string",description:"The namespace",title:"Namespace",required:!1,deprecated:!1},username:{kind:"attribute",type:"string",description:"The username",title:"Username",required:!1,deprecated:!1},password:{kind:"attribute",type:"string",description:"The password",title:"Password",required:!1,deprecated:!1},clientName:{kind:"attribute",type:"string",description:"Sets the Ribbon client name",title:"Client Name",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},rollback:{type:"object",title:"Rollback",group:"eip,routing",icon:"generic24.png",description:"Forces a rollback by stopping routing the message",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{markRollbackOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Mark the transaction for rollback only (cannot be overruled to commit)",title:"Mark Rollback Only",required:!1,deprecated:!1},markRollbackOnlyLast:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Mark only last sub transaction for rollback only. When using sub transactions (if the transaction manager support this)",title:"Mark Rollback Only Last",required:!1,deprecated:!1},message:{kind:"attribute",type:"string",description:"Message to use in rollback exception",title:"Message",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},roundRobin:{type:"object",title:"Round Robin",group:"eip,routing,loadbalance",icon:"generic24.png",description:"Round robin load balancer",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},route:{type:"object",title:"Route",group:"configuration",icon:"route24.png",description:"A Camel route",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{group:{kind:"attribute",type:"string",description:"The group that this route belongs to; could be the name of the RouteBuilder class or be explicitly configured in the XML. May be null.",title:"Group",required:!1,deprecated:!1},streamCache:{kind:"attribute",type:"string",description:"Whether stream caching is enabled on this route.",title:"Stream Cache",required:!1,deprecated:!1},trace:{kind:"attribute",type:"string",description:"Whether tracing is enabled on this route.",title:"Trace",required:!1,deprecated:!1},messageHistory:{kind:"attribute",type:"string",defaultValue:"true",description:"Whether message history is enabled on this route.",title:"Message History",required:!1,deprecated:!1},logMask:{kind:"attribute",type:"string",defaultValue:"false",description:"Whether security mask for Logging is enabled on this route.",title:"Log Mask",required:!1,deprecated:!1},handleFault:{kind:"attribute",type:"string",description:"Whether handle fault is enabled on this route.",title:"Handle Fault",required:!1,deprecated:!1},delayer:{kind:"attribute",type:"string",description:"Whether to slow down processing messages by a given delay in msec.",title:"Delayer",required:!1,deprecated:!1},autoStartup:{kind:"attribute",type:"string",defaultValue:"true",description:"Whether to auto start this route",title:"Auto Startup",required:!1,deprecated:!1},startupOrder:{kind:"attribute",type:"integer",description:"To configure the ordering of the routes being started",title:"Startup Order",required:!1,deprecated:!1},errorHandlerRef:{kind:"attribute",type:"string",description:"Sets the bean ref name of the error handler builder to use on this route",title:"Error Handler Ref",required:!1,deprecated:!1},routePolicyRef:{kind:"attribute",type:"string",description:"Reference to custom org.apache.camel.spi.RoutePolicy to use by the route. Multiple policies can be configured by separating values using comma.",title:"Route Policy Ref",required:!1,deprecated:!1},shutdownRoute:{kind:"attribute",type:"object",enum:["Default","Defer"],description:"To control how to shutdown the route.",title:"Shutdown Route",required:!1,deprecated:!1},shutdownRunningTask:{kind:"attribute",type:"object",enum:["CompleteCurrentTaskOnly","CompleteAllTasks"],description:"To control how to shutdown the route.",title:"Shutdown Running Task",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},routeBuilder:{type:"object",title:"Route Builder",group:"configuration",icon:"generic24.png",description:"To refer to a Java org.apache.camel.builder.RouteBuilder instance to use.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the route builder instance",title:"Ref",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},routeContext:{type:"object",title:"Route Context",group:"spring,configuration,routing",icon:"generic24.png",description:"Configuration of routes using XML",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{route:{kind:"element",type:"array",description:"Contains the Camel routes",title:"Route",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},routeContextRef:{type:"object",title:"Route Context Ref",group:"configuration",icon:"generic24.png",description:"To refer to an XML file with routes defined using the xml-dsl",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the routes in the xml dsl",title:"Ref",required:!0,deprecated:!1}}},routes:{type:"object",title:"Routes",group:"configuration",icon:"generic24.png",description:"A series of Camel routes",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{routes:{kind:"element",type:"array",description:"Contains the Camel routes",title:"Routes",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},routingSlip:{type:"object",title:"Routing Slip",group:"eip,endpoint,routing",icon:"routingSlip24.png",description:"Routes a message through a series of steps that are pre-determined (the slip)",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to define the routing slip, which defines which endpoints to route the message in a pipeline style. Notice the expression is evaluated once, if you want a more dynamic style, then the dynamic router eip is a better choice.",title:"Expression",required:!0,deprecated:!1},uriDelimiter:{kind:"attribute",type:"string",defaultValue:",",description:"Sets the uri delimiter to use",title:"Uri Delimiter",required:!1,deprecated:!1},ignoreInvalidEndpoints:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoints",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.impl.ProducerCache which is used to cache and reuse producers when using this routing slip, when uris are reused.",title:"Cache Size",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},saga:{type:"object",title:"Saga",group:"eip,routing",icon:"generic24.png",description:"Enables sagas on the route",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{propagation:{kind:"attribute",type:"object",defaultValue:"REQUIRED",enum:["MANDATORY","NEVER","NOT_SUPPORTED","REQUIRED","REQUIRES_NEW","SUPPORTS"],description:"Set the Saga propagation mode (REQUIRED, REQUIRES_NEW, MANDATORY, SUPPORTS, NOT_SUPPORTED, NEVER).",title:"Propagation",required:!1,deprecated:!1},completionMode:{kind:"attribute",type:"object",defaultValue:"AUTO",enum:["AUTO","MANUAL"],description:"Determine how the saga should be considered complete. When set to AUTO, the saga is completed when the exchange that initiates the saga is processed successfully, or compensated when it completes exceptionally. When set to MANUAL, the user must complete or compensate the saga using the saga:complete or saga:compensate endpoints.",title:"Completion Mode",required:!1,deprecated:!1},timeoutInMilliseconds:{kind:"attribute",type:"integer",description:"Set the maximum amount of time for the Saga. After the timeout is expired, the saga will be compensated automatically (unless a different decision has been taken in the meantime).",title:"Timeout In Milliseconds",required:!1,deprecated:!1},compensation:{kind:"element",type:"object",description:"The compensation endpoint URI that must be called to compensate all changes done in the route. The route corresponding to the compensation URI must perform compensation and complete without error. If errors occur during compensation, the saga service may call again the compensation URI to retry.",title:"Compensation",required:!1,deprecated:!1},completion:{kind:"element",type:"object",description:"The completion endpoint URI that will be called when the Saga is completed successfully. The route corresponding to the completion URI must perform completion tasks and terminate without error. If errors occur during completion, the saga service may call again the completion URI to retry.",title:"Completion",required:!1,deprecated:!1},option:{kind:"element",type:"array",description:"Allows to save properties of the current exchange in order to re-use them in a compensation/completion callback route. Options are usually helpful e.g. to store and retrieve identifiers of objects that should be deleted in compensating actions. Option values will be transformed into input headers of the compensation/completion exchange.",title:"Option",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},sample:{type:"object",title:"Sample",group:"eip,routing",icon:"generic24.png",description:"Extract a sample of the messages passing through a route",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{samplePeriod:{kind:"attribute",type:"integer",defaultValue:"1",description:"Sets the sample period during which only a single Exchange will pass through.",title:"Sample Period",required:!1,deprecated:!1},messageFrequency:{kind:"attribute",type:"integer",description:"Sets the sample message count which only a single Exchange will pass through after this many received.",title:"Message Frequency",required:!1,deprecated:!1},units:{kind:"attribute",type:"object",defaultValue:"SECONDS",enum:["DAYS","HOURS","MICROSECONDS","MILLISECONDS","MINUTES","NANOSECONDS","SECONDS"],description:"Sets the time units for the sample period, defaulting to seconds.",title:"Units",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},script:{type:"object",title:"Script",group:"eip,transformation",icon:"generic24.png",description:"Executes a script from a language which does not change the message body.",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to return the transformed message body (the new message body to use)",title:"Expression",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},serviceCall:{type:"object",title:"Service Call",group:"eip,routing",icon:"generic24.png",description:"To call remote services",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{name:{kind:"attribute",type:"string",description:"Sets the name of the service to use",title:"Name",required:!0,deprecated:!1},uri:{kind:"attribute",type:"string",description:"The uri of the endpoint to send to. The uri can be dynamic computed using the org.apache.camel.language.simple.SimpleLanguage expression.",title:"Uri",required:!1,deprecated:!1},component:{kind:"attribute",type:"string",defaultValue:"http4",description:"The component to use.",title:"Component",required:!1,deprecated:!1},pattern:{kind:"attribute",type:"object",enum:["InOnly","InOptionalOut","InOut","OutIn","OutOnly","OutOptionalIn","RobustInOnly","RobustOutOnly"],description:"Sets the optional ExchangePattern used to invoke this endpoint",title:"Pattern",required:!1,deprecated:!1},configurationRef:{kind:"attribute",type:"string",description:"Refers to a ServiceCall configuration to use",title:"Configuration Ref",required:!1,deprecated:!1},serviceDiscoveryRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceDiscovery to use.",title:"Service Discovery Ref",required:!1,deprecated:!1},serviceFilterRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceFilter to use.",title:"Service Filter Ref",required:!1,deprecated:!1},serviceChooserRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceChooser to use.",title:"Service Chooser Ref",required:!1,deprecated:!1},loadBalancerRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceLoadBalancer to use.",title:"Load Balancer Ref",required:!1,deprecated:!1},expressionRef:{kind:"attribute",type:"string",description:"Set a reference to a custom Expression to use.",title:"Expression Ref",required:!1,deprecated:!1},serviceDiscoveryConfiguration:{kind:"element",type:"object",description:"Configures the ServiceDiscovery using the given configuration.",title:"Service Discovery Configuration",required:!0,deprecated:!1},serviceFilterConfiguration:{kind:"element",type:"object",description:"Configures the ServiceFilter using the given configuration.",title:"Service Filter Configuration",required:!0,deprecated:!1},loadBalancerConfiguration:{kind:"element",type:"object",description:"Configures the LoadBalancer using the given configuration.",title:"Load Balancer Configuration",required:!0,deprecated:!1},expressionConfiguration:{kind:"element",type:"object",description:"Configures the Expression using the given configuration.",title:"Expression Configuration",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},serviceCallConfiguration:{type:"object",title:"Service Call Configuration",group:"routing,cloud",icon:"generic24.png",description:"Remote service call configuration",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{uri:{kind:"attribute",type:"string",description:"The uri of the endpoint to send to. The uri can be dynamic computed using the org.apache.camel.language.simple.SimpleLanguage expression.",title:"Uri",required:!1,deprecated:!1},component:{kind:"attribute",type:"string",defaultValue:"http4",description:"The component to use.",title:"Component",required:!1,deprecated:!1},pattern:{kind:"attribute",type:"object",enum:["InOnly","InOptionalOut","InOut","OutIn","OutOnly","OutOptionalIn","RobustInOnly","RobustOutOnly"],description:"Sets the optional ExchangePattern used to invoke this endpoint",title:"Pattern",required:!1,deprecated:!1},serviceDiscoveryRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceDiscovery to use.",title:"Service Discovery Ref",required:!1,deprecated:!1},serviceFilterRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceFilter to use.",title:"Service Filter Ref",required:!1,deprecated:!1},serviceChooserRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceChooser to use.",title:"Service Chooser Ref",required:!1,deprecated:!1},loadBalancerRef:{kind:"attribute",type:"string",description:"Sets a reference to a custom ServiceLoadBalancer to use.",title:"Load Balancer Ref",required:!1,deprecated:!1},expressionRef:{kind:"attribute",type:"string",description:"Set a reference to a custom Expression to use.",title:"Expression Ref",required:!1,deprecated:!1},serviceDiscoveryConfiguration:{kind:"element",type:"object",description:"Configures the ServiceDiscovery using the given configuration.",title:"Service Discovery Configuration",required:!0,deprecated:!1},serviceFilterConfiguration:{kind:"element",type:"object",description:"Configures the ServiceFilter using the given configuration.",title:"Service Filter Configuration",required:!0,deprecated:!1},loadBalancerConfiguration:{kind:"element",type:"object",description:"Configures theL oadBalancer using the given configuration.",title:"Load Balancer Configuration",required:!0,deprecated:!1},expressionConfiguration:{kind:"element",type:"object",description:"Configures the Expression using the given configuration.",title:"Expression Configuration",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},serviceChooserConfiguration:{type:"object",title:"Service Chooser Configuration",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},serviceDiscoveryConfiguration:{type:"object",title:"Service Discovery Configuration",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},serviceExpression:{type:"object",title:"Service Expression",group:"routing,cloud",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},hostHeader:{kind:"attribute",type:"string",defaultValue:"CamelServiceCallServiceHost",description:"The header that holds the service host information, default ServiceCallConstants.SERVICE_HOST",title:"Host Header",required:!1,deprecated:!1},portHeader:{kind:"attribute",type:"string",defaultValue:"CamelServiceCallServicePort",description:"The header that holds the service port information, default ServiceCallConstants.SERVICE_PORT",title:"Port Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},serviceFilterConfiguration:{type:"object",title:"Service Filter Configuration",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},setBody:{type:"object",title:"Set Body",group:"eip,transformation",icon:"setBody24.png",description:"Sets the contents of the message body",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression that returns the new body to use",title:"Expression",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},setExchangePattern:{type:"object",title:"Set Exchange Pattern",group:"configuration",icon:"generic24.png",description:"Sets the exchange pattern on the message exchange",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{pattern:{kind:"attribute",type:"object",enum:["InOnly","InOptionalOut","InOut","OutIn","OutOnly","OutOptionalIn","RobustInOnly","RobustOutOnly"],description:"Sets the new exchange pattern of the Exchange to be used from this point forward",title:"Pattern",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},setFaultBody:{type:"object",title:"Set Fault Body",group:"eip,transformation",icon:"generic24.png",description:"Sets the contents of a fault message's body",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression that returns the new fault body to use",title:"Expression",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},setHeader:{type:"object",title:"Set Header",group:"eip,transformation",icon:"generic24.png",description:"Sets the value of a message header",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to return the value of the header",title:"Expression",required:!0,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of message header to set a new value The simple language can be used to define a dynamic evaluated header name to be used. Otherwise a constant name will be used.",title:"Header Name",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},setOutHeader:{type:"object",title:"Set Out Header",group:"eip,transformation",icon:"generic24.png",description:"Sets the value of a header on the outbound message",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to return the value of the header",title:"Expression",required:!0,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of message header to set a new value",title:"Header Name",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},setProperty:{type:"object",title:"Set Property",group:"eip,transformation",icon:"generic24.png",description:"Sets a named property on the message exchange",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to return the value of the message exchange property",title:"Expression",required:!0,deprecated:!1},propertyName:{kind:"attribute",type:"string",description:"Name of exchange property to set a new value. The simple language can be used to define a dynamic evaluated exchange property name to be used. Otherwise a constant name will be used.",title:"Property Name",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},sort:{type:"object",title:"Sort",group:"eip,routing",icon:"generic24.png",description:"Sorts the contents of the message",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Optional expression to sort by something else than the message body",title:"Expression",required:!0,deprecated:!1},comparatorRef:{kind:"attribute",type:"string",description:"Sets a reference to lookup for the comparator to use for sorting",title:"Comparator Ref",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},split:{type:"object",title:"Split",group:"eip,routing",icon:"split24.png",description:"Splits a single message into many sub-messages.",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression of how to split the message body, such as as-is, using a tokenizer, or using an xpath.",title:"Expression",required:!0,deprecated:!1},parallelProcessing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then processing each splitted messages occurs concurrently. Note the caller thread will still wait until all messages has been fully processed, before it continues. Its only processing the sub messages from the splitter which happens concurrently.",title:"Parallel Processing",required:!1,deprecated:!1},strategyRef:{kind:"attribute",type:"string",description:"Sets a reference to the AggregationStrategy to be used to assemble the replies from the splitted messages, into a single outgoing message from the Splitter. By default Camel will use the original incoming message to the splitter (leave it unchanged). You can also use a POJO as the AggregationStrategy",title:"Strategy Ref",required:!1,deprecated:!1},strategyMethodName:{kind:"attribute",type:"string",description:"This option can be used to explicit declare the method name to use, when using POJOs as the AggregationStrategy.",title:"Strategy Method Name",required:!1,deprecated:!1},strategyMethodAllowNull:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If this option is false then the aggregate method is not used if there was no data to enrich. If this option is true then null values is used as the oldExchange (when no data to enrich), when using POJOs as the AggregationStrategy",title:"Strategy Method Allow Null",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"string",description:"Refers to a custom Thread Pool to be used for parallel processing. Notice if you set this option, then parallel processing is automatic implied, and you do not have to enable that option as well.",title:"Executor Service Ref",required:!1,deprecated:!1},streaming:{kind:"attribute",type:"boolean",defaultValue:"false",description:"When in streaming mode, then the splitter splits the original message on-demand, and each splitted message is processed one by one. This reduces memory usage as the splitter do not split all the messages first, but then we do not know the total size, and therefore the org.apache.camel.Exchange#SPLIT_SIZE is empty. In non-streaming mode (default) the splitter will split each message first, to know the total size, and then process each message one by one. This requires to keep all the splitted messages in memory and therefore requires more memory. The total size is provided in the org.apache.camel.Exchange#SPLIT_SIZE header. The streaming mode also affects the aggregation behavior. If enabled then Camel will process replies out-of-order, eg in the order they come back. If disabled, Camel will process replies in the same order as the messages was splitted.",title:"Streaming",required:!1,deprecated:!1},stopOnException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Will now stop further processing if an exception or failure occurred during processing of an org.apache.camel.Exchange and the caused exception will be thrown. Will also stop if processing the exchange failed (has a fault message) or an exception was thrown and handled by the error handler (such as using onException). In all situations the splitter will stop further processing. This is the same behavior as in pipeline, which is used by the routing engine. The default behavior is to not stop but continue processing till the end",title:"Stop On Exception",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"integer",defaultValue:"0",description:"Sets a total timeout specified in millis, when using parallel processing. If the Splitter hasn't been able to split and process all the sub messages within the given timeframe, then the timeout triggers and the Splitter breaks out and continues. Notice if you provide a TimeoutAwareAggregationStrategy then the timeout method is invoked before breaking out. If the timeout is reached with running tasks still remaining, certain tasks for which it is difficult for Camel to shut down in a graceful manner may continue to run. So use this option with a bit of care.",title:"Timeout",required:!1,deprecated:!1},onPrepareRef:{kind:"attribute",type:"string",description:"Uses the Processor when preparing the org.apache.camel.Exchange to be send. This can be used to deep-clone messages that should be send, or any custom logic needed before the exchange is send.",title:"On Prepare Ref",required:!1,deprecated:!1},shareUnitOfWork:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Shares the org.apache.camel.spi.UnitOfWork with the parent and each of the sub messages. Splitter will by default not share unit of work between the parent exchange and each splitted exchange. This means each splitted exchange has its own individual unit of work.",title:"Share Unit Of Work",required:!1,deprecated:!1},parallelAggregate:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then the aggregate method on AggregationStrategy can be called concurrently. Notice that this would require the implementation of AggregationStrategy to be implemented as thread-safe. By default this is false meaning that Camel synchronizes the call to the aggregate method. Though in some use-cases this can be used to archive higher performance when the AggregationStrategy is implemented as thread-safe.",title:"Parallel Aggregate",required:!1,deprecated:!1},stopOnAggregateException:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled, unwind exceptions occurring at aggregation time to the error handler when parallelProcessing is used. Currently, aggregation time exceptions do not stop the route processing when parallelProcessing is used. Enabling this option allows to work around this behavior. The default value is false for the sake of backward compatibility.",title:"Stop On Aggregate Exception",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},staticServiceDiscovery:{type:"object",title:"Static Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{servers:{kind:"element",type:"array",description:"Sets the server list. Each entry can be a list of servers separated by comma in the format: servicehost:port,servicehost2:port,servicehost3:port",title:"Servers",required:!1,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},sticky:{type:"object",title:"Sticky",group:"eip,routing,loadbalance",icon:"generic24.png",description:"Sticky load balancer",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{correlationExpression:{kind:"expression",type:"object",description:"The correlation expression to use to calculate the correlation key",title:"Correlation Expression",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},stop:{type:"object",title:"Stop",group:"eip,routing",icon:"generic24.png",description:"Stops the processing of the current message",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},"stream-config":{type:"object",title:"Stream-config",group:"eip,routing,resequence",icon:"generic24.png",description:"Configures stream-processing resequence eip.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{capacity:{kind:"attribute",type:"integer",defaultValue:"100",description:"Sets the capacity of the resequencer's inbound queue.",title:"Capacity",required:!1,deprecated:!1},timeout:{kind:"attribute",type:"integer",defaultValue:"1000",description:"Sets minimum time to wait for missing elements (messages).",title:"Timeout",required:!1,deprecated:!1},deliveryAttemptInterval:{kind:"attribute",type:"integer",defaultValue:"1000",description:"Sets the interval in milli seconds the stream resequencer will at most wait while waiting for condition of being able to deliver.",title:"Delivery Attempt Interval",required:!1,deprecated:!1},ignoreInvalidExchanges:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore invalid exchanges",title:"Ignore Invalid Exchanges",required:!1,deprecated:!1},comparatorRef:{kind:"attribute",type:"string",description:"To use a custom comparator",title:"Comparator Ref",required:!1,deprecated:!1},rejectOld:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If true, throws an exception when messages older than the last delivered message are processed",title:"Reject Old",required:!1,deprecated:!1}}},streamCaching:{type:"object",title:"Stream Caching",group:"spring,configuration",icon:"generic24.png",description:"Stream caching configuration.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{enabled:{kind:"attribute",type:"string",defaultValue:"false",description:"Sets whether the stream caching is enabled. Notice: This cannot be changed at runtime.",title:"Enabled",required:!1,deprecated:!1},spoolDirectory:{kind:"attribute",type:"string",description:"Sets the spool (temporary) directory to use for overflow and spooling to disk. If no spool directory has been explicit configured, then a temporary directory is created in the java.io.tmpdir directory.",title:"Spool Directory",required:!1,deprecated:!1},spoolChiper:{kind:"attribute",type:"string",description:"Sets a chiper name to use when spooling to disk to write with encryption. By default the data is not encrypted.",title:"Spool Chiper",required:!1,deprecated:!0},spoolCipher:{kind:"attribute",type:"string",description:"Sets a cipher name to use when spooling to disk to write with encryption. By default the data is not encrypted.",title:"Spool Cipher",required:!1,deprecated:!1},spoolThreshold:{kind:"attribute",type:"string",description:"Threshold in bytes when overflow to disk is activated. The default threshold is org.apache.camel.StreamCache#DEFAULT_SPOOL_THRESHOLD bytes (eg 128kb). Use -1 to disable overflow to disk.",title:"Spool Threshold",required:!1,deprecated:!1},spoolUsedHeapMemoryThreshold:{kind:"attribute",type:"string",description:"Sets a percentage (1-99) of used heap memory threshold to activate spooling to disk.",title:"Spool Used Heap Memory Threshold",required:!1,deprecated:!1},spoolUsedHeapMemoryLimit:{kind:"attribute",type:"string",description:"Sets what the upper bounds should be when spoolUsedHeapMemoryThreshold is in use.",title:"Spool Used Heap Memory Limit",required:!1,deprecated:!1},spoolRules:{kind:"attribute",type:"string",description:"Reference to one or more custom org.apache.camel.spi.StreamCachingStrategy.SpoolRule to use. Multiple rules can be separated by comma.",title:"Spool Rules",required:!1,deprecated:!1},bufferSize:{kind:"attribute",type:"string",description:"Sets the buffer size to use when allocating in-memory buffers used for in-memory stream caches. The default size is org.apache.camel.util.IOHelper#DEFAULT_BUFFER_SIZE",title:"Buffer Size",required:!1,deprecated:!1},removeSpoolDirectoryWhenStopping:{kind:"attribute",type:"string",defaultValue:"true",description:"Whether to remove the temporary directory when stopping. This option is default true",title:"Remove Spool Directory When Stopping",required:!1,deprecated:!1},statisticsEnabled:{kind:"attribute",type:"string",description:"Sets whether statistics is enabled.",title:"Statistics Enabled",required:!1,deprecated:!1},anySpoolRules:{kind:"attribute",type:"string",defaultValue:"false",description:"Sets whether if just any of the org.apache.camel.spi.StreamCachingStrategy.SpoolRule rules returns true then shouldSpoolCache(long) returns true. If this option is false, then all the org.apache.camel.spi.StreamCachingStrategy.SpoolRule must return true. The default value is false which means that all the rules must return true.",title:"Any Spool Rules",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},template:{type:"object",title:"Template",group:"spring,configuration",icon:"generic24.png",description:"Configures a ProducerTemplate",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{defaultEndpoint:{kind:"attribute",type:"string",description:"Sets the default endpoint URI used by default for sending message exchanges",title:"Default Endpoint",required:!1,deprecated:!1},maximumCacheSize:{kind:"attribute",type:"integer",description:"Sets a custom maximum cache size to use in the backing cache pools.",title:"Maximum Cache Size",required:!1,deprecated:!1},camelContextId:{kind:"attribute",type:"string",description:"Id of CamelContext to use if there are multiple CamelContexts in the same JVM",title:"Camel Context Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},threadPool:{type:"object",title:"Thread Pool",group:"spring,configuration",icon:"generic24.png",description:"Configuration of thread pools",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{poolSize:{kind:"attribute",type:"string",description:"Sets the core pool size (threads to keep minimum in pool)",title:"Pool Size",required:!0,deprecated:!1},maxPoolSize:{kind:"attribute",type:"string",description:"Sets the maximum pool size",title:"Max Pool Size",required:!1,deprecated:!1},keepAliveTime:{kind:"attribute",type:"string",description:"Sets the keep alive time for inactive threads",title:"Keep Alive Time",required:!1,deprecated:!1},timeUnit:{kind:"attribute",type:"object",defaultValue:"SECONDS",enum:["DAYS","HOURS","MICROSECONDS","MILLISECONDS","MINUTES","NANOSECONDS","SECONDS"],description:"Sets the time unit used for keep alive time",title:"Time Unit",required:!1,deprecated:!1},maxQueueSize:{kind:"attribute",type:"string",description:"Sets the maximum number of tasks in the work queue. Use -1 for an unbounded queue",title:"Max Queue Size",required:!1,deprecated:!1},allowCoreThreadTimeOut:{kind:"attribute",type:"string",description:"Sets whether to allow core threads to timeout",title:"Allow Core Thread Time Out",required:!1,deprecated:!1},rejectedPolicy:{kind:"attribute",type:"object",defaultValue:"CallerRuns",enum:["Abort","CallerRuns","Discard","DiscardOldest"],description:"Sets the handler for tasks which cannot be executed by the thread pool.",title:"Rejected Policy",required:!1,deprecated:!1},threadName:{kind:"attribute",type:"string",description:"To use a custom thread name / pattern",title:"Thread Name",required:!0,deprecated:!1},scheduled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to use a scheduled thread pool",title:"Scheduled",required:!1,deprecated:!1},camelContextId:{kind:"attribute",type:"string",description:"Id of CamelContext to use if there are multiple CamelContexts in the same JVM",title:"Camel Context Id",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},threadPoolProfile:{type:"object",title:"Thread Pool Profile",group:"configuration",icon:"generic24.png",description:"To configure thread pools",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{defaultProfile:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether this profile is the default thread pool profile",title:"Default Profile",required:!1,deprecated:!1},poolSize:{kind:"attribute",type:"string",description:"Sets the core pool size",title:"Pool Size",required:!1,deprecated:!1},maxPoolSize:{kind:"attribute",type:"string",description:"Sets the maximum pool size",title:"Max Pool Size",required:!1,deprecated:!1},keepAliveTime:{kind:"attribute",type:"string",description:"Sets the keep alive time for idle threads in the pool",title:"Keep Alive Time",required:!1,deprecated:!1},timeUnit:{kind:"attribute",type:"object",enum:["DAYS","HOURS","MICROSECONDS","MILLISECONDS","MINUTES","NANOSECONDS","SECONDS"],description:"Sets the time unit to use for keep alive time By default SECONDS is used.",title:"Time Unit",required:!1,deprecated:!1},maxQueueSize:{kind:"attribute",type:"string",description:"Sets the maximum number of tasks in the work queue. Use -1 or Integer.MAX_VALUE for an unbounded queue",title:"Max Queue Size",required:!1,deprecated:!1},allowCoreThreadTimeOut:{kind:"attribute",type:"string",description:"Whether idle core threads is allowed to timeout and therefore can shrink the pool size below the core pool size Is by default false",title:"Allow Core Thread Time Out",required:!1,deprecated:!1},rejectedPolicy:{kind:"attribute",type:"object",enum:["Abort","CallerRuns","Discard","DiscardOldest"],description:"Sets the handler for tasks which cannot be executed by the thread pool.",title:"Rejected Policy",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},threads:{type:"object",title:"Threads",group:"eip,routing",icon:"generic24.png",description:"Specifies that all steps after this node are processed asynchronously",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{executorServiceRef:{kind:"attribute",type:"string",description:"To refer to a custom thread pool or use a thread pool profile (as overlay)",title:"Executor Service Ref",required:!1,deprecated:!1},poolSize:{kind:"attribute",type:"integer",description:"Sets the core pool size",title:"Pool Size",required:!1,deprecated:!1},maxPoolSize:{kind:"attribute",type:"integer",description:"Sets the maximum pool size",title:"Max Pool Size",required:!1,deprecated:!1},keepAliveTime:{kind:"attribute",type:"integer",description:"Sets the keep alive time for idle threads",title:"Keep Alive Time",required:!1,deprecated:!1},timeUnit:{kind:"attribute",type:"object",enum:["DAYS","HOURS","MICROSECONDS","MILLISECONDS","MINUTES","NANOSECONDS","SECONDS"],description:"Sets the keep alive time unit. By default SECONDS is used.",title:"Time Unit",required:!1,deprecated:!1},maxQueueSize:{kind:"attribute",type:"integer",description:"Sets the maximum number of tasks in the work queue. Use -1 or Integer.MAX_VALUE for an unbounded queue",title:"Max Queue Size",required:!1,deprecated:!1},allowCoreThreadTimeOut:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether idle core threads is allowed to timeout and therefore can shrink the pool size below the core pool size Is by default false",title:"Allow Core Thread Time Out",required:!1,deprecated:!1},threadName:{kind:"attribute",type:"string",defaultValue:"Threads",description:"Sets the thread name to use.",title:"Thread Name",required:!1,deprecated:!1},rejectedPolicy:{kind:"attribute",type:"object",enum:["Abort","CallerRuns","Discard","DiscardOldest"],description:"Sets the handler for tasks which cannot be executed by the thread pool.",title:"Rejected Policy",required:!1,deprecated:!1},callerRunsWhenRejected:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not to use as caller runs as fallback when a task is rejected being added to the thread pool (when its full). This is only used as fallback if no rejectedPolicy has been configured, or the thread pool has no configured rejection handler. Is by default true",title:"Caller Runs When Rejected",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},throttle:{type:"object",title:"Throttle",group:"eip,routing",icon:"generic24.png",description:"Controls the rate at which messages are passed to the next node in the route",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression to configure the maximum number of messages to throttle per request",title:"Expression",required:!0,deprecated:!1},correlationExpression:{kind:"expression",type:"object",description:"The expression used to calculate the correlation key to use for throttle grouping. The Exchange which has the same correlation key is throttled together.",title:"Correlation Expression",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"string",description:"To use a custom thread pool (ScheduledExecutorService) by the throttler.",title:"Executor Service Ref",required:!1,deprecated:!1},timePeriodMillis:{kind:"attribute",type:"integer",defaultValue:"1000",description:"Sets the time period during which the maximum request count is valid for",title:"Time Period Millis",required:!1,deprecated:!1},asyncDelayed:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enables asynchronous delay which means the thread will not block while delaying.",title:"Async Delayed",required:!1,deprecated:!1},callerRunsWhenRejected:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the caller should run the task when it was rejected by the thread pool. Is by default true",title:"Caller Runs When Rejected",required:!1,deprecated:!1},rejectExecution:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not throttler throws the ThrottlerRejectedExecutionException when the exchange exceeds the request limit Is by default false",title:"Reject Execution",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},throwException:{type:"object",title:"Throw Exception",group:"error",icon:"generic24.png",description:"Throws an exception",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the exception instance to lookup from the registry to throw",title:"Ref",required:!1,deprecated:!1},message:{kind:"attribute",type:"string",description:"To create a new exception instance and use the given message as caused message (supports simple language)",title:"Message",required:!1,deprecated:!1},exceptionType:{kind:"attribute",type:"string",description:"The class of the exception to create using the message.",title:"Exception Type",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},to:{type:"object",title:"To",group:"eip,endpoint,routing",icon:"endpoint24.png",description:"Sends the message to a static endpoint",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{uri:{kind:"attribute",type:"string",description:"Sets the uri of the endpoint to send to.",title:"Uri",required:!0,deprecated:!1},ref:{kind:"attribute",type:"string",description:"Sets the reference of the endpoint to send to.",title:"Ref",required:!1,deprecated:!0},pattern:{kind:"attribute",type:"object",enum:["InOnly","InOptionalOut","InOut","OutIn","OutOnly","OutOptionalIn","RobustInOnly","RobustOutOnly"],description:"Sets the optional ExchangePattern used to invoke this endpoint",title:"Pattern",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},toD:{type:"object",title:"To D",group:"eip,endpoint,routing",icon:"endpoint24.png",description:"Sends the message to a dynamic endpoint",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{uri:{kind:"attribute",type:"string",description:"The uri of the endpoint to send to. The uri can be dynamic computed using the org.apache.camel.language.simple.SimpleLanguage expression.",title:"Uri",required:!0,deprecated:!1},pattern:{kind:"attribute",type:"object",enum:["InOnly","InOptionalOut","InOut","OutIn","OutOnly","OutOptionalIn","RobustInOnly","RobustOutOnly"],description:"Sets the optional ExchangePattern used to invoke this endpoint",title:"Pattern",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.impl.ConsumerCache which is used to cache and reuse producers.",title:"Cache Size",required:!1,deprecated:!1},ignoreInvalidEndpoint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoint",required:!1,deprecated:!1},allowOptimisedComponents:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to allow components to optimise toD if they are org.apache.camel.spi.SendDynamicAware.",title:"Allow Optimised Components",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},topic:{type:"object",title:"Topic",group:"eip,routing,loadbalance",icon:"generic24.png",description:"Topic load balancer",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},transacted:{type:"object",title:"Transacted",group:"configuration",icon:"transactionalClient24.png",description:"Enables transaction on the route",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{ref:{kind:"attribute",type:"string",description:"Sets a reference to use for lookup the policy in the registry.",title:"Ref",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},transform:{type:"object",title:"Transform",group:"eip,transformation",icon:"transform24.png",description:"Transforms the message body based on an expression",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to return the transformed message body (the new message body to use)",title:"Expression",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},transformers:{type:"object",title:"Transformations",group:"transformation",icon:"generic24.png",description:"To configure transformers.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{transformers:{kind:"element",type:"array",description:"The configured transformers",title:"Transformers",required:!0,deprecated:!1}}},unmarshal:{type:"object",title:"Unmarshal",group:"eip,transformation",icon:"unmarshal24.png",description:"Converts the message data received from the wire into a format that Apache Camel processors can consume",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{dataFormatType:{kind:"element",type:"object",description:"The data format to be used",title:"Data Format Type",required:!0,deprecated:!1},ref:{kind:"attribute",type:"string",description:"To refer to a custom data format to use as unmarshaller",title:"Ref",required:!1,deprecated:!0},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},validate:{type:"object",title:"Validate",group:"eip,transformation",icon:"generic24.png",description:"Validates a message based on an expression",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{expression:{kind:"expression",type:"object",description:"Expression to use for validation as a predicate. The expression should return either true or false. If returning false the message is invalid and an exception is thrown.",title:"Expression",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},validators:{type:"object",title:"Validations",group:"validation",icon:"generic24.png",description:"To configure validators.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{validators:{kind:"element",type:"array",description:"The configured transformers",title:"Validators",required:!0,deprecated:!1}}},weighted:{type:"object",title:"Weighted",group:"eip,routing,loadbalance",icon:"generic24.png",description:"Weighted load balancer",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{roundRobin:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To enable round robin mode. By default the weighted distribution mode is used. The default value is false.",title:"Round Robin",required:!1,deprecated:!1},distributionRatio:{kind:"attribute",type:"string",description:"The distribution ratio is a delimited String consisting on integer weights separated by delimiters for example 2,3,5. The distributionRatio must match the number of endpoints and/or processors specified in the load balancer list.",title:"Distribution Ratio",required:!0,deprecated:!1},distributionRatioDelimiter:{kind:"attribute",type:"string",defaultValue:",",description:"Delimiter used to specify the distribution ratio. The default value is ,",title:"Distribution Ratio Delimiter",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},when:{type:"object",title:"When",group:"eip,routing",icon:"generic24.png",description:"Triggers a route when an expression evaluates to true",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression used as the predicate to evaluate whether this when should trigger and route the message or not.",title:"Expression",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},whenSkipSendToEndpoint:{type:"object",title:"When Skip Send To Endpoint",group:"configuration",icon:"generic24.png",description:"Predicate to determine if the message should be sent or not to the endpoint, when using interceptSentToEndpoint.",acceptInput:"true",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{expression:{kind:"expression",type:"object",description:"Expression used as the predicate to evaluate whether the message should be sent or not to the endpoint",title:"Expression",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},wireTap:{type:"object",title:"Wire Tap",group:"eip,endpoint,routing",icon:"wireTap24.png",description:"Routes a copy of a message (or creates a new message) to a secondary destination while continue routing the original message.",acceptInput:"true",acceptOutput:"false",nextSiblingAddedAsChild:"true",properties:{processorRef:{kind:"attribute",type:"string",description:"Reference to a Processor to use for creating a new body as the message to use for wire tapping",title:"Processor Ref",required:!1,deprecated:!1},body:{kind:"expression",type:"object",description:"Uses the expression for creating a new body as the message to use for wire tapping",title:"Body",required:!1,deprecated:!1},executorServiceRef:{kind:"attribute",type:"string",description:"Uses a custom thread pool",title:"Executor Service Ref",required:!1,deprecated:!1},copy:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Uses a copy of the original exchange",title:"Copy",required:!1,deprecated:!1},dynamicUri:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the uri is dynamic or static. If the uri is dynamic then the simple language is used to evaluate a dynamic uri to use as the wire-tap destination, for each incoming message. This works similar to how the toD EIP pattern works. If static then the uri is used as-is as the wire-tap destination.",title:"Dynamic Uri",required:!1,deprecated:!1},onPrepareRef:{kind:"attribute",type:"string",description:"Uses the Processor when preparing the org.apache.camel.Exchange to be send. This can be used to deep-clone messages that should be send, or any custom logic needed before the exchange is send.",title:"On Prepare Ref",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"The uri of the endpoint to send to. The uri can be dynamic computed using the org.apache.camel.language.simple.SimpleLanguage expression.",title:"Uri",required:!0,deprecated:!1},pattern:{kind:"attribute",type:"object",enum:["InOnly","InOptionalOut","InOut","OutIn","OutOnly","OutOptionalIn","RobustInOnly","RobustOutOnly"],description:"Sets the optional ExchangePattern used to invoke this endpoint",title:"Pattern",required:!1,deprecated:!1},cacheSize:{kind:"attribute",type:"integer",description:"Sets the maximum size used by the org.apache.camel.impl.ConsumerCache which is used to cache and reuse producers.",title:"Cache Size",required:!1,deprecated:!1},ignoreInvalidEndpoint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Ignore the invalidate endpoint exception when try to create a producer with that endpoint",title:"Ignore Invalid Endpoint",required:!1,deprecated:!1},allowOptimisedComponents:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to allow components to optimise toD if they are org.apache.camel.spi.SendDynamicAware.",title:"Allow Optimised Components",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},zookeeperServiceDiscovery:{type:"object",title:"Zookeeper Service Discovery",group:"routing,cloud,service-discovery",icon:"generic24.png",description:"",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{nodes:{kind:"attribute",type:"string",description:"A comma separate list of servers to connect to in the form host:port",title:"Nodes",required:!0,deprecated:!1},namespace:{kind:"attribute",type:"string",description:"As ZooKeeper is a shared space, users of a given cluster should stay within a pre-defined namespace. If a namespace is set here, all paths will get pre-pended with the namespace",title:"Namespace",required:!1,deprecated:!1},reconnectBaseSleepTime:{kind:"attribute",type:"string",description:"Initial amount of time to wait between retries.",title:"Reconnect Base Sleep Time",required:!1,deprecated:!1},reconnectMaxSleepTime:{kind:"attribute",type:"string",description:"Max time in ms to sleep on each retry",title:"Reconnect Max Sleep Time",required:!1,deprecated:!1},reconnectMaxRetries:{kind:"attribute",type:"integer",description:"Max number of times to retry",title:"Reconnect Max Retries",required:!1,deprecated:!1},sessionTimeout:{kind:"attribute",type:"string",description:"Session timeout.",title:"Session Timeout",required:!1,deprecated:!1},connectionTimeout:{kind:"attribute",type:"string",description:"Connection timeout.",title:"Connection Timeout",required:!1,deprecated:!1},basePath:{kind:"attribute",type:"string",description:"Set the base path to store in ZK",title:"Base Path",required:!0,deprecated:!1},properties:{kind:"element",type:"array",description:"Set client properties to use. These properties are specific to what service call implementation are in use. For example if using ribbon, then the client properties are define in com.netflix.client.config.CommonClientConfigKey.",title:"Properties",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}}},rests:{apiKey:{type:"object",title:"Api Key",group:"rest",icon:"generic24.png",description:"Rest security basic auth definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{name:{kind:"attribute",type:"string",description:"The name of the header or query parameter to be used.",title:"Name",required:!0,deprecated:!1},inHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To use header as the location of the API key.",title:"In Header",required:!1,deprecated:!1},inQuery:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To use query parameter as the location of the API key.",title:"In Query",required:!1,deprecated:!1},key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},description:{kind:"attribute",type:"string",description:"A short description for security scheme.",title:"Description",required:!1,deprecated:!1}}},basicAuth:{type:"object",title:"Basic Auth",group:"rest,security",icon:"generic24.png",description:"Rest security basic auth definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},description:{kind:"attribute",type:"string",description:"A short description for security scheme.",title:"Description",required:!1,deprecated:!1}}},delete:{type:"object",title:"Delete",group:"rest",icon:"generic24.png",description:"Rest DELETE command",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{method:{kind:"attribute",type:"string",description:"The HTTP verb such as GET, POST, DELETE, etc.",title:"Method",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"Uri template of this REST service such as /id.",title:"Uri",required:!1,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"auto",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},toOrRoute:{kind:"element",type:"object",description:"To route from this REST service to a Camel endpoint, or an inlined route",title:"To Or Route",required:!0,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"The route id this rest-dsl is using (read-only)",title:"Route Id",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include or exclude the VerbDefinition in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},get:{type:"object",title:"Get",group:"rest",icon:"generic24.png",description:"Rest GET command",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{method:{kind:"attribute",type:"string",description:"The HTTP verb such as GET, POST, DELETE, etc.",title:"Method",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"Uri template of this REST service such as /id.",title:"Uri",required:!1,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"auto",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},toOrRoute:{kind:"element",type:"object",description:"To route from this REST service to a Camel endpoint, or an inlined route",title:"To Or Route",required:!0,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"The route id this rest-dsl is using (read-only)",title:"Route Id",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include or exclude the VerbDefinition in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},head:{type:"object",title:"Head",group:"rest",icon:"generic24.png",description:"Rest HEAD command",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{method:{kind:"attribute",type:"string",description:"The HTTP verb such as GET, POST, DELETE, etc.",title:"Method",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"Uri template of this REST service such as /id.",title:"Uri",required:!1,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"auto",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},toOrRoute:{kind:"element",type:"object",description:"To route from this REST service to a Camel endpoint, or an inlined route",title:"To Or Route",required:!0,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"The route id this rest-dsl is using (read-only)",title:"Route Id",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include or exclude the VerbDefinition in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},oauth2:{type:"object",title:"Oauth2",group:"rest,security",icon:"generic24.png",description:"Rest security OAuth2 definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{authorizationUrl:{kind:"attribute",type:"string",description:"The authorization URL to be used for this flow. This SHOULD be in the form of a URL. Required for implicit and access code flows",title:"Authorization Url",required:!1,deprecated:!1},tokenUrl:{kind:"attribute",type:"string",description:"The token URL to be used for this flow. This SHOULD be in the form of a URL. Required for password, application, and access code flows.",title:"Token Url",required:!1,deprecated:!1},flow:{kind:"attribute",type:"string",enum:["accessCode","application","implicit","password"],description:"The flow used by the OAuth2 security scheme. Valid values are implicit, password, application or accessCode.",title:"Flow",required:!1,deprecated:!1},scopes:{kind:"element",type:"array",description:"The available scopes for an OAuth2 security scheme",title:"Scopes",required:!1,deprecated:!1},key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},description:{kind:"attribute",type:"string",description:"A short description for security scheme.",title:"Description",required:!1,deprecated:!1}}},options:{type:"object",title:"Options",group:"rest",icon:"generic24.png",description:"Rest OPTIONS command",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{method:{kind:"attribute",type:"string",description:"The HTTP verb such as GET, POST, DELETE, etc.",title:"Method",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"Uri template of this REST service such as /id.",title:"Uri",required:!1,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"auto",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},toOrRoute:{kind:"element",type:"object",description:"To route from this REST service to a Camel endpoint, or an inlined route",title:"To Or Route",required:!0,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"The route id this rest-dsl is using (read-only)",title:"Route Id",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include or exclude the VerbDefinition in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},param:{type:"object",title:"Param",group:"rest",icon:"generic24.png",description:"To specify the rest operation parameters using Swagger.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{name:{kind:"attribute",type:"string",description:"Sets the Swagger Parameter name.",title:"Name",required:!0,deprecated:!1},type:{kind:"attribute",type:"object",defaultValue:"path",enum:["body","formData","header","path","query"],description:"Sets the Swagger Parameter type.",title:"Type",required:!0,deprecated:!1},defaultValue:{kind:"attribute",type:"string",description:"Sets the Swagger Parameter default value.",title:"Default Value",required:!1,deprecated:!1},required:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Sets the Swagger Parameter required flag.",title:"Required",required:!1,deprecated:!1},collectionFormat:{kind:"attribute",type:"object",defaultValue:"csv",enum:["csv","multi","pipes","ssv","tsv"],description:"Sets the Swagger Parameter collection format.",title:"Collection Format",required:!1,deprecated:!1},arrayType:{kind:"attribute",type:"string",defaultValue:"string",description:"Sets the Swagger Parameter array type. Required if data type is array. Describes the type of items in the array.",title:"Array Type",required:!1,deprecated:!1},dataType:{kind:"attribute",type:"string",defaultValue:"string",description:"Sets the Swagger Parameter data type.",title:"Data Type",required:!1,deprecated:!1},dataFormat:{kind:"attribute",type:"string",description:"Sets the Swagger Parameter data format.",title:"Data Format",required:!1,deprecated:!1},value:{kind:"element",type:"array",description:"Sets the Swagger Parameter list of allowable values (enum).",title:"Value",required:!1,deprecated:!1},access:{kind:"attribute",type:"string",description:"Sets the Swagger Parameter paramAccess flag.",title:"Access",required:!1,deprecated:!1},examples:{kind:"element",type:"array",description:"Sets the Swagger Parameter examples.",title:"Examples",required:!1,deprecated:!1},description:{kind:"attribute",type:"string",description:"Sets the Swagger Parameter description.",title:"Description",required:!1,deprecated:!1}}},patch:{type:"object",title:"Patch",group:"rest",icon:"generic24.png",description:"Rest PATCH command",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{method:{kind:"attribute",type:"string",description:"The HTTP verb such as GET, POST, DELETE, etc.",title:"Method",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"Uri template of this REST service such as /id.",title:"Uri",required:!1,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"auto",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},toOrRoute:{kind:"element",type:"object",description:"To route from this REST service to a Camel endpoint, or an inlined route",title:"To Or Route",required:!0,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"The route id this rest-dsl is using (read-only)",title:"Route Id",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include or exclude the VerbDefinition in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},post:{type:"object",title:"Post",group:"rest",icon:"generic24.png",description:"Rest POST command",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{method:{kind:"attribute",type:"string",description:"The HTTP verb such as GET, POST, DELETE, etc.",title:"Method",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"Uri template of this REST service such as /id.",title:"Uri",required:!1,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"auto",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},toOrRoute:{kind:"element",type:"object",description:"To route from this REST service to a Camel endpoint, or an inlined route",title:"To Or Route",required:!0,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"The route id this rest-dsl is using (read-only)",title:"Route Id",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include or exclude the VerbDefinition in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},put:{type:"object",title:"Put",group:"rest",icon:"generic24.png",description:"Rest PUT command",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{method:{kind:"attribute",type:"string",description:"The HTTP verb such as GET, POST, DELETE, etc.",title:"Method",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"Uri template of this REST service such as /id.",title:"Uri",required:!1,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"auto",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},toOrRoute:{kind:"element",type:"object",description:"To route from this REST service to a Camel endpoint, or an inlined route",title:"To Or Route",required:!0,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"The route id this rest-dsl is using (read-only)",title:"Route Id",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include or exclude the VerbDefinition in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},responseHeader:{type:"object",title:"Response Header",group:"rest",icon:"generic24.png",description:"To specify the rest operation response headers using Swagger.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{name:{kind:"attribute",type:"string",description:"Name of the parameter. This option is mandatory.",title:"Name",required:!0,deprecated:!1},collectionFormat:{kind:"attribute",type:"object",defaultValue:"csv",enum:["csv","multi","pipes","ssv","tsv"],description:"Sets the Swagger Parameter collection format.",title:"Collection Format",required:!1,deprecated:!1},arrayType:{kind:"attribute",type:"string",defaultValue:"string",description:"Sets the Swagger Parameter array type. Required if data type is array. Describes the type of items in the array.",title:"Array Type",required:!1,deprecated:!1},dataType:{kind:"attribute",type:"string",defaultValue:"string",description:"Sets the Swagger header data type.",title:"Data Type",required:!1,deprecated:!1},dataFormat:{kind:"attribute",type:"string",description:"Sets the Swagger Parameter data format.",title:"Data Format",required:!1,deprecated:!1},value:{kind:"element",type:"array",description:"Sets the Swagger Parameter list of allowable values.",title:"Value",required:!1,deprecated:!1},example:{kind:"attribute",type:"string",description:"Sets the Swagger example",title:"Example",required:!1,deprecated:!1},description:{kind:"attribute",type:"string",description:"Description of the parameter.",title:"Description",required:!1,deprecated:!1}}},responseMessage:{type:"object",title:"Response Message",group:"rest",icon:"generic24.png",description:"To specify the rest operation response messages using Swagger.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{code:{kind:"attribute",type:"string",defaultValue:"200",description:"The response code such as a HTTP status code",title:"Code",required:!1,deprecated:!1},message:{kind:"attribute",type:"string",description:"The response message (description)",title:"Message",required:!0,deprecated:!1},responseModel:{kind:"attribute",type:"string",description:"The response model",title:"Response Model",required:!1,deprecated:!1},header:{kind:"element",type:"array",description:"Adds a response header",title:"Header",required:!1,deprecated:!1},examples:{kind:"element",type:"array",description:"Examples of response messages",title:"Examples",required:!1,deprecated:!1}}},rest:{type:"object",title:"Rest",group:"rest",icon:"generic24.png",description:"Defines a rest service using the rest-dsl",acceptInput:"false",acceptOutput:"true",nextSiblingAddedAsChild:"false",properties:{path:{kind:"attribute",type:"string",description:"Path of the rest service, such as /foo",title:"Path",required:!1,deprecated:!1},tag:{kind:"attribute",type:"string",description:"To configure a special tag for the operations within this rest definition.",title:"Tag",required:!1,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"auto",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include or exclude the VerbDefinition in API documentation. This option will override what may be configured on a parent level The default value is true.",title:"Api Docs",required:!1,deprecated:!1},securityDefinitions:{kind:"element",type:"object",description:"Sets the security definitions such as Basic, OAuth2 etc.",title:"Security Definitions",required:!1,deprecated:!1},verbs:{kind:"element",type:"array",description:"The HTTP verbs this REST service accepts and uses",title:"Verbs",required:!0,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},restBinding:{type:"object",title:"Rest Binding",group:"rest",icon:"generic24.png",description:"To configure rest binding",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"off",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. The default value is off",title:"Binding Mode",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do.",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},component:{kind:"attribute",type:"string",description:"Sets the component name that this definition will apply to",title:"Component",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},restConfiguration:{type:"object",title:"Rest Configuration",group:"rest",icon:"generic24.png",description:"To configure rest",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{component:{kind:"attribute",type:"string",description:"The Camel Rest component to use for the REST transport (consumer), such as restlet, spark-rest. If no component has been explicit configured, then Camel will lookup if there is a Camel component that integrates with the Rest DSL, or if a org.apache.camel.spi.RestConsumerFactory is registered in the registry. If either one is found, then that is being used.",title:"Component",required:!1,deprecated:!1},apiComponent:{kind:"attribute",type:"string",defaultValue:"swagger",description:"The name of the Camel component to use as the REST API (such as swagger)",title:"Api Component",required:!1,deprecated:!1},producerComponent:{kind:"attribute",type:"string",description:"Sets the name of the Camel component to use as the REST producer",title:"Producer Component",required:!1,deprecated:!1},scheme:{kind:"attribute",type:"string",description:"The scheme to use for exposing the REST service. Usually http or https is supported. The default value is http",title:"Scheme",required:!1,deprecated:!1},host:{kind:"attribute",type:"string",description:"The hostname to use for exposing the REST service.",title:"Host",required:!1,deprecated:!1},apiHost:{kind:"attribute",type:"string",description:"To use an specific hostname for the API documentation (eg swagger) This can be used to override the generated host with this configured hostname",title:"Api Host",required:!1,deprecated:!1},useXForwardHeaders:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to use X-Forward headers for Host and related setting. The default value is true.",title:"Use X Forward Headers",required:!1,deprecated:!1},port:{kind:"attribute",type:"string",description:"The port number to use for exposing the REST service. Notice if you use servlet component then the port number configured here does not apply, as the port number in use is the actual port number the servlet component is using. eg if using Apache Tomcat its the tomcat http port, if using Apache Karaf its the HTTP service in Karaf that uses port 8181 by default etc. Though in those situations setting the port number here, allows tooling and JMX to know the port number, so its recommended to set the port number to the number that the servlet engine uses.",title:"Port",required:!1,deprecated:!1},producerApiDoc:{kind:"attribute",type:"string",description:"Sets the location of the api document (swagger api) the REST producer will use to validate the REST uri and query parameters are valid accordingly to the api document. This requires adding camel-swagger-java to the classpath, and any miss configuration will let Camel fail on startup and report the error(s). The location of the api document is loaded from classpath by default, but you can use file: or http: to refer to resources to load from file or http url.",title:"Producer Api Doc",required:!1,deprecated:!1},contextPath:{kind:"attribute",type:"string",description:"Sets a leading context-path the REST services will be using. This can be used when using components such as camel-servlet where the deployed web application is deployed using a context-path. Or for components such as camel-jetty or camel-netty4-http that includes a HTTP server.",title:"Context Path",required:!1,deprecated:!1},apiContextPath:{kind:"attribute",type:"string",description:"Sets a leading API context-path the REST API services will be using. This can be used when using components such as camel-servlet where the deployed web application is deployed using a context-path.",title:"Api Context Path",required:!1,deprecated:!1},apiContextRouteId:{kind:"attribute",type:"string",description:"Sets the route id to use for the route that services the REST API. The route will by default use an auto assigned route id.",title:"Api Context Route Id",required:!1,deprecated:!1},apiContextIdPattern:{kind:"attribute",type:"string",description:"Sets an CamelContext id pattern to only allow Rest APIs from rest services within CamelContext's which name matches the pattern. The pattern #name# refers to the CamelContext name, to match on the current CamelContext only. For any other value, the pattern uses the rules from link org.apache.camel.util.EndpointHelper#matchPattern(String, String)",title:"Api Context Id Pattern",required:!1,deprecated:!1},apiContextListing:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether listing of all available CamelContext's with REST services in the JVM is enabled. If enabled it allows to discover these contexts, if false then only the current CamelContext is in use.",title:"Api Context Listing",required:!1,deprecated:!1},apiVendorExtension:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether vendor extension is enabled in the Rest APIs. If enabled then Camel will include additional information as vendor extension (eg keys starting with x-) such as route ids, class names etc. Not all 3rd party API gateways and tools supports vendor-extensions when importing your API docs.",title:"Api Vendor Extension",required:!1,deprecated:!1},hostNameResolver:{kind:"attribute",type:"object",enum:["allLocalIp","localHostName","localIp"],description:"If no hostname has been explicit configured, then this resolver is used to compute the hostname the REST service will be using.",title:"Host Name Resolver",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"off",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. The default value is off",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do.",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},jsonDataFormat:{kind:"attribute",type:"string",description:"Name of specific json data format to use. By default json-jackson will be used. Important: This option is only for setting a custom name of the data format, not to refer to an existing data format instance.",title:"Json Data Format",required:!1,deprecated:!1},xmlDataFormat:{kind:"attribute",type:"string",description:"Name of specific XML data format to use. By default jaxb will be used. Important: This option is only for setting a custom name of the data format, not to refer to an existing data format instance.",title:"Xml Data Format",required:!1,deprecated:!1},componentProperty:{kind:"element",type:"array",description:"Allows to configure as many additional properties for the rest component in use.",title:"Component Property",required:!1,deprecated:!1},endpointProperty:{kind:"element",type:"array",description:"Allows to configure as many additional properties for the rest endpoint in use.",title:"Endpoint Property",required:!1,deprecated:!1},consumerProperty:{kind:"element",type:"array",description:"Allows to configure as many additional properties for the rest consumer in use.",title:"Consumer Property",required:!1,deprecated:!1},dataFormatProperty:{kind:"element",type:"array",description:"Allows to configure as many additional properties for the data formats in use. For example set property prettyPrint to true to have json outputted in pretty mode. The properties can be prefixed to denote the option is only for either JSON or XML and for either the IN or the OUT. The prefixes are: json.in. json.out. xml.in. xml.out. For example a key with value xml.out.mustBeJAXBElement is only for the XML data format for the outgoing. A key without a prefix is a common key for all situations.",title:"Data Format Property",required:!1,deprecated:!1},apiProperty:{kind:"element",type:"array",description:"Allows to configure as many additional properties for the api documentation (swagger). For example set property api.title to my cool stuff",title:"Api Property",required:!1,deprecated:!1},corsHeaders:{kind:"element",type:"array",description:"Allows to configure custom CORS headers.",title:"Cors Headers",required:!1,deprecated:!1}}},restContext:{type:"object",title:"Rest Context",group:"spring,configuration,rest",icon:"generic24.png",description:"Configuration of REST services using rest-dsl using XML",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{rest:{kind:"element",type:"array",description:"Contains the rest services defined using the rest-dsl",title:"Rest",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},restContextRef:{type:"object",title:"Rest Context Ref",group:"configuration,rest",icon:"generic24.png",description:"To refer to an XML file with rest services defined using the rest-dsl",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the rest-dsl",title:"Ref",required:!0,deprecated:!1}}},restProperty:{type:"object",title:"Rest Property",group:"rest",icon:"generic24.png",description:"A key value pair",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Property key",title:"Key",required:!0,deprecated:!1},value:{kind:"attribute",type:"string",description:"Property value",title:"Value",required:!0,deprecated:!1}}},rests:{type:"object",title:"Rests",group:"rest",icon:"generic24.png",description:"A series of rest services defined using the rest-dsl",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{rests:{kind:"element",type:"array",description:"Contains the rest services defined using the rest-dsl",title:"Rests",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}},security:{type:"object",title:"Security",group:"rest,security",icon:"generic24.png",description:"Rest security definition",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{key:{kind:"attribute",type:"string",description:"Key used to refer to this security definition",title:"Key",required:!0,deprecated:!1},scopes:{kind:"attribute",type:"string",description:"The scopes to allow (separate multiple scopes by comma)",title:"Scopes",required:!1,deprecated:!1}}},securityDefinitions:{type:"object",title:"Security Definitions",group:"rest,security",icon:"generic24.png",description:"To configure rest security definitions.",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{securityDefinitions:{kind:"element",type:"array",description:"Security definitions",title:"Security Definitions",required:!0,deprecated:!1}}},verb:{type:"object",title:"Verb",group:"rest",icon:"generic24.png",description:"Rest command",acceptInput:"false",acceptOutput:"false",nextSiblingAddedAsChild:"false",properties:{method:{kind:"attribute",type:"string",description:"The HTTP verb such as GET, POST, DELETE, etc.",title:"Method",required:!1,deprecated:!1},uri:{kind:"attribute",type:"string",description:"Uri template of this REST service such as /id.",title:"Uri",required:!1,deprecated:!1},consumes:{kind:"attribute",type:"string",description:"To define the content type what the REST service consumes (accept as input), such as application/xml or application/json. This option will override what may be configured on a parent level",title:"Consumes",required:!1,deprecated:!1},produces:{kind:"attribute",type:"string",description:"To define the content type what the REST service produces (uses for output), such as application/xml or application/json This option will override what may be configured on a parent level",title:"Produces",required:!1,deprecated:!1},bindingMode:{kind:"attribute",type:"object",defaultValue:"auto",enum:["auto","json","json_xml","off","xml"],description:"Sets the binding mode to use. This option will override what may be configured on a parent level The default value is auto",title:"Binding Mode",required:!1,deprecated:!1},skipBindingOnErrorCode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip binding on output if there is a custom HTTP error code header. This allows to build custom error messages that do not bind to json / xml etc, as success messages otherwise will do. This option will override what may be configured on a parent level",title:"Skip Binding On Error Code",required:!1,deprecated:!1},clientRequestValidation:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable validation of the client request to check whether the Content-Type and Accept headers from the client is supported by the Rest-DSL configuration of its consumes/produces settings. This can be turned on, to enable this check. In case of validation error, then HTTP Status codes 415 or 406 is returned. The default value is false.",title:"Client Request Validation",required:!1,deprecated:!1},enableCORS:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable CORS headers in the HTTP response. This option will override what may be configured on a parent level The default value is false.",title:"Enable C O R S",required:!1,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from input to POJO for the incoming data This option will override what may be configured on a parent level. The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Type",required:!1,deprecated:!1},outType:{kind:"attribute",type:"string",description:"Sets the class name to use for binding from POJO to output for the outgoing data This option will override what may be configured on a parent level The canonical name of the class of the input data. Append a to the end of the canonical name if you want the input to be an array type.",title:"Out Type",required:!1,deprecated:!1},toOrRoute:{kind:"element",type:"object",description:"To route from this REST service to a Camel endpoint, or an inlined route",title:"To Or Route",required:!0,deprecated:!1},routeId:{kind:"attribute",type:"string",description:"The route id this rest-dsl is using (read-only)",title:"Route Id",required:!1,deprecated:!1},apiDocs:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include or exclude the VerbDefinition in API documentation. The default value is true.",title:"Api Docs",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1},description:{kind:"element",type:"object",description:"Sets the description of this node",title:"Description",required:!1,deprecated:!1}}}},dataformats:{asn1:{type:"object",title:"ASN.1 File",group:"dataformat,transformation,file",icon:"generic24.png",description:"The ASN.1 data format is used for file transfer with telecommunications protocols.",properties:{usingIterator:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the asn1 file has more then one entry, the setting this option to true, allows to work with the splitter EIP, to split the data using an iterator in a streaming mode.",title:"Using Iterator",required:!1,deprecated:!1},clazzName:{kind:"attribute",type:"string",description:"Name of class to use when unmarshalling",title:"Clazz Name",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},avro:{type:"object",title:"Avro",group:"dataformat,transformation",icon:"generic24.png",description:"The Avro data format is used for serialization and deserialization of messages using Apache Avro binary dataformat.",properties:{instanceClassName:{kind:"attribute",type:"string",description:"Class name to use for marshal and unmarshalling",title:"Instance Class Name",required:!0,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},barcode:{type:"object",title:"Barcode",group:"dataformat,transformation",icon:"generic24.png",description:"The Barcode data format is used for creating barccode images (such as QR-Code)",properties:{width:{kind:"attribute",type:"integer",description:"Width of the barcode",title:"Width",required:!1,deprecated:!1},height:{kind:"attribute",type:"integer",description:"Height of the barcode",title:"Height",required:!1,deprecated:!1},imageType:{kind:"attribute",type:"string",description:"Image type of the barcode such as png",title:"Image Type",required:!1,deprecated:!1},barcodeFormat:{kind:"attribute",type:"string",description:"Barcode format such as QR-Code",title:"Barcode Format",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},base64:{type:"object",title:"Base64",group:"dataformat,transformation",icon:"generic24.png",description:"The Base64 data format is used for base64 encoding and decoding.",properties:{lineLength:{kind:"attribute",type:"integer",defaultValue:"76",description:"To specific a maximum line length for the encoded data. By default 76 is used.",title:"Line Length",required:!1,deprecated:!1},lineSeparator:{kind:"attribute",type:"string",description:"The line separators to use. Uses new line characters (CRLF) by default.",title:"Line Separator",required:!1,deprecated:!1},urlSafe:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Instead of emitting '' and '/' we emit '-' and '_' respectively. urlSafe is only applied to encode operations. Decoding seamlessly handles both modes. Is by default false.",title:"Url Safe",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},beanio:{type:"object",title:"BeanIO",group:"dataformat,transformation,csv",icon:"generic24.png",description:"The BeanIO data format is used for working with flat payloads (such as CSV, delimited, or fixed length formats).",properties:{mapping:{kind:"attribute",type:"string",description:"The BeanIO mapping file. Is by default loaded from the classpath. You can prefix with file:, http:, or classpath: to denote from where to load the mapping file.",title:"Mapping",required:!0,deprecated:!1},streamName:{kind:"attribute",type:"string",description:"The name of the stream to use.",title:"Stream Name",required:!0,deprecated:!1},ignoreUnidentifiedRecords:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore unidentified records.",title:"Ignore Unidentified Records",required:!1,deprecated:!1},ignoreUnexpectedRecords:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore unexpected records.",title:"Ignore Unexpected Records",required:!1,deprecated:!1},ignoreInvalidRecords:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore invalid records.",title:"Ignore Invalid Records",required:!1,deprecated:!1},encoding:{kind:"attribute",type:"string",description:"The charset to use. Is by default the JVM platform default charset.",title:"Encoding",required:!1,deprecated:!1},beanReaderErrorHandlerType:{kind:"attribute",type:"string",description:"To use a custom org.apache.camel.dataformat.beanio.BeanIOErrorHandler as error handler while parsing. Configure the fully qualified class name of the error handler. Notice the options ignoreUnidentifiedRecords, ignoreUnexpectedRecords, and ignoreInvalidRecords may not be in use when you use a custom error handler.",title:"Bean Reader Error Handler Type",required:!1,deprecated:!1},unmarshalSingleObject:{kind:"attribute",type:"boolean",defaultValue:"false",description:"This options controls whether to unmarshal as a list of objects or as a single object only. The former is the default mode, and the latter is only intended in special use-cases where beanio maps the Camel message to a single POJO bean.",title:"Unmarshal Single Object",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},bindy:{type:"object",title:"Bindy",group:"dataformat,transformation,csv",icon:"generic24.png",description:"The Bindy data format is used for working with flat payloads (such as CSV, delimited, fixed length formats, or FIX messages).",properties:{type:{kind:"attribute",type:"object",enum:["Csv","Fixed","KeyValue"],description:"Whether to use csv, fixed or key value pairs mode.",title:"Type",required:!0,deprecated:!1},classType:{kind:"attribute",type:"string",description:"Name of model class to use.",title:"Class Type",required:!1,deprecated:!1},locale:{kind:"attribute",type:"string",description:"To configure a default locale to use, such as us for united states. To use the JVM platform default locale then use the name default",title:"Locale",required:!1,deprecated:!1},unwrapSingleInstance:{kind:"attribute",type:"boolean",defaultValue:"true",description:"When unmarshalling should a single instance be unwrapped and returned instead of wrapped in a java.util.List.",title:"Unwrap Single Instance",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},boon:{type:"object",title:"Boon",group:"dataformat,transformation,json",icon:"generic24.png",description:"Boon data format is used for unmarshal a JSon payload to POJO or to marshal POJO back to JSon payload.",properties:{unmarshalTypeName:{kind:"attribute",type:"string",description:"Class name of the java type to use when unarmshalling",title:"Unmarshal Type Name",required:!0,deprecated:!1},useList:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To unarmshal to a List of Map or a List of Pojo.",title:"Use List",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},castor:{type:"object",title:"Castor",group:"dataformat,transformation,xml",icon:"generic24.png",description:"Castor data format is used for unmarshal a XML payload to POJO or to marshal POJO back to XML payload.",properties:{mappingFile:{kind:"attribute",type:"string",description:"Path to a Castor mapping file to load from the classpath.",title:"Mapping File",required:!1,deprecated:!1},whitelistEnabled:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Define if Whitelist feature is enabled or not",title:"Whitelist Enabled",required:!1,deprecated:!1},allowedUnmarshallObjects:{kind:"attribute",type:"string",description:"Define the allowed objects to be unmarshalled. You can specify the FQN class name of allowed objects, and you can use comma to separate multiple entries. It is also possible to use wildcards and regular expression which is based on the pattern defined by link org.apache.camel.util.EndpointHelper#matchPattern(String, String). Denied objects takes precedence over allowed objects.",title:"Allowed Unmarshall Objects",required:!1,deprecated:!1},deniedUnmarshallObjects:{kind:"attribute",type:"string",description:"Define the denied objects to be unmarshalled. You can specify the FQN class name of deined objects, and you can use comma to separate multiple entries. It is also possible to use wildcards and regular expression which is based on the pattern defined by link org.apache.camel.util.EndpointHelper#matchPattern(String, String). Denied objects takes precedence over allowed objects.",title:"Denied Unmarshall Objects",required:!1,deprecated:!1},validation:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether validation is turned on or off. Is by default true.",title:"Validation",required:!1,deprecated:!1},encoding:{kind:"attribute",type:"string",defaultValue:"UTF-8",description:"Encoding to use when marshalling an Object to XML. Is by default UTF-8",title:"Encoding",required:!1,deprecated:!1},packages:{kind:"attribute",type:"array",description:"Add additional packages to Castor XmlContext",title:"Packages",required:!1,deprecated:!1},classes:{kind:"attribute",type:"array",description:"Add additional class names to Castor XmlContext",title:"Classes",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},crypto:{type:"object",title:"Crypto (Java Cryptographic Extension)",group:"dataformat,transformation,security",icon:"generic24.png",description:"Crypto data format is used for encrypting and decrypting of messages using Java Cryptographic Extension.",properties:{algorithm:{kind:"attribute",type:"string",defaultValue:"DES/CBC/PKCS5Padding",description:"The JCE algorithm name indicating the cryptographic algorithm that will be used. Is by default DES/CBC/PKCS5Padding.",title:"Algorithm",required:!1,deprecated:!1},cryptoProvider:{kind:"attribute",type:"string",description:"The name of the JCE Security Provider that should be used.",title:"Crypto Provider",required:!1,deprecated:!1},keyRef:{kind:"attribute",type:"string",description:"Refers to the secret key to lookup from the register to use.",title:"Key Ref",required:!1,deprecated:!1},initVectorRef:{kind:"attribute",type:"string",description:"Refers to a byte array containing the Initialization Vector that will be used to initialize the Cipher.",title:"Init Vector Ref",required:!1,deprecated:!1},algorithmParameterRef:{kind:"attribute",type:"string",description:"A JCE AlgorithmParameterSpec used to initialize the Cipher. Will lookup the type using the given name as a java.security.spec.AlgorithmParameterSpec type.",title:"Algorithm Parameter Ref",required:!1,deprecated:!1},buffersize:{kind:"attribute",type:"integer",description:"The size of the buffer used in the signature process.",title:"Buffersize",required:!1,deprecated:!1},macAlgorithm:{kind:"attribute",type:"string",defaultValue:"HmacSHA1",description:"The JCE algorithm name indicating the Message Authentication algorithm.",title:"Mac Algorithm",required:!1,deprecated:!1},shouldAppendHMAC:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Flag indicating that a Message Authentication Code should be calculated and appended to the encrypted data.",title:"Should Append H M A C",required:!1,deprecated:!1},inline:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Flag indicating that the configured IV should be inlined into the encrypted data stream. Is by default false.",title:"Inline",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},csv:{type:"object",title:"CSV",group:"dataformat,transformation,csv",icon:"generic24.png",description:"The CSV data format is used for handling CSV payloads.",properties:{formatRef:{kind:"attribute",type:"string",description:"The reference format to use, it will be updated with the other format options, the default value is CSVFormat.DEFAULT",title:"Format Ref",required:!1,deprecated:!1},formatName:{kind:"attribute",type:"string",enum:["DEFAULT","EXCEL","INFORMIX_UNLOAD","INFORMIX_UNLOAD_CSV","MYSQL","RFC4180"],description:"The name of the format to use, the default value is CSVFormat.DEFAULT",title:"Format Name",required:!1,deprecated:!1},commentMarkerDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Disables the comment marker of the reference format.",title:"Comment Marker Disabled",required:!1,deprecated:!1},commentMarker:{kind:"attribute",type:"string",description:"Sets the comment marker of the reference format.",title:"Comment Marker",required:!1,deprecated:!1},delimiter:{kind:"attribute",type:"string",description:"Sets the delimiter to use. The default value is , (comma)",title:"Delimiter",required:!1,deprecated:!1},escapeDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Use for disabling using escape character",title:"Escape Disabled",required:!1,deprecated:!1},escape:{kind:"attribute",type:"string",description:"Sets the escape character to use",title:"Escape",required:!1,deprecated:!1},headerDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Use for disabling headers",title:"Header Disabled",required:!1,deprecated:!1},header:{kind:"element",type:"array",description:"To configure the CSV headers",title:"Header",required:!1,deprecated:!1},allowMissingColumnNames:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to allow missing column names.",title:"Allow Missing Column Names",required:!1,deprecated:!1},ignoreEmptyLines:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore empty lines.",title:"Ignore Empty Lines",required:!1,deprecated:!1},ignoreSurroundingSpaces:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore surrounding spaces",title:"Ignore Surrounding Spaces",required:!1,deprecated:!1},nullStringDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used to disable null strings",title:"Null String Disabled",required:!1,deprecated:!1},nullString:{kind:"attribute",type:"string",description:"Sets the null string",title:"Null String",required:!1,deprecated:!1},quoteDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used to disable quotes",title:"Quote Disabled",required:!1,deprecated:!1},quote:{kind:"attribute",type:"string",description:"Sets the quote which by default is",title:"Quote",required:!1,deprecated:!1},recordSeparatorDisabled:{kind:"attribute",type:"string",description:"Used for disabling record separator",title:"Record Separator Disabled",required:!1,deprecated:!1},recordSeparator:{kind:"attribute",type:"string",description:"Sets the record separator (aka new line) which by default is new line characters (CRLF)",title:"Record Separator",required:!1,deprecated:!1},skipHeaderRecord:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to skip the header record in the output",title:"Skip Header Record",required:!1,deprecated:!1},quoteMode:{kind:"attribute",type:"string",description:"Sets the quote mode",title:"Quote Mode",required:!1,deprecated:!1},ignoreHeaderCase:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether or not to ignore case when accessing header names.",title:"Ignore Header Case",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether or not to trim leading and trailing blanks.",title:"Trim",required:!1,deprecated:!1},trailingDelimiter:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets whether or not to add a trailing delimiter.",title:"Trailing Delimiter",required:!1,deprecated:!1},lazyLoad:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one.",title:"Lazy Load",required:!1,deprecated:!1},useMaps:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce maps (HashMap)for the lines values instead of lists. It requires to have header (either defined or collected).",title:"Use Maps",required:!1,deprecated:!1},useOrderedMaps:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce ordered maps (LinkedHashMap) for the lines values instead of lists. It requires to have header (either defined or collected).",title:"Use Ordered Maps",required:!1,deprecated:!1},recordConverterRef:{kind:"attribute",type:"string",description:"Refers to a custom CsvRecordConverter to lookup from the registry to use.",title:"Record Converter Ref",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},customDataFormat:{type:"object",title:"Custom",group:"dataformat,transformation",icon:"customDataFormat24.png",description:"To use a custom data format implementation that does not come out of the box from Apache Camel.",properties:{ref:{kind:"attribute",type:"string",description:"Reference to the custom org.apache.camel.spi.DataFormat to lookup from the Camel registry.",title:"Ref",required:!0,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},dataFormats:{type:"object",title:"Data formats",group:"dataformat,transformation",icon:"generic24.png",description:"To configure data formats",properties:{dataFormats:{kind:"element",type:"array",description:"A list holding the configured data formats",title:"Data Formats",required:!0,deprecated:!1}}},fhirJson:{type:"object",title:"FHIR JSon",group:"dataformat,transformation,hl7,json",icon:"generic24.png",description:"The FHIR JSon data format is used to marshall/unmarshall to/from FHIR objects to/from JSON.",properties:{fhirVersion:{kind:"attribute",type:"string",defaultValue:"DSTU3",enum:["DSTU2","DSTU2_1","DSTU2_HL7ORG","DSTU3","R4"],description:"The version of FHIR to use. Possible values are: DSTU2,DSTU2_HL7ORG,DSTU2_1,DSTU3,R4",title:"Fhir Version",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets the pretty print flag, meaning that the parser will encode resources with human-readable spacing and newlines between elements instead of condensing output as much as possible.",title:"Pretty Print",required:!1,deprecated:!1},serverBaseUrl:{kind:"attribute",type:"string",description:"Sets the server's base URL used by this parser. If a value is set, resource references will be turned into relative references if they are provided as absolute URLs but have a base matching the given base.",title:"Server Base Url",required:!1,deprecated:!1},omitResourceId:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false) the ID of any resources being encoded will not be included in the output. Note that this does not apply to contained resources, only to root resources. In other words, if this is set to true, contained resources will still have local IDs but the outer/containing ID will not have an ID.",title:"Omit Resource Id",required:!1,deprecated:!1},encodeElementsAppliesToResourceTypes:{kind:"attribute",type:"object",description:"If provided, tells the parse which resource types to apply link #setEncodeElements(Set) encode elements to. Any resource types not specified here will be encoded completely, with no elements excluded.",title:"Encode Elements Applies To Resource Types",required:!1,deprecated:!1},encodeElementsAppliesToChildResourcesOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false), the values supplied to setEncodeElements(Set) will not be applied to the root resource (typically a Bundle), but will be applied to any sub-resources contained within it (i.e. search result resources in that bundle)",title:"Encode Elements Applies To Child Resources Only",required:!1,deprecated:!1},encodeElements:{kind:"attribute",type:"object",description:"If provided, specifies the elements which should be encoded, to the exclusion of all others. Valid values for this field would include: Patient - Encode patient and all its children Patient.name - Encode only the patient's name Patient.name.family - Encode only the patient's family name .text - Encode the text element on any resource (only the very first position may contain a wildcard) .(mandatory) - This is a special case which causes any mandatory fields (min 0) to be encoded",title:"Encode Elements",required:!1,deprecated:!1},dontEncodeElements:{kind:"attribute",type:"object",description:"If provided, specifies the elements which should NOT be encoded. Valid values for this field would include: Patient - Don't encode patient and all its children Patient.name - Don't encode the patient's name Patient.name.family - Don't encode the patient's family name .text - Don't encode the text element on any resource (only the very first position may contain a wildcard) DSTU2 note: Note that values including meta, such as Patient.meta will work for DSTU2 parsers, but values with subelements on meta such as Patient.meta.lastUpdated will only work in DSTU3 mode.",title:"Dont Encode Elements",required:!1,deprecated:!1},stripVersionsFromReferences:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (which is the default), resource references containing a version will have the version removed when the resource is encoded. This is generally good behaviour because in most situations, references from one resource to another should be to the resource by ID, not by ID and version. In some cases though, it may be desirable to preserve the version in resource links. In that case, this value should be set to false. This method provides the ability to globally disable reference encoding. If finer-grained control is needed, use setDontStripVersionsFromReferencesAtPaths(List)",title:"Strip Versions From References",required:!1,deprecated:!1},overrideResourceIdWithBundleEntryFullUrl:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (which is the default), the Bundle.entry.fullUrl will override the Bundle.entry.resource's resource id if the fullUrl is defined. This behavior happens when parsing the source data into a Bundle object. Set this to false if this is not the desired behavior (e.g. the client code wishes to perform additional validation checks between the fullUrl and the resource id).",title:"Override Resource Id With Bundle Entry Full Url",required:!1,deprecated:!1},summaryMode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false) only elements marked by the FHIR specification as being summary elements will be included.",title:"Summary Mode",required:!1,deprecated:!1},suppressNarratives:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false), narratives will not be included in the encoded values.",title:"Suppress Narratives",required:!1,deprecated:!1},dontStripVersionsFromReferencesAtPaths:{kind:"attribute",type:"array",description:"If supplied value(s), any resource references at the specified paths will have their resource versions encoded instead of being automatically stripped during the encoding process. This setting has no effect on the parsing process. This method provides a finer-grained level of control than setStripVersionsFromReferences(Boolean) and any paths specified by this method will be encoded even if setStripVersionsFromReferences(Boolean) has been set to true (which is the default)",title:"Dont Strip Versions From References At Paths",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},fhirXml:{type:"object",title:"FHIR XML",group:"dataformat,transformation,hl7,xml",icon:"generic24.png",description:"The FHIR XML data format is used to marshall/unmarshall from/to FHIR objects to/from XML.",properties:{fhirVersion:{kind:"attribute",type:"string",defaultValue:"DSTU3",enum:["DSTU2","DSTU2_1","DSTU2_HL7ORG","DSTU3","R4"],description:"The version of FHIR to use. Possible values are: DSTU2,DSTU2_HL7ORG,DSTU2_1,DSTU3,R4",title:"Fhir Version",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Sets the pretty print flag, meaning that the parser will encode resources with human-readable spacing and newlines between elements instead of condensing output as much as possible.",title:"Pretty Print",required:!1,deprecated:!1},serverBaseUrl:{kind:"attribute",type:"string",description:"Sets the server's base URL used by this parser. If a value is set, resource references will be turned into relative references if they are provided as absolute URLs but have a base matching the given base.",title:"Server Base Url",required:!1,deprecated:!1},omitResourceId:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false) the ID of any resources being encoded will not be included in the output. Note that this does not apply to contained resources, only to root resources. In other words, if this is set to true, contained resources will still have local IDs but the outer/containing ID will not have an ID.",title:"Omit Resource Id",required:!1,deprecated:!1},encodeElementsAppliesToResourceTypes:{kind:"attribute",type:"object",description:"If provided, tells the parse which resource types to apply link #setEncodeElements(Set) encode elements to. Any resource types not specified here will be encoded completely, with no elements excluded.",title:"Encode Elements Applies To Resource Types",required:!1,deprecated:!1},encodeElementsAppliesToChildResourcesOnly:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false), the values supplied to setEncodeElements(Set) will not be applied to the root resource (typically a Bundle), but will be applied to any sub-resources contained within it (i.e. search result resources in that bundle)",title:"Encode Elements Applies To Child Resources Only",required:!1,deprecated:!1},encodeElements:{kind:"attribute",type:"object",description:"If provided, specifies the elements which should be encoded, to the exclusion of all others. Valid values for this field would include: Patient - Encode patient and all its children Patient.name - Encode only the patient's name Patient.name.family - Encode only the patient's family name .text - Encode the text element on any resource (only the very first position may contain a wildcard) .(mandatory) - This is a special case which causes any mandatory fields (min 0) to be encoded",title:"Encode Elements",required:!1,deprecated:!1},dontEncodeElements:{kind:"attribute",type:"object",description:"If provided, specifies the elements which should NOT be encoded. Valid values for this field would include: Patient - Don't encode patient and all its children Patient.name - Don't encode the patient's name Patient.name.family - Don't encode the patient's family name .text - Don't encode the text element on any resource (only the very first position may contain a wildcard) DSTU2 note: Note that values including meta, such as Patient.meta will work for DSTU2 parsers, but values with subelements on meta such as Patient.meta.lastUpdated will only work in DSTU3 mode.",title:"Dont Encode Elements",required:!1,deprecated:!1},stripVersionsFromReferences:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (which is the default), resource references containing a version will have the version removed when the resource is encoded. This is generally good behaviour because in most situations, references from one resource to another should be to the resource by ID, not by ID and version. In some cases though, it may be desirable to preserve the version in resource links. In that case, this value should be set to false. This method provides the ability to globally disable reference encoding. If finer-grained control is needed, use setDontStripVersionsFromReferencesAtPaths(List)",title:"Strip Versions From References",required:!1,deprecated:!1},overrideResourceIdWithBundleEntryFullUrl:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (which is the default), the Bundle.entry.fullUrl will override the Bundle.entry.resource's resource id if the fullUrl is defined. This behavior happens when parsing the source data into a Bundle object. Set this to false if this is not the desired behavior (e.g. the client code wishes to perform additional validation checks between the fullUrl and the resource id).",title:"Override Resource Id With Bundle Entry Full Url",required:!1,deprecated:!1},summaryMode:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false) only elements marked by the FHIR specification as being summary elements will be included.",title:"Summary Mode",required:!1,deprecated:!1},suppressNarratives:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If set to true (default is false), narratives will not be included in the encoded values.",title:"Suppress Narratives",required:!1,deprecated:!1},dontStripVersionsFromReferencesAtPaths:{kind:"attribute",type:"array",description:"If supplied value(s), any resource references at the specified paths will have their resource versions encoded instead of being automatically stripped during the encoding process. This setting has no effect on the parsing process. This method provides a finer-grained level of control than setStripVersionsFromReferences(Boolean) and any paths specified by this method will be encoded even if setStripVersionsFromReferences(Boolean) has been set to true (which is the default)",title:"Dont Strip Versions From References At Paths",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},flatpack:{type:"object",title:"Flatpack",group:"dataformat,transformation,csv",icon:"generic24.png",description:"The Flatpack data format is used for working with flat payloads (such as CSV, delimited, or fixed length formats).",properties:{definition:{kind:"attribute",type:"string",description:"The flatpack pzmap configuration file. Can be omitted in simpler situations, but its preferred to use the pzmap.",title:"Definition",required:!1,deprecated:!1},fixed:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Delimited or fixed. Is by default false = delimited",title:"Fixed",required:!1,deprecated:!1},ignoreFirstRecord:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether the first line is ignored for delimited files (for the column headers). Is by default true.",title:"Ignore First Record",required:!1,deprecated:!1},textQualifier:{kind:"attribute",type:"string",description:"If the text is qualified with a character. Uses quote character by default.",title:"Text Qualifier",required:!1,deprecated:!1},delimiter:{kind:"attribute",type:"string",defaultValue:",",description:"The delimiter char (could be ; , or similar)",title:"Delimiter",required:!1,deprecated:!1},allowShortLines:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Allows for lines to be shorter than expected and ignores the extra characters",title:"Allow Short Lines",required:!1,deprecated:!1},ignoreExtraColumns:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Allows for lines to be longer than expected and ignores the extra characters.",title:"Ignore Extra Columns",required:!1,deprecated:!1},parserFactoryRef:{kind:"attribute",type:"string",description:"References to a custom parser factory to lookup in the registry",title:"Parser Factory Ref",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},gzip:{type:"object",title:"GZip",group:"dataformat,transformation",icon:"generic24.png",description:"The GZip data format is a message compression and de-compression format (which works with the popular gzip/gunzip tools).",properties:{contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},hessian:{type:"object",title:"Hessian",group:"dataformat,transformation",icon:"generic24.png",description:"Hessian data format is used for marshalling and unmarshalling messages using Cauchos Hessian format.",properties:{whitelistEnabled:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Define if Whitelist feature is enabled or not",title:"Whitelist Enabled",required:!1,deprecated:!1},allowedUnmarshallObjects:{kind:"attribute",type:"string",description:"Define the allowed objects to be unmarshalled",title:"Allowed Unmarshall Objects",required:!1,deprecated:!1},deniedUnmarshallObjects:{kind:"attribute",type:"string",description:"Define the denied objects to be unmarshalled",title:"Denied Unmarshall Objects",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},hl7:{type:"object",title:"HL7",group:"dataformat,transformation,hl7",icon:"generic24.png",description:"The HL7 data format can be used to marshal or unmarshal HL7 (Health Care) model objects.",properties:{validate:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to validate the HL7 message Is by default true.",title:"Validate",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},ical:{type:"object",title:"iCal",group:"dataformat,transformation",icon:"generic24.png",description:"The iCal dataformat is used for working with iCalendar messages.",properties:{validating:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to validate.",title:"Validating",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},jacksonxml:{type:"object",title:"JacksonXML",group:"dataformat,transformation,xml",icon:"generic24.png",description:"JacksonXML data format is used for unmarshal a XML payload to POJO or to marshal POJO back to XML payload.",properties:{xmlMapper:{kind:"attribute",type:"string",description:"Lookup and use the existing XmlMapper with the given id.",title:"Xml Mapper",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To enable pretty printing output nicely formatted. Is by default false.",title:"Pretty Print",required:!1,deprecated:!1},unmarshalTypeName:{kind:"attribute",type:"string",description:"Class name of the java type to use when unarmshalling",title:"Unmarshal Type Name",required:!1,deprecated:!1},jsonView:{kind:"attribute",type:"string",description:"When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations",title:"Json View",required:!1,deprecated:!1},include:{kind:"attribute",type:"string",description:"If you want to marshal a pojo to JSON, and the pojo has some fields with null values. And you want to skip these null values, you can set this option to NON_NULL",title:"Include",required:!1,deprecated:!1},allowJmsType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to.",title:"Allow Jms Type",required:!1,deprecated:!1},collectionTypeName:{kind:"attribute",type:"string",description:"Refers to a custom collection type to lookup in the registry to use. This option should rarely be used, but allows to use different collection types than java.util.Collection based as default.",title:"Collection Type Name",required:!1,deprecated:!1},useList:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To unarmshal to a List of Map or a List of Pojo.",title:"Use List",required:!1,deprecated:!1},enableJaxbAnnotationModule:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable the JAXB annotations module when using jackson. When enabled then JAXB annotations can be used by Jackson.",title:"Enable Jaxb Annotation Module",required:!1,deprecated:!1},moduleClassNames:{kind:"attribute",type:"string",description:"To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma.",title:"Module Class Names",required:!1,deprecated:!1},moduleRefs:{kind:"attribute",type:"string",description:"To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma.",title:"Module Refs",required:!1,deprecated:!1},enableFeatures:{kind:"attribute",type:"string",description:"Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Enable Features",required:!1,deprecated:!1},disableFeatures:{kind:"attribute",type:"string",description:"Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Disable Features",required:!1,deprecated:!1},allowUnmarshallType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Jackson is allowed to attempt to use the CamelJacksonUnmarshalType header during the unmarshalling. This should only be enabled when desired to be used.",title:"Allow Unmarshall Type",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},jaxb:{type:"object",title:"JAXB",group:"dataformat,transformation,xml",icon:"generic24.png",description:"JAXB data format uses the JAXB2 XML marshalling standard to unmarshal an XML payload into Java objects or to marshal Java objects into an XML payload.",properties:{contextPath:{kind:"attribute",type:"string",description:"Package name where your JAXB classes are located.",title:"Context Path",required:!0,deprecated:!1},schema:{kind:"attribute",type:"string",description:"To validate against an existing schema. Your can use the prefix classpath:, file: or http: to specify how the resource should by resolved. You can separate multiple schema files by using the ',' character.",title:"Schema",required:!1,deprecated:!1},schemaSeverityLevel:{kind:"attribute",type:"integer",defaultValue:"0",enum:["0","1","2"],description:"Sets the schema severity level to use when validating against a schema. This level determines the minimum severity error that triggers JAXB to stop continue parsing. The default value of 0 (warning) means that any error (warning, error or fatal error) will trigger JAXB to stop. There are the following three levels: 0=warning, 1=error, 2=fatal error.",title:"Schema Severity Level",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To enable pretty printing output nicely formatted. Is by default false.",title:"Pretty Print",required:!1,deprecated:!1},objectFactory:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to allow using ObjectFactory classes to create the POJO classes during marshalling. This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.",title:"Object Factory",required:!1,deprecated:!1},ignoreJAXBElement:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to ignore JAXBElement elements - only needed to be set to false in very special use-cases.",title:"Ignore J A X B Element",required:!1,deprecated:!1},mustBeJAXBElement:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether marhsalling must be java objects with JAXB annotations. And if not then it fails. This option can be set to false to relax that, such as when the data is already in XML format.",title:"Must Be J A X B Element",required:!1,deprecated:!1},filterNonXmlChars:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To ignore non xml characheters and replace them with an empty space.",title:"Filter Non Xml Chars",required:!1,deprecated:!1},encoding:{kind:"attribute",type:"string",description:"To overrule and use a specific encoding",title:"Encoding",required:!1,deprecated:!1},fragment:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To turn on marshalling XML fragment trees. By default JAXB looks for XmlRootElement annotation on given class to operate on whole XML tree. This is useful but not always - sometimes generated code does not have XmlRootElement annotation, sometimes you need unmarshall only part of tree. In that case you can use partial unmarshalling. To enable this behaviours you need set property partClass. Camel will pass this class to JAXB's unmarshaler.",title:"Fragment",required:!1,deprecated:!1},partClass:{kind:"attribute",type:"string",description:"Name of class used for fragment parsing. See more details at the fragment option.",title:"Part Class",required:!1,deprecated:!1},partNamespace:{kind:"attribute",type:"string",description:"XML namespace to use for fragment parsing. See more details at the fragment option.",title:"Part Namespace",required:!1,deprecated:!1},namespacePrefixRef:{kind:"attribute",type:"string",description:"When marshalling using JAXB or SOAP then the JAXB implementation will automatic assign namespace prefixes, such as ns2, ns3, ns4 etc. To control this mapping, Camel allows you to refer to a map which contains the desired mapping.",title:"Namespace Prefix Ref",required:!1,deprecated:!1},xmlStreamWriterWrapper:{kind:"attribute",type:"string",description:"To use a custom xml stream writer.",title:"Xml Stream Writer Wrapper",required:!1,deprecated:!1},schemaLocation:{kind:"attribute",type:"string",description:"To define the location of the schema",title:"Schema Location",required:!1,deprecated:!1},noNamespaceSchemaLocation:{kind:"attribute",type:"string",description:"To define the location of the namespaceless schema",title:"No Namespace Schema Location",required:!1,deprecated:!1},jaxbProviderProperties:{kind:"attribute",type:"string",description:"Refers to a custom java.util.Map to lookup in the registry containing custom JAXB provider properties to be used with the JAXB marshaller.",title:"Jaxb Provider Properties",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},jibx:{type:"object",title:"JiBX",group:"dataformat,transformation,xml",icon:"generic24.png",description:"JiBX data format is used for unmarshal a XML payload to POJO or to marshal POJO back to XML payload.",properties:{unmarshallClass:{kind:"attribute",type:"string",description:"Class name to use when unmarshalling from XML to Java.",title:"Unmarshall Class",required:!1,deprecated:!1},bindingName:{kind:"attribute",type:"string",description:"To use a custom binding factory",title:"Binding Name",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},json:{type:"object",title:"JSon",group:"dataformat,transformation,json",icon:"generic24.png",description:"JSon data format is used for unmarshal a JSon payload to POJO or to marshal POJO back to JSon payload.",properties:{objectMapper:{kind:"attribute",type:"string",description:"Lookup and use the existing ObjectMapper with the given id when using Jackson.",title:"Object Mapper",required:!1,deprecated:!1},useDefaultObjectMapper:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to lookup and use default Jackson ObjectMapper from the registry.",title:"Use Default Object Mapper",required:!1,deprecated:!1},prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To enable pretty printing output nicely formatted. Is by default false.",title:"Pretty Print",required:!1,deprecated:!1},library:{kind:"attribute",type:"object",defaultValue:"XStream",enum:["Fastjson","Gson","Jackson","Johnzon","XStream"],description:"Which json library to use.",title:"Library",required:!1,deprecated:!1},unmarshalTypeName:{kind:"attribute",type:"string",description:"Class name of the java type to use when unarmshalling",title:"Unmarshal Type Name",required:!1,deprecated:!1},jsonView:{kind:"attribute",type:"string",description:"When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations",title:"Json View",required:!1,deprecated:!1},include:{kind:"attribute",type:"string",description:"If you want to marshal a pojo to JSON, and the pojo has some fields with null values. And you want to skip these null values, you can set this option to NON_NULL",title:"Include",required:!1,deprecated:!1},allowJmsType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to.",title:"Allow Jms Type",required:!1,deprecated:!1},collectionTypeName:{kind:"attribute",type:"string",description:"Refers to a custom collection type to lookup in the registry to use. This option should rarely be used, but allows to use different collection types than java.util.Collection based as default.",title:"Collection Type Name",required:!1,deprecated:!1},useList:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To unarmshal to a List of Map or a List of Pojo.",title:"Use List",required:!1,deprecated:!1},enableJaxbAnnotationModule:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable the JAXB annotations module when using jackson. When enabled then JAXB annotations can be used by Jackson.",title:"Enable Jaxb Annotation Module",required:!1,deprecated:!1},moduleClassNames:{kind:"attribute",type:"string",description:"To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma.",title:"Module Class Names",required:!1,deprecated:!1},moduleRefs:{kind:"attribute",type:"string",description:"To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma.",title:"Module Refs",required:!1,deprecated:!1},enableFeatures:{kind:"attribute",type:"string",description:"Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Enable Features",required:!1,deprecated:!1},disableFeatures:{kind:"attribute",type:"string",description:"Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",title:"Disable Features",required:!1,deprecated:!1},permissions:{kind:"attribute",type:"string",description:"Adds permissions that controls which Java packages and classes XStream is allowed to use during unmarshal from xml/json to Java beans. A permission must be configured either here or globally using a JVM system property. The permission can be specified in a syntax where a plus sign is allow, and minus sign is deny. Wildcards is supported by using . as prefix. For example to allow com.foo and all subpackages then specfy com.foo.. Multiple permissions can be configured separated by comma, such as com.foo.,-com.foo.bar.MySecretBean. The following default permission is always included: -,java.lang.,java.util. unless its overridden by specifying a JVM system property with they key org.apache.camel.xstream.permissions.",title:"Permissions",required:!1,deprecated:!1},allowUnmarshallType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If enabled then Jackson is allowed to attempt to use the CamelJacksonUnmarshalType header during the unmarshalling. This should only be enabled when desired to be used.",title:"Allow Unmarshall Type",required:!1,deprecated:!1},timezone:{kind:"attribute",type:"string",description:"If set then Jackson will use the Timezone when marshalling/unmarshalling. This option will have no effect on the others Json DataFormat, like gson, fastjson and xstream.",title:"Timezone",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},lzf:{type:"object",title:"LZF Deflate Compression",group:"dataformat,transformation",icon:"generic24.png",description:"The LZF data format is a message compression and de-compression format (uses the LZF deflate algorithm).",properties:{usingParallelCompression:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Enable encoding (compress) using multiple processing cores.",title:"Using Parallel Compression",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},"mime-multipart":{type:"object",title:"MIME Multipart",group:"dataformat,transformation",icon:"generic24.png",description:"The MIME Multipart data format can marshal a Camel message with attachments into a Camel message having a MIME-Multipart message as message body (and no attachments), and vise-versa when unmarshalling.",properties:{multipartSubType:{kind:"attribute",type:"string",defaultValue:"mixed",description:"Specify the subtype of the MIME Multipart. Default is mixed.",title:"Multipart Sub Type",required:!1,deprecated:!1},multipartWithoutAttachment:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Defines whether a message without attachment is also marshaled into a MIME Multipart (with only one body part). Default is false.",title:"Multipart Without Attachment",required:!1,deprecated:!1},headersInline:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Defines whether the MIME-Multipart headers are part of the message body (true) or are set as Camel headers (false). Default is false.",title:"Headers Inline",required:!1,deprecated:!1},includeHeaders:{kind:"attribute",type:"string",description:"A regex that defines which Camel headers are also included as MIME headers into the MIME multipart. This will only work if headersInline is set to true. Default is to include no headers",title:"Include Headers",required:!1,deprecated:!1},binaryContent:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Defines whether the content of binary parts in the MIME multipart is binary (true) or Base-64 encoded (false) Default is false.",title:"Binary Content",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},pgp:{type:"object",title:"PGP",group:"dataformat,transformation,security",icon:"generic24.png",description:"PGP data format is used for encrypting and decrypting of messages using Java Cryptographic Extension and PGP.",properties:{keyUserid:{kind:"attribute",type:"string",description:"The user ID of the key in the PGP keyring used during encryption. Can also be only a part of a user ID. For example, if the user ID is Test User then you can use the part Test User or to address the user ID.",title:"Key Userid",required:!1,deprecated:!1},signatureKeyUserid:{kind:"attribute",type:"string",description:"User ID of the key in the PGP keyring used for signing (during encryption) or signature verification (during decryption). During the signature verification process the specified User ID restricts the public keys from the public keyring which can be used for the verification. If no User ID is specified for the signature verficiation then any public key in the public keyring can be used for the verification. Can also be only a part of a user ID. For example, if the user ID is Test User then you can use the part Test User or to address the User ID.",title:"Signature Key Userid",required:!1,deprecated:!1},password:{kind:"attribute",type:"string",description:"Password used when opening the private key (not used for encryption).",title:"Password",required:!1,deprecated:!1},signaturePassword:{kind:"attribute",type:"string",description:"Password used when opening the private key used for signing (during encryption).",title:"Signature Password",required:!1,deprecated:!1},keyFileName:{kind:"attribute",type:"string",description:"Filename of the keyring; must be accessible as a classpath resource (but you can specify a location in the file system by using the file: prefix).",title:"Key File Name",required:!1,deprecated:!1},signatureKeyFileName:{kind:"attribute",type:"string",description:"Filename of the keyring to use for signing (during encryption) or for signature verification (during decryption); must be accessible as a classpath resource (but you can specify a location in the file system by using the file: prefix).",title:"Signature Key File Name",required:!1,deprecated:!1},signatureKeyRing:{kind:"attribute",type:"string",description:"Keyring used for signing/verifying as byte array. You can not set the signatureKeyFileName and signatureKeyRing at the same time.",title:"Signature Key Ring",required:!1,deprecated:!1},armored:{kind:"attribute",type:"boolean",defaultValue:"false",description:"This option will cause PGP to base64 encode the encrypted text, making it available for copy/paste, etc.",title:"Armored",required:!1,deprecated:!1},integrity:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Adds an integrity check/sign into the encryption file. The default value is true.",title:"Integrity",required:!1,deprecated:!1},provider:{kind:"attribute",type:"string",description:"Java Cryptography Extension (JCE) provider, default is Bouncy Castle (BC). Alternatively you can use, for example, the IAIK JCE provider; in this case the provider must be registered beforehand and the Bouncy Castle provider must not be registered beforehand. The Sun JCE provider does not work.",title:"Provider",required:!1,deprecated:!1},algorithm:{kind:"attribute",type:"integer",description:"Symmetric key encryption algorithm; possible values are defined in org.bouncycastle.bcpg.SymmetricKeyAlgorithmTags; for example 2 (= TRIPLE DES), 3 (= CAST5), 4 (= BLOWFISH), 6 (= DES), 7 (= AES_128). Only relevant for encrypting.",title:"Algorithm",required:!1,deprecated:!1},compressionAlgorithm:{kind:"attribute",type:"integer",description:"Compression algorithm; possible values are defined in org.bouncycastle.bcpg.CompressionAlgorithmTags; for example 0 (= UNCOMPRESSED), 1 (= ZIP), 2 (= ZLIB), 3 (= BZIP2). Only relevant for encrypting.",title:"Compression Algorithm",required:!1,deprecated:!1},hashAlgorithm:{kind:"attribute",type:"integer",description:"Signature hash algorithm; possible values are defined in org.bouncycastle.bcpg.HashAlgorithmTags; for example 2 (= SHA1), 8 (= SHA256), 9 (= SHA384), 10 (= SHA512), 11 (=SHA224). Only relevant for signing.",title:"Hash Algorithm",required:!1,deprecated:!1},signatureVerificationOption:{kind:"attribute",type:"string",description:"Controls the behavior for verifying the signature during unmarshaling. There are 4 values possible: optional: The PGP message may or may not contain signatures; if it does contain signatures, then a signature verification is executed. required: The PGP message must contain at least one signature; if this is not the case an exception (PGPException) is thrown. A signature verification is executed. ignore: Contained signatures in the PGP message are ignored; no signature verification is executed. no_signature_allowed: The PGP message must not contain a signature; otherwise an exception (PGPException) is thrown.",title:"Signature Verification Option",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},protobuf:{type:"object",title:"Protobuf",group:"dataformat,transformation",icon:"generic24.png",description:"The Protobuf data format is used for serializing between Java objects and the Google Protobuf protocol.",properties:{instanceClass:{kind:"attribute",type:"string",description:"Name of class to use when unarmshalling",title:"Instance Class",required:!1,deprecated:!1},contentTypeFormat:{kind:"attribute",type:"string",defaultValue:"native",enum:["json","native"],description:"Defines a content type format in which protobuf message will be serialized/deserialized from(to) the Java been. The format can either be native or json for either native protobuf or json fields representation. The default value is native.",title:"Content Type Format",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},rss:{type:"object",title:"RSS",group:"dataformat,transformation",icon:"generic24.png",description:"RSS data format is used for working with RSS sync feed Java Objects and transforming to XML and vice-versa.",properties:{contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},secureXML:{type:"object",title:"XML Security",group:"dataformat,transformation,xml,security",icon:"generic24.png",description:"The XML Security data format facilitates encryption and decryption of XML payloads.",properties:{xmlCipherAlgorithm:{kind:"attribute",type:"string",defaultValue:"TRIPLEDES",description:"The cipher algorithm to be used for encryption/decryption of the XML message content. The available choices are: XMLCipher.TRIPLEDES XMLCipher.AES_128 XMLCipher.AES_128_GCM XMLCipher.AES_192 XMLCipher.AES_192_GCM XMLCipher.AES_256 XMLCipher.AES_256_GCM XMLCipher.SEED_128 XMLCipher.CAMELLIA_128 XMLCipher.CAMELLIA_192 XMLCipher.CAMELLIA_256 The default value is MLCipher.TRIPLEDES",title:"Xml Cipher Algorithm",required:!1,deprecated:!1},passPhrase:{kind:"attribute",type:"string",description:"A String used as passPhrase to encrypt/decrypt content. The passPhrase has to be provided. If no passPhrase is specified, a default passPhrase is used. The passPhrase needs to be put together in conjunction with the appropriate encryption algorithm. For example using TRIPLEDES the passPhase can be a Only another 24 Byte key",title:"Pass Phrase",required:!1,deprecated:!1},passPhraseByte:{kind:"attribute",type:"string",description:"A byte used as passPhrase to encrypt/decrypt content. The passPhrase has to be provided. If no passPhrase is specified, a default passPhrase is used. The passPhrase needs to be put together in conjunction with the appropriate encryption algorithm. For example using TRIPLEDES the passPhase can be a Only another 24 Byte key",title:"Pass Phrase Byte",required:!1,deprecated:!1},secureTag:{kind:"attribute",type:"string",description:"The XPath reference to the XML Element selected for encryption/decryption. If no tag is specified, the entire payload is encrypted/decrypted.",title:"Secure Tag",required:!1,deprecated:!1},secureTagContents:{kind:"attribute",type:"boolean",defaultValue:"false",description:"A boolean value to specify whether the XML Element is to be encrypted or the contents of the XML Element false = Element Level true = Element Content Level",title:"Secure Tag Contents",required:!1,deprecated:!1},keyCipherAlgorithm:{kind:"attribute",type:"string",defaultValue:"RSA_OAEP",description:"The cipher algorithm to be used for encryption/decryption of the asymmetric key. The available choices are: XMLCipher.RSA_v1dot5 XMLCipher.RSA_OAEP XMLCipher.RSA_OAEP_11 The default value is XMLCipher.RSA_OAEP",title:"Key Cipher Algorithm",required:!1,deprecated:!1},recipientKeyAlias:{kind:"attribute",type:"string",description:"The key alias to be used when retrieving the recipient's public or private key from a KeyStore when performing asymmetric key encryption or decryption.",title:"Recipient Key Alias",required:!1,deprecated:!1},keyOrTrustStoreParametersId:{kind:"attribute",type:"string",description:"Refers to a KeyStore instance to lookup in the registry, which is used for configuration options for creating and loading a KeyStore instance that represents the sender's trustStore or recipient's keyStore.",title:"Key Or Trust Store Parameters Id",required:!1,deprecated:!1},keyPassword:{kind:"attribute",type:"string",description:"The password to be used for retrieving the private key from the KeyStore. This key is used for asymmetric decryption.",title:"Key Password",required:!1,deprecated:!1},digestAlgorithm:{kind:"attribute",type:"string",defaultValue:"SHA1",description:"The digest algorithm to use with the RSA OAEP algorithm. The available choices are: XMLCipher.SHA1 XMLCipher.SHA256 XMLCipher.SHA512 The default value is XMLCipher.SHA1",title:"Digest Algorithm",required:!1,deprecated:!1},mgfAlgorithm:{kind:"attribute",type:"string",defaultValue:"MGF1_SHA1",description:"The MGF Algorithm to use with the RSA OAEP algorithm. The available choices are: EncryptionConstants.MGF1_SHA1 EncryptionConstants.MGF1_SHA256 EncryptionConstants.MGF1_SHA512 The default value is EncryptionConstants.MGF1_SHA1",title:"Mgf Algorithm",required:!1,deprecated:!1},addKeyValueForEncryptedKey:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to add the public key used to encrypt the session key as a KeyValue in the EncryptedKey structure or not.",title:"Add Key Value For Encrypted Key",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},serialization:{type:"object",title:"Java Object Serialization",group:"dataformat,transformation,core",icon:"generic24.png",description:"Serialization is a data format which uses the standard Java Serialization mechanism to unmarshal a binary payload into Java objects or to marshal Java objects into a binary blob.",properties:{contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},soapjaxb:{type:"object",title:"SOAP",group:"dataformat,transformation,xml",icon:"generic24.png",description:"SOAP is a data format which uses JAXB2 and JAX-WS annotations to marshal and unmarshal SOAP payloads.",properties:{contextPath:{kind:"attribute",type:"string",description:"Package name where your JAXB classes are located.",title:"Context Path",required:!0,deprecated:!1},encoding:{kind:"attribute",type:"string",description:"To overrule and use a specific encoding",title:"Encoding",required:!1,deprecated:!1},elementNameStrategyRef:{kind:"attribute",type:"string",description:"Refers to an element strategy to lookup from the registry. An element name strategy is used for two purposes. The first is to find a xml element name for a given object and soap action when marshaling the object into a SOAP message. The second is to find an Exception class for a given soap fault name. The following three element strategy class name is provided out of the box. QNameStrategy - Uses a fixed qName that is configured on instantiation. Exception lookup is not supported TypeNameStrategy - Uses the name and namespace from the XMLType annotation of the given type. If no namespace is set then package-info is used. Exception lookup is not supported ServiceInterfaceStrategy - Uses information from a webservice interface to determine the type name and to find the exception class for a SOAP fault All three classes is located in the package name org.apache.camel.dataformat.soap.name If you have generated the web service stub code with cxf-codegen or a similar tool then you probably will want to use the ServiceInterfaceStrategy. In the case you have no annotated service interface you should use QNameStrategy or TypeNameStrategy.",title:"Element Name Strategy Ref",required:!1,deprecated:!1},version:{kind:"attribute",type:"string",defaultValue:"1.1",description:"SOAP version should either be 1.1 or 1.2. Is by default 1.1",title:"Version",required:!1,deprecated:!1},namespacePrefixRef:{kind:"attribute",type:"string",description:"When marshalling using JAXB or SOAP then the JAXB implementation will automatic assign namespace prefixes, such as ns2, ns3, ns4 etc. To control this mapping, Camel allows you to refer to a map which contains the desired mapping.",title:"Namespace Prefix Ref",required:!1,deprecated:!1},schema:{kind:"attribute",type:"string",description:"To validate against an existing schema. Your can use the prefix classpath:, file: or http: to specify how the resource should by resolved. You can separate multiple schema files by using the ',' character.",title:"Schema",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},string:{type:"object",title:"String Encoding",group:"dataformat,transformation,core",icon:"generic24.png",description:"String data format is a textual based format that supports character encoding.",properties:{charset:{kind:"attribute",type:"string",description:"Sets an encoding to use. Will by default use the JVM platform default charset.",title:"Charset",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},syslog:{type:"object",title:"Syslog",group:"dataformat,transformation,monitoring",icon:"generic24.png",description:"The Syslog dataformat is used for working with RFC3164 and RFC5424 messages (logging and monitoring).",properties:{contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},tarfile:{type:"object",title:"Tar File",group:"dataformat,transformation,file",icon:"generic24.png",description:"The Tar File data format is a message compression and de-compression format of tar files.",properties:{usingIterator:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the tar file has more then one entry, the setting this option to true, allows to work with the splitter EIP, to split the data using an iterator in a streaming mode.",title:"Using Iterator",required:!1,deprecated:!1},allowEmptyDirectory:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the tar file has more then one entry, setting this option to true, allows to get the iterator even if the directory is empty",title:"Allow Empty Directory",required:!1,deprecated:!1},preservePathElements:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the file name contains path elements, setting this option to true, allows the path to be maintained in the tar file.",title:"Preserve Path Elements",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},thrift:{type:"object",title:"Thrift",group:"dataformat,transformation",icon:"generic24.png",description:"The Thrift data format is used for serialization and deserialization of messages using Apache Thrift binary dataformat.",properties:{instanceClass:{kind:"attribute",type:"string",description:"Name of class to use when unarmshalling",title:"Instance Class",required:!1,deprecated:!1},contentTypeFormat:{kind:"attribute",type:"string",defaultValue:"binary",enum:["binary","json","sjson"],description:"Defines a content type format in which thrift message will be serialized/deserialized from(to) the Java been. The format can either be native or json for either native binary thrift, json or simple json fields representation. The default value is binary.",title:"Content Type Format",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},tidyMarkup:{type:"object",title:"TidyMarkup",group:"dataformat,transformation",icon:"generic24.png",description:"TidyMarkup data format is used for parsing HTML and return it as pretty well-formed HTML.",properties:{dataObjectType:{kind:"attribute",type:"string",defaultValue:"org.w3c.dom.Node",description:"What data type to unmarshal as, can either be org.w3c.dom.Node or java.lang.String. Is by default org.w3c.dom.Node",title:"Data Object Type",required:!1,deprecated:!1},omitXmlDeclaration:{kind:"attribute",type:"boolean",defaultValue:"false",description:"When returning a String, do we omit the XML declaration in the top.",title:"Omit Xml Declaration",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},typeFilter:{type:"object",title:"YAML Type Filter",group:"dataformat,transformation,yaml",icon:"generic24.png",description:"",properties:{value:{kind:"attribute",type:"string",description:"Value of type such as class name or regular expression",title:"Value",required:!1,deprecated:!1},type:{kind:"attribute",type:"object",enum:["regexp","type"],description:"Whether to filter by class type or regular expression",title:"Type",required:!1,deprecated:!1}}},"univocity-csv":{type:"object",title:"uniVocity CSV",group:"dataformat,transformation,csv",icon:"generic24.png",description:"The uniVocity CSV data format is used for working with CSV (Comma Separated Values) flat payloads.",properties:{quoteAllFields:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not all values must be quoted when writing them.",title:"Quote All Fields",required:!1,deprecated:!1},quote:{kind:"attribute",type:"string",defaultValue:'"',description:"The quote symbol.",title:"Quote",required:!1,deprecated:!1},quoteEscape:{kind:"attribute",type:"string",defaultValue:'"',description:"The quote escape symbol",title:"Quote Escape",required:!1,deprecated:!1},delimiter:{kind:"attribute",type:"string",defaultValue:",",description:"The delimiter of values",title:"Delimiter",required:!1,deprecated:!1},nullValue:{kind:"attribute",type:"string",description:"The string representation of a null value. The default value is null",title:"Null Value",required:!1,deprecated:!1},skipEmptyLines:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the empty lines must be ignored. The default value is true",title:"Skip Empty Lines",required:!1,deprecated:!1},ignoreTrailingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the trailing white spaces must ignored. The default value is true",title:"Ignore Trailing Whitespaces",required:!1,deprecated:!1},ignoreLeadingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the leading white spaces must be ignored. The default value is true",title:"Ignore Leading Whitespaces",required:!1,deprecated:!1},headersDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the headers are disabled. When defined, this option explicitly sets the headers as null which indicates that there is no header. The default value is false",title:"Headers Disabled",required:!1,deprecated:!1},headerExtractionEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the header must be read in the first line of the test document The default value is false",title:"Header Extraction Enabled",required:!1,deprecated:!1},numberOfRecordsToRead:{kind:"attribute",type:"integer",description:"The maximum number of record to read.",title:"Number Of Records To Read",required:!1,deprecated:!1},emptyValue:{kind:"attribute",type:"string",description:"The String representation of an empty value",title:"Empty Value",required:!1,deprecated:!1},lineSeparator:{kind:"attribute",type:"string",description:"The line separator of the files The default value is to use the JVM platform line separator",title:"Line Separator",required:!1,deprecated:!1},normalizedLineSeparator:{kind:"attribute",type:"string",defaultValue:"\n",description:"The normalized line separator of the files The default value is a new line character.",title:"Normalized Line Separator",required:!1,deprecated:!1},comment:{kind:"attribute",type:"string",defaultValue:"#",description:"The comment symbol. The default value is #",title:"Comment",required:!1,deprecated:!1},lazyLoad:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false",title:"Lazy Load",required:!1,deprecated:!1},asMap:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false",title:"As Map",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},"univocity-fixed":{type:"object",title:"uniVocity Fixed Length",group:"dataformat,transformation,csv",icon:"generic24.png",description:"The uniVocity Fixed Length data format is used for working with fixed length flat payloads.",properties:{skipTrailingCharsUntilNewline:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the trailing characters until new line must be ignored. The default value is false",title:"Skip Trailing Chars Until Newline",required:!1,deprecated:!1},recordEndsOnNewline:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the record ends on new line. The default value is false",title:"Record Ends On Newline",required:!1,deprecated:!1},padding:{kind:"attribute",type:"string",description:"The padding character. The default value is a space",title:"Padding",required:!1,deprecated:!1},nullValue:{kind:"attribute",type:"string",description:"The string representation of a null value. The default value is null",title:"Null Value",required:!1,deprecated:!1},skipEmptyLines:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the empty lines must be ignored. The default value is true",title:"Skip Empty Lines",required:!1,deprecated:!1},ignoreTrailingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the trailing white spaces must ignored. The default value is true",title:"Ignore Trailing Whitespaces",required:!1,deprecated:!1},ignoreLeadingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the leading white spaces must be ignored. The default value is true",title:"Ignore Leading Whitespaces",required:!1,deprecated:!1},headersDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the headers are disabled. When defined, this option explicitly sets the headers as null which indicates that there is no header. The default value is false",title:"Headers Disabled",required:!1,deprecated:!1},headerExtractionEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the header must be read in the first line of the test document The default value is false",title:"Header Extraction Enabled",required:!1,deprecated:!1},numberOfRecordsToRead:{kind:"attribute",type:"integer",description:"The maximum number of record to read.",title:"Number Of Records To Read",required:!1,deprecated:!1},emptyValue:{kind:"attribute",type:"string",description:"The String representation of an empty value",title:"Empty Value",required:!1,deprecated:!1},lineSeparator:{kind:"attribute",type:"string",description:"The line separator of the files The default value is to use the JVM platform line separator",title:"Line Separator",required:!1,deprecated:!1},normalizedLineSeparator:{kind:"attribute",type:"string",defaultValue:"\n",description:"The normalized line separator of the files The default value is a new line character.",title:"Normalized Line Separator",required:!1,deprecated:!1},comment:{kind:"attribute",type:"string",defaultValue:"#",description:"The comment symbol. The default value is #",title:"Comment",required:!1,deprecated:!1},lazyLoad:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false",title:"Lazy Load",required:!1,deprecated:!1},asMap:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false",title:"As Map",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},"univocity-header":{type:"object",title:"uniVocity Header",group:"dataformat,transformation,csv",icon:"generic24.png",description:"To configure headers for UniVocity data formats.",properties:{name:{kind:"value",type:"string",description:"Header name",title:"Name",required:!0,deprecated:!1},length:{kind:"attribute",type:"integer",description:"Header length",title:"Length",required:!1,deprecated:!1}}},"univocity-tsv":{type:"object",title:"uniVocity TSV",group:"dataformat,transformation,csv",icon:"generic24.png",description:"The uniVocity TSV data format is used for working with TSV (Tabular Separated Values) flat payloads.",properties:{escapeChar:{kind:"attribute",type:"string",defaultValue:"\\",description:"The escape character.",title:"Escape Char",required:!1,deprecated:!1},nullValue:{kind:"attribute",type:"string",description:"The string representation of a null value. The default value is null",title:"Null Value",required:!1,deprecated:!1},skipEmptyLines:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the empty lines must be ignored. The default value is true",title:"Skip Empty Lines",required:!1,deprecated:!1},ignoreTrailingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the trailing white spaces must ignored. The default value is true",title:"Ignore Trailing Whitespaces",required:!1,deprecated:!1},ignoreLeadingWhitespaces:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether or not the leading white spaces must be ignored. The default value is true",title:"Ignore Leading Whitespaces",required:!1,deprecated:!1},headersDisabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the headers are disabled. When defined, this option explicitly sets the headers as null which indicates that there is no header. The default value is false",title:"Headers Disabled",required:!1,deprecated:!1},headerExtractionEnabled:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether or not the header must be read in the first line of the test document The default value is false",title:"Header Extraction Enabled",required:!1,deprecated:!1},numberOfRecordsToRead:{kind:"attribute",type:"integer",description:"The maximum number of record to read.",title:"Number Of Records To Read",required:!1,deprecated:!1},emptyValue:{kind:"attribute",type:"string",description:"The String representation of an empty value",title:"Empty Value",required:!1,deprecated:!1},lineSeparator:{kind:"attribute",type:"string",description:"The line separator of the files The default value is to use the JVM platform line separator",title:"Line Separator",required:!1,deprecated:!1},normalizedLineSeparator:{kind:"attribute",type:"string",defaultValue:"\n",description:"The normalized line separator of the files The default value is a new line character.",title:"Normalized Line Separator",required:!1,deprecated:!1},comment:{kind:"attribute",type:"string",defaultValue:"#",description:"The comment symbol. The default value is #",title:"Comment",required:!1,deprecated:!1},lazyLoad:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one. The default value is false",title:"Lazy Load",required:!1,deprecated:!1},asMap:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the unmarshalling should produce maps for the lines values instead of lists. It requires to have header (either defined or collected). The default value is false",title:"As Map",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},xmlBeans:{type:"object",title:"XML Beans",group:"dataformat,transformation,xml",icon:"generic24.png",description:"XML Beans data format is used for unmarshal a XML payload to POJO or to marshal POJO back to XML payload.",properties:{prettyPrint:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To enable pretty printing output nicely formatted. Is by default false.",title:"Pretty Print",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},xmljson:{type:"object",title:"XML JSon",group:"dataformat,transformation,xml,json",icon:"generic24.png",description:"XML JSon data format can convert from XML to JSON and vice-versa directly, without stepping through intermediate POJOs.",properties:{encoding:{kind:"attribute",type:"string",description:"Sets the encoding. Used for unmarshalling (JSON to XML conversion).",title:"Encoding",required:!1,deprecated:!1},elementName:{kind:"attribute",type:"string",description:"Specifies the name of the XML elements representing each array element. Used for unmarshalling (JSON to XML conversion).",title:"Element Name",required:!1,deprecated:!1},arrayName:{kind:"attribute",type:"string",description:"Specifies the name of the top-level XML element. Used for unmarshalling (JSON to XML conversion). For example, when converting 1, 2, 3, it will be output by default as 123. By setting this option or rootName, you can alter the name of element 'a'.",title:"Array Name",required:!1,deprecated:!1},forceTopLevelObject:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Determines whether the resulting JSON will start off with a top-most element whose name matches the XML root element. Used for marshalling (XML to JSon conversion). If disabled, XML string 12 turns into 'x: '1', 'y': '2' . Otherwise, it turns into 'a': 'x: '1', 'y': '2' .",title:"Force Top Level Object",required:!1,deprecated:!1},namespaceLenient:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Flag to be tolerant to incomplete namespace prefixes. Used for unmarshalling (JSON to XML conversion). In most cases, json-lib automatically changes this flag at runtime to match the processing.",title:"Namespace Lenient",required:!1,deprecated:!1},rootName:{kind:"attribute",type:"string",description:"Specifies the name of the top-level element. Used for unmarshalling (JSON to XML conversion). If not set, json-lib will use arrayName or objectName (default value: 'o', at the current time it is not configurable in this data format). If set to 'root', the JSON string 'x': 'value1', 'y' : 'value2' would turn into value1value2, otherwise the 'root' element would be named 'o'.",title:"Root Name",required:!1,deprecated:!1},skipWhitespace:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Determines whether white spaces between XML elements will be regarded as text values or disregarded. Used for marshalling (XML to JSon conversion).",title:"Skip Whitespace",required:!1,deprecated:!1},trimSpaces:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Determines whether leading and trailing white spaces will be omitted from String values. Used for marshalling (XML to JSon conversion).",title:"Trim Spaces",required:!1,deprecated:!1},skipNamespaces:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Signals whether namespaces should be ignored. By default they will be added to the JSON output using xmlns elements. Used for marshalling (XML to JSon conversion).",title:"Skip Namespaces",required:!1,deprecated:!1},removeNamespacePrefixes:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Removes the namespace prefixes from XML qualified elements, so that the resulting JSON string does not contain them. Used for marshalling (XML to JSon conversion).",title:"Remove Namespace Prefixes",required:!1,deprecated:!1},expandableProperties:{kind:"attribute",type:"array",description:"With expandable properties, JSON array elements are converted to XML as a sequence of repetitive XML elements with the local name equal to the JSON key, for example: number: 1,2,3 , normally converted to: 123 (where e can be modified by setting elementName), would instead translate to 123, if number is set as an expandable property Used for unmarshalling (JSON to XML conversion).",title:"Expandable Properties",required:!1,deprecated:!1},typeHints:{kind:"attribute",type:"string",description:"Adds type hints to the resulting XML to aid conversion back to JSON. Used for unmarshalling (JSON to XML conversion).",title:"Type Hints",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},xmlrpc:{type:"object",title:"XML RPC",group:"dataformat,transformation,xml",icon:"generic24.png",description:"The XML RPC data format is used for working with the XML RPC protocol.",properties:{request:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to marshal/unmarshal request or response Is by default false",title:"Request",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},xstream:{type:"object",title:"XStream",group:"dataformat,transformation,xml,json",icon:"generic24.png",description:"XSTream data format is used for unmarshal a XML payload to POJO or to marshal POJO back to XML payload.",properties:{permissions:{kind:"attribute",type:"string",description:"Adds permissions that controls which Java packages and classes XStream is allowed to use during unmarshal from xml/json to Java beans. A permission must be configured either here or globally using a JVM system property. The permission can be specified in a syntax where a plus sign is allow, and minus sign is deny. Wildcards is supported by using . as prefix. For example to allow com.foo and all subpackages then specfy com.foo.. Multiple permissions can be configured separated by comma, such as com.foo.,-com.foo.bar.MySecretBean. The following default permission is always included: -,java.lang.,java.util. unless its overridden by specifying a JVM system property with they key org.apache.camel.xstream.permissions.",title:"Permissions",required:!1,deprecated:!1},encoding:{kind:"attribute",type:"string",description:"Sets the encoding to use",title:"Encoding",required:!1,deprecated:!1},driver:{kind:"attribute",type:"string",description:"To use a custom XStream driver. The instance must be of type com.thoughtworks.xstream.io.HierarchicalStreamDriver",title:"Driver",required:!1,deprecated:!1},driverRef:{kind:"attribute",type:"string",description:"To refer to a custom XStream driver to lookup in the registry. The instance must be of type com.thoughtworks.xstream.io.HierarchicalStreamDriver",title:"Driver Ref",required:!1,deprecated:!1},mode:{kind:"attribute",type:"string",description:"Mode for dealing with duplicate references The possible values are: NO_REFERENCES ID_REFERENCES XPATH_RELATIVE_REFERENCES XPATH_ABSOLUTE_REFERENCES SINGLE_NODE_XPATH_RELATIVE_REFERENCES SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES",title:"Mode",required:!1,deprecated:!1},converters:{kind:"element",type:"array",description:"List of class names for using custom XStream converters. The classes must be of type com.thoughtworks.xstream.converters.Converter",title:"Converters",required:!1,deprecated:!1},aliases:{kind:"element",type:"object",description:"Alias a Class to a shorter name to be used in XML elements.",title:"Aliases",required:!1,deprecated:!1},omitFields:{kind:"element",type:"object",description:"Prevents a field from being serialized. To omit a field you must always provide the declaring type and not necessarily the type that is converted.",title:"Omit Fields",required:!1,deprecated:!1},implicitCollections:{kind:"element",type:"object",description:"Adds a default implicit collection which is used for any unmapped XML tag.",title:"Implicit Collections",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},yaml:{type:"object",title:"YAML",group:"dataformat,transformation,yaml",icon:"generic24.png",description:"YAML is a data format to marshal and unmarshal Java objects to and from YAML.",properties:{library:{kind:"attribute",type:"object",defaultValue:"SnakeYAML",enum:["SnakeYAML"],description:"Which yaml library to use. By default it is SnakeYAML",title:"Library",required:!1,deprecated:!1},unmarshalTypeName:{kind:"attribute",type:"string",description:"Class name of the java type to use when unarmshalling",title:"Unmarshal Type Name",required:!1,deprecated:!1},constructor:{kind:"attribute",type:"string",description:"BaseConstructor to construct incoming documents.",title:"Constructor",required:!1,deprecated:!1},representer:{kind:"attribute",type:"string",description:"Representer to emit outgoing objects.",title:"Representer",required:!1,deprecated:!1},dumperOptions:{kind:"attribute",type:"string",description:"DumperOptions to configure outgoing objects.",title:"Dumper Options",required:!1,deprecated:!1},resolver:{kind:"attribute",type:"string",description:"Resolver to detect implicit type",title:"Resolver",required:!1,deprecated:!1},useApplicationContextClassLoader:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Use ApplicationContextClassLoader as custom ClassLoader",title:"Use Application Context Class Loader",required:!1,deprecated:!1},prettyFlow:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Force the emitter to produce a pretty YAML document when using the flow style.",title:"Pretty Flow",required:!1,deprecated:!1},allowAnyType:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Allow any class to be un-marshaled",title:"Allow Any Type",required:!1,deprecated:!1},typeFilter:{kind:"element",type:"array",description:"Set the types SnakeYAML is allowed to un-marshall",title:"Type Filter",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},zip:{type:"object",title:"Zip Deflate Compression",group:"dataformat,transformation",icon:"generic24.png",description:"Zip Deflate Compression data format is a message compression and de-compression format (not zip files).",properties:{compressionLevel:{kind:"attribute",type:"integer",defaultValue:"-1",description:"To specify a specific compression between 0-9. -1 is default compression, 0 is no compression, and 9 is best compression.",title:"Compression Level",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}},zipFile:{type:"object",title:"Zip File",group:"dataformat,transformation,file",icon:"generic24.png",description:"The Zip File data format is a message compression and de-compression format of zip files.",properties:{usingIterator:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the zip file has more then one entry, the setting this option to true, allows to work with the splitter EIP, to split the data using an iterator in a streaming mode.",title:"Using Iterator",required:!1,deprecated:!1},allowEmptyDirectory:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the zip file has more then one entry, setting this option to true, allows to get the iterator even if the directory is empty",title:"Allow Empty Directory",required:!1,deprecated:!1},preservePathElements:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the file name contains path elements, setting this option to true, allows the path to be maintained in the zip file.",title:"Preserve Path Elements",required:!1,deprecated:!1},contentTypeHeader:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the data format should set the Content-Type header with the type from the data format if the data format is capable of doing so. For example application/xml for data formats marshalling to XML, or application/json for data formats marshalling to JSon etc.",title:"Content Type Header",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the value of the id property.",title:"Id",required:!1,deprecated:!1}}}},languages:{constant:{type:"object",title:"Constant",group:"language,core",icon:"generic24.png",description:"To use a constant value in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},el:{type:"object",title:"EL",group:"language,script",icon:"generic24.png",description:"To use EL scripts in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},exchangeProperty:{type:"object",title:"ExchangeProperty",group:"language,core",icon:"generic24.png",description:"To use a Camel Exchange property in expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},expression:{type:"object",title:"Expression",group:"language",icon:"generic24.png",description:"A useful base class for an expression",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},groovy:{type:"object",title:"Groovy",group:"language,script",icon:"generic24.png",description:"To use Groovy scripts in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},header:{type:"object",title:"Header",group:"language,core",icon:"generic24.png",description:"To use a Camel Message header in expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},javaScript:{type:"object",title:"JavaScript",group:"language,script",icon:"generic24.png",description:"To use JavaScript in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},jsonpath:{type:"object",title:"JsonPath",group:"language,json",icon:"generic24.png",description:"To use JsonPath in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class name of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},suppressExceptions:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to suppress exceptions such as PathNotFoundException.",title:"Suppress Exceptions",required:!1,deprecated:!1},allowSimple:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to allow in inlined simple exceptions in the JsonPath expression",title:"Allow Simple",required:!1,deprecated:!1},allowEasyPredicate:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to allow using the easy predicate parser to pre-parse predicates.",title:"Allow Easy Predicate",required:!1,deprecated:!1},writeAsString:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to write the output of each row/element as a JSON String value instead of a Map/POJO value.",title:"Write As String",required:!1,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to use as input, instead of the message body",title:"Header Name",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},jxpath:{type:"object",title:"JXPath",group:"language,java",icon:"generic24.png",description:"To use JXPath in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},lenient:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Allows to turn lenient on the JXPathContext. When turned on this allows the JXPath expression to evaluate against expressions and message bodies which may be invalid / missing data. This option is by default false",title:"Lenient",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},language:{type:"object",title:"Language",group:"language,core",icon:"generic24.png",description:"To use the specified language in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},language:{kind:"attribute",type:"string",description:"The name of the language to use",title:"Language",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},method:{type:"object",title:"Bean method",group:"language,core,java",icon:"generic24.png",description:"To use a Java bean (aka method call) in Camel expressions or predicates.",properties:{bean:{kind:"attribute",type:"string",description:"Either a reference or a class name of the bean to use",title:"Bean",required:!1,deprecated:!0},ref:{kind:"attribute",type:"string",description:"Reference to bean to lookup in the registry",title:"Ref",required:!1,deprecated:!1},method:{kind:"attribute",type:"string",description:"Name of method to call",title:"Method",required:!1,deprecated:!1},beanType:{kind:"attribute",type:"string",description:"Class name of the bean to use",title:"Bean Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},mvel:{type:"object",title:"MVEL",group:"language,java",icon:"generic24.png",description:"To use MVEL scripts in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},ognl:{type:"object",title:"OGNL",group:"language,java",icon:"generic24.png",description:"To use OGNL scripts in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},php:{type:"object",title:"PHP",group:"language,script",icon:"generic24.png",description:"To use PHP scripts in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},python:{type:"object",title:"Python",group:"language,script",icon:"generic24.png",description:"To use Python scripts in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},ref:{type:"object",title:"Ref",group:"language,core",icon:"generic24.png",description:"Reference to an existing Camel expression or predicate, which is looked up from the Camel registry.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},ruby:{type:"object",title:"Ruby",group:"language,script",icon:"generic24.png",description:"To use Ruby scripts in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},simple:{type:"object",title:"Simple",group:"language,core,java",icon:"generic24.png",description:"To use Camels built-in Simple language in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},resultType:{kind:"attribute",type:"string",description:"Sets the class name of the result type (type from output)",title:"Result Type",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},spel:{type:"object",title:"SpEL",group:"language,spring",icon:"generic24.png",description:"To use Spring Expression Language (SpEL) in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},sql:{type:"object",title:"SQL",group:"language",icon:"generic24.png",description:"To use SQL (on Java beans) in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},terser:{type:"object",title:"HL7 Terser",group:"language,hl7",icon:"generic24.png",description:"To use HL7 terser scripts in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},tokenize:{type:"object",title:"Tokenize",group:"language,core",icon:"generic24.png",description:"To use Camel message body or header with a tokenizer in Camel expressions or predicates.",properties:{token:{kind:"attribute",type:"string",description:"The (start) token to use as tokenizer, for example you can use the new line token. You can use simple language as the token to support dynamic tokens.",title:"Token",required:!0,deprecated:!1},endToken:{kind:"attribute",type:"string",description:"The end token to use as tokenizer if using start/end token pairs. You can use simple language as the token to support dynamic tokens.",title:"End Token",required:!1,deprecated:!1},inheritNamespaceTagName:{kind:"attribute",type:"string",description:"To inherit namespaces from a root/parent tag name when using XML You can use simple language as the tag name to support dynamic names.",title:"Inherit Namespace Tag Name",required:!1,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to tokenize instead of using the message body.",title:"Header Name",required:!1,deprecated:!1},regex:{kind:"attribute",type:"boolean",defaultValue:"false",description:"If the token is a regular expression pattern. The default value is false",title:"Regex",required:!1,deprecated:!1},xml:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether the input is XML messages. This option must be set to true if working with XML payloads.",title:"Xml",required:!1,deprecated:!1},includeTokens:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to include the tokens in the parts when using pairs The default value is false",title:"Include Tokens",required:!1,deprecated:!1},group:{kind:"attribute",type:"string",description:"To group N parts together, for example to split big files into chunks of 1000 lines. You can use simple language as the group to support dynamic group sizes.",title:"Group",required:!1,deprecated:!1},skipFirst:{kind:"attribute",type:"boolean",defaultValue:"false",description:"To skip the very first element",title:"Skip First",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},xpath:{type:"object",title:"XPath",group:"language,core,xml",icon:"generic24.png",description:"To use XPath (XML) in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},documentType:{kind:"attribute",type:"string",description:"Name of class for document type The default value is org.w3c.dom.Document",title:"Document Type",required:!1,deprecated:!1},resultType:{kind:"attribute",type:"string",defaultValue:"NODESET",enum:["BOOLEAN","NODE","NODESET","NUMBER","STRING"],description:"Sets the class name of the result type (type from output) The default result type is NodeSet",title:"Result Type",required:!1,deprecated:!1},saxon:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to use Saxon.",title:"Saxon",required:!1,deprecated:!1},factoryRef:{kind:"attribute",type:"string",description:"References to a custom XPathFactory to lookup in the registry",title:"Factory Ref",required:!1,deprecated:!1},objectModel:{kind:"attribute",type:"string",description:"The XPath object model to use",title:"Object Model",required:!1,deprecated:!1},logNamespaces:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to log namespaces which can assist during trouble shooting",title:"Log Namespaces",required:!1,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to use as input, instead of the message body",title:"Header Name",required:!1,deprecated:!1},threadSafety:{kind:"attribute",type:"boolean",defaultValue:"false",description:"Whether to enable thread-safety for the returned result of the xpath expression. This applies to when using NODESET as the result type, and the returned set has multiple elements. In this situation there can be thread-safety issues if you process the NODESET concurrently such as from a Camel Splitter EIP in parallel processing mode. This option prevents concurrency issues by doing defensive copies of the nodes. It is recommended to turn this option on if you are using camel-saxon or Saxon in your application. Saxon has thread-safety issues which can be prevented by turning this option on.",title:"Thread Safety",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},xquery:{type:"object",title:"XQuery",group:"language,xml",icon:"generic24.png",description:"To use XQuery (XML) in Camel expressions or predicates.",properties:{expression:{kind:"value",type:"string",description:"The expression value in your chosen language syntax",title:"Expression",required:!0,deprecated:!1},type:{kind:"attribute",type:"string",description:"Sets the class name of the result type (type from output) The default result type is NodeSet",title:"Type",required:!1,deprecated:!1},headerName:{kind:"attribute",type:"string",description:"Name of header to use as input, instead of the message body",title:"Header Name",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}},xtokenize:{type:"object",title:"XML Tokenize",group:"language,core,xml",icon:"generic24.png",description:"To use Camel message body or header with a XML tokenizer in Camel expressions or predicates.",properties:{headerName:{kind:"attribute",type:"string",description:"Name of header to tokenize instead of using the message body.",title:"Header Name",required:!1,deprecated:!1},mode:{kind:"attribute",type:"string",description:"The extraction mode. The available extraction modes are: i - injecting the contextual namespace bindings into the extracted token (default) w - wrapping the extracted token in its ancestor context u - unwrapping the extracted token to its child content t - extracting the text content of the specified element",title:"Mode",required:!1,deprecated:!1},group:{kind:"attribute",type:"integer",description:"To group N parts together",title:"Group",required:!1,deprecated:!1},trim:{kind:"attribute",type:"boolean",defaultValue:"true",description:"Whether to trim the value to remove leading and trailing whitespaces and line breaks",title:"Trim",required:!1,deprecated:!1},id:{kind:"attribute",type:"string",description:"Sets the id of this node",title:"Id",required:!1,deprecated:!1}}}}};!function(e,l){e.addGauge=function(e,t,n,i){var r=new d(e,t,n,null,i,"gauges",null);c.push(r)},e.addMeter=function(e,t,n,i,r,o){null==o&&(o="Calls");var a=new d(e,t,n,i,r,"meters",o);a.eventType=o,c.push(a)},e.addCounter=function(e,t,n,i,r){var o=new d(e,t,n,i,r,"counters",null);c.push(o)},e.addHistogram=function(e,t,n,i,r){var o=new d(e,t,n,i||1,r,"histograms",null);c.push(o)},e.addLinkedCounter=function(e,t,n,i,r,o){var a=new d(e,t,n,null,o,"counters",null);a||(a=new d(e,t,n,null,o,"timers",null)),a.maxClassName=i,a.maxMetricName=r,a.getMax=function(e){return this.getMetricNode(this.maxClassName,this.maxMetricName,e).count},a.getMetricNode=function(e,t,n){var i=n.counters[e+"."+t]?n.counters[e+"."+t]:null;return i||(n.timers[e+"."+t]?n.timers[e+"."+t]:null)},c.push(a)},e.addTimer=function(e,t,n,i,r,o,a){var s=u(e,t,n,i,r,o,a,!1);c.push(s)},e.addCache=function(e,t,n){var i=new d(e,t,null,null,n,"caches",null);i.components={gauges:[new d(null,t,"hits",null,"Hits","gauges",null),new d(null,t,"misses",null,"Misses","gauges",null),new d(null,t,"objects",null,"Objects","gauges",null),new d(null,t,"eviction-count",null,"Eviction Count","gauges",null),new d(null,t,"in-memory-hits",null,"In Memory Hits","gauges",null),new d(null,t,"in-memory-misses",null,"In Memory Misses","gauges",null),new d(null,t,"in-memory-objects",null,"In Memory Objects","gauges",null),new d(null,t,"off-heap-hits",null,"Off Heap Hits","gauges",null),new d(null,t,"off-heap-misses",null,"Off Heap Misses","gauges",null),new d(null,t,"off-heap-objects",null,"Off Heap Objects","gauges",null),new d(null,t,"on-disk-hits",null,"On Disk Hits","gauges",null),new d(null,t,"on-disk-misses",null,"On Disk Misses","gauges",null),new d(null,t,"on-disk-objects",null,"On Disk Objects","gauges",null),new d(null,t,"mean-get-time",null,"Mean Get Time","gauges",null),new d(null,t,"mean-search-time",null,"Mean Search Time","gauges",null),new d(null,t,"searches-per-second",null,"Searches Per Sec","gauges",null),new d(null,t,"writer-queue-size",null,"Writer Queue Size","gauges",null),new d(null,t,"accuracy",null,"Accuracy","gauges",null)]},i.getTimer=u(e+"gettimer",t,"gets",5,"Get","get",1,!0),i.putTimer=u(e+"puttimer",t,"puts",5,"Put","put",1,!0),c.push(i)},e.addJvm=function(e,t,n){var i=new d(e,t,null,null,n,"jvms",null);c.push(i)},e.addWeb=function(e,t,n){var i=new d(e,t,null,null,n,"webs",null);i.components={meters:[new d(e+" td.responseCodesOkGraph",t,"responseCodes.ok",10,"OK Responses","meters",null),new d(e+" td.responseCodesBadRequestGraph",t,"responseCodes.badRequest",10,"Bad Requests","meters",null),new d(e+" td.responseCodesCreatedGraph",t,"responseCodes.created",10,"Created Responses","meters",null),new d(e+" td.responseCodesNoContentGraph",t,"responseCodes.noContent",10,"No Content Responses","meters",null),new d(e+" td.responseCodesNotFoundGraph",t,"responseCodes.notFound",10,"Not Found Responses","meters",null),new d(e+" td.responseCodesOtherGraph",t,"responseCodes.other",10,"Other Responses","meters",null),new d(e+" td.responseCodesServerErrorGraph",t,"responseCodes.serverError",10,"Server Error Responses","meters",null)],activeRequestsInfo:new d(e+" td.activeRequestsGraph",t,"activeRequests",10,"Active Requests","counters",null),requestsInfo:u(e+" td.requestsGraph",t,"requests",100,"Requests","requests",100,!0)},c.push(i)},e.addLog4j=function(e,t,n){var i=new d(e,t,null,null,n,"log4js",null);i.components={meters:[new d(e+" td.all",t,"all",100,"all","meters",null),new d(e+" td.fatal",t,"fatal",100,"fatal","meters",null),new d(e+" td.error",t,"error",100,"error","meters",null),new d(e+" td.warn",t,"warn",100,"warn","meters",null),new d(e+" td.info",t,"info",100,"info","meters",null),new d(e+" td.debug",t,"debug",100,"debug","meters",null),new d(e+" td.trace",t,"trace",100,"trace","meters",null)]},c.push(i)},e.initGraphs=function(){for(var e=0;e<c.length;e++)"gauges"==c[e].type?w(c[e]):"meters"==c[e].type?b(c[e]):"counters"==c[e].type||"linkedTimerCounters"==c[e].type?p(c[e]):"histograms"==c[e].type?(r=c[e],o=void 0,o=l("#"+r.divId),a="<div class='metricsWatcher histogram histogramContainer'><div class='heading1 btn-link col-md-12' data-toggle='collapse' data-target='#"+r.divId+"Collapse'> "+(r.isNested?"Histogram":r.title)+"</div><div class='collapse' id='"+r.divId+"Collapse'><table><tr><td class='col-md-4'>Count</td><td class='col-md-4'>Min</td><td class='col-md-4'>Max<td class='col-md-4'>Mean</td></tr><tr><td class='countVal'></td><td class='minVal'></td><td class='meanVal'></td><td class='maxVal'></td></tr></table><p>Percentiles</p><table class='progressTable'>"+v("99.9%","p999")+v("99%","p99")+v("98%","p98")+v("95%","p95")+v("75%","p75")+v("50%","p50")+"</table></div></div>",o.html(a)):"timers"==c[e].type?g(c[e]):"caches"==c[e].type?k(c[e]):"jvms"==c[e].type?(t=c[e],i=n=void 0,n=l("#"+t.divId),i="<div class='metricsWatcher jvm metricGraph col-md-12'><fieldset><legend><div  class='heading1 btn-link' data-toggle='collapse' data-target='#"+t.divId+"Collapse'>"+t.title+"</div></legend><div class='jvmContainer col-md-12 collapse' id='"+t.divId+"Collapse'>\t<div id='"+t.divId+"Vm'></div></div></fieldset></div>",n.html(i)):"webs"==c[e].type?x(c[e]):"log4js"==c[e].type?I(c[e]):alert("Unknown meter info type: "+c[e].type);var t,n,i,r,o,a},e.updateGraphs=function(e){for(var t=0;t<c.length;t++)"gauges"==c[t].type?C(c[t],e):"meters"==c[t].type?y(c[t],e):"counters"==c[t].type||"linkedTimerCounters"==c[t].type?h(c[t],e):"histograms"==c[t].type?f(c[t],e):"timers"==c[t].type?m(c[t],e):"caches"==c[t].type?S(c[t],e):"jvms"==c[t].type?(n=c[t],i=e,a=o=r=void 0,r=l("#"+n.divId+"Vm"),o=i.gauges,a="<div class='row'><div class='col-md-3'><table class='jvmTable'><caption>Memory</caption><tr><td><h5>Total Init</h5></td><td>"+o["jvm.memory.total.init"].value+"</td></tr><tr><td><h5>Total Used</h5></td><td>"+o["jvm.memory.total.used"].value+"</td></tr><tr><td><h5>Total Max</h5></td><td>"+o["jvm.memory.total.max"].value+"</td></tr><tr><td><h5>Total Committed</h5></td><td>"+o["jvm.memory.total.committed"].value+"</td></tr><tr><td><h5>Heap Init</h5></td><td>"+o["jvm.memory.heap.init"].value+"</td></tr><tr><td><h5>Heap Used</h5></td><td>"+o["jvm.memory.heap.used"].value+"</td></tr><tr><td><h5>Heap Max</h5></td><td>"+o["jvm.memory.heap.max"].value+"</td></tr><tr><td><h5>Heap Committed</h5></td><td>"+o["jvm.memory.heap.committed"].value+"</td></tr><tr><td><h5>Non Heap Init</h5></td><td>"+o["jvm.memory.non-heap.init"].value+"</td></tr><tr><td><h5>Non Heap Used</h5></td><td>"+o["jvm.memory.non-heap.used"].value+"</td></tr><tr><td><h5>Non Heap Max</h5></td><td>"+o["jvm.memory.non-heap.max"].value+"</td></tr><tr><td><h5>Non Heap Committed</h5></td><td>"+o["jvm.memory.non-heap.committed"].value+"</td></tr></table></div><div class='col-md-3'><table class='jvmTable'><caption>Memory Usage</caption><tr><td><h5>Heap Usage</h5></td><td>"+(100*o["jvm.memory.heap.usage"].value).toFixed(2)+"</td></tr><tr><td><h5>Non Heap Usage</h5></td><td>"+(100*o["jvm.memory.non-heap.usage"].value).toFixed(2)+"</td></tr>"+(o["jvm.memory.pools.JIT-code-cache.usage"]?"<tr><td><h5>JIT Code Cache Usage</h5></td><td>"+(100*o["jvm.memory.pools.JIT-code-cache.usage"].value).toFixed(2)+"</td></tr>":"")+(o["jvm.memory.pools.Code-Cache.usage"]?"<tr><td><h5>JIT Code Cache Usage</h5></td><td>"+(100*o["jvm.memory.pools.Code-Cache.usage"].value).toFixed(2)+"</td></tr>":"")+(o["jvm.memory.pools.JIT-data-cache.usage"]?"<tr><td><h5>JIT Data Cache Usage</h5></td><td>"+(100*o["jvm.memory.pools.JIT-data-cache.usage"].value).toFixed(2)+"</td></tr>":"")+(o["jvm.memory.pools.Java-heap.usage"]?"<tr><td><h5>Java Heap Usage</h5></td><td>"+(100*o["jvm.memory.pools.Java-heap.usage"].value).toFixed(2)+"</td></tr>":"")+(o["jvm.memory.pools.class-storage.usage"]?"<tr><td><h5>Class Storage Usage</h5></td><td>"+(100*o["jvm.memory.pools.class-storage.usage"].value).toFixed(2)+"</td></tr>":"")+(o["jvm.memory.pools.Perm-Gen.usage"]?"<tr><td><h5>Perm Gen Usage</h5></td><td>"+(100*o["jvm.memory.pools.Perm-Gen.usage"].value).toFixed(2)+"</td></tr>":"")+(o["jvm.memory.pools.Tenured-Gen.usage"]?"<tr><td><h5>Tenured Gen Usage</h5></td><td>"+(100*o["jvm.memory.pools.Tenured-Gen.usage"].value).toFixed(2)+"</td></tr>":"")+(o["jvm.memory.pools.miscellaneous-non-heap-storage.usage"]?"<tr><td><h5>Misc Non Heap Storage Usage</h5></td><td>"+(100*o["jvm.memory.pools.miscellaneous-non-heap-storage.usage"].value).toFixed(2)+"</td></tr>":"")+(o["jvm.memory.pools.Survivor-Space.usage"]?"<tr><td><h5>Survivor Space Usage</h5></td><td>"+(100*o["jvm.memory.pools.Survivor-Space.usage"].value).toFixed(2)+"</td></tr>":"")+(o["jvm.memory.pools.Eden-Space.usage"]?"<tr><td><h5>Eden Space Usage</h5></td><td>"+(100*o["jvm.memory.pools.Eden-Space.usage"].value).toFixed(2)+"</td></tr>":"")+"</table></div><div class='col-md-3'><table class='jvmTable'><caption>Garbage Collection</caption><tr><td><h5>PS Mark Sweep Runs</h5></td><td>"+o["jvm.gc.MarkSweepCompact.count"].value+"</td></tr><tr><td><h5>PS Mark Sweep Time</h5></td><td>"+o["jvm.gc.MarkSweepCompact.time"].value+"</td></tr><tr><td><h5>GC Copy Runs</h5></td><td>"+o["jvm.gc.Copy.count"].value+"</td></tr><tr><td><h5>GC Copy Time</h5></td><td>"+o["jvm.gc.Copy.time"].value+"</td></tr></table></div><div class='col-md-3'><table class='jvmTable'><caption>Threads</caption><tr><td><h5>FD Usage</h5></td><td>"+s(o["jvm.fd.usage"].value,2)+"</td></tr><tr><td><h5>Daemon Threads</h5></td><td>"+o["jvm.thread-states.daemon.count"].value+"</td></tr><tr><td><h5>Threads</h5></td><td>"+o["jvm.thread-states.count"].value+"</td></tr><tr><td><h5>Deadlocks</h5></td><td>"+o["jvm.thread-states.deadlocks"].value+"</td></tr></table><table class='jvmTable'><caption>Thread States</caption><tr><td><h5>Terminated</h5></td><td>"+o["jvm.thread-states.terminated.count"].value+"</td></tr><tr><td><h5>Timed Waiting</h5></td><td>"+o["jvm.thread-states.timed_waiting.count"].value+"</td></tr><tr><td><h5>Blocked</h5></td><td>"+o["jvm.thread-states.blocked.count"].value+"</td></tr><tr><td><h5>Waiting</h5></td><td>"+o["jvm.thread-states.waiting.count"].value+"</td></tr><tr><td><h5>Runnable</h5></td><td>"+o["jvm.thread-states.runnable.count"].value+"</td></tr><tr><td><h5>New</h5></td><td>"+o["jvm.thread-states.new.count"].value+"</td></tr></table></div></div>",r.html(a)):"webs"==c[t].type?T(c[t],e):"log4js"==c[t].type?j(c[t],e):alert("Unknown meter info type: "+c[t].type);var n,i,r,o,a};var c=[];function d(e,t,n,i,r,o,a){this.divId=e,this.className=t,this.metricName=n,this.max=i,this.title=r,this.type=o,this.subTitle=a,this.getMax=function(e){return this.max},this.getMetricNode=function(e,t,n){return n[o][e+"."+t]?n[o][e+"."+t]:null},this.getSubTitle=function(){return null!=this.subTitle?this.subTitle:this.title}}function o(e,t){return(e/t*100).toFixed(0)}function s(e,t){return isNaN(t)&&(t=1),isNaN(e)?t:e.toFixed(t)}function u(e,t,n,i,r,o,a,s){var l=new d(e,t,n,i,r,"timers",o);return l.getMeterInfo=function(){var e=new d(this.divId+" div.timerGraph div.meterGraph",this.className,this.metricName,this.max,"Frequency","timers",null);return e.getMetricNode=function(e,t,n){return n.timers[e+"."+t]?n.timers[e+"."+t]:null},e.eventType=o,e},l.getTimerStatsDivId=function(){return"#"+this.divId+" div.timerGraph div.timerStatsGraph"},l.getTimerHistogramDivId=function(){return"#"+this.divId+" div.timerGraph div.timerHistogram"},l.durationMax=a,l.isNested=s,l}function p(e){var t=l("#"+e.divId),n="<div class='counter counterGraph'><h3>"+e.title+"</h3><div class='progress'><div class='progress-bar' style='width: 0%;'></div></div></div>";t.html(n)}function h(e,t){var n=e.getMetricNode(e.className,e.metricName,t),i=o(n.count,e.getMax(t));l("#"+e.divId+" div.progress div.progress-bar").css("width",i+"%"),l("#"+e.divId+" div.progress div.progress-bar").html(n.count+"/"+e.getMax(t))}function g(e){var t=l("#"+e.divId),n='<div class="metricsWatcher timer timerGraph'+(e.isNested?" nested":"")+'">  <div class="panel-group" id="accordion-'+e.divId+'">    <div class="panel panel-default">      <div class="panel-heading">        <h4 class="panel-title">'+(e.isNested?"<a>":'<a data-toggle="collapse" data-parent="accordion-'+e.divId+'" href="#'+e.divId+'Collapse">')+e.title+'</a>        </h4>      </div>      <div id="'+e.divId+'Collapse" class="panel-collapse'+(e.isNested?"":" collapse in")+'">        <div class="panel-body">          <div class="meterGraph col-md-12 col-lg-4"></div>          <div class="timerStatsGraph col-md-12 col-lg-4"></div>          <div class="timerHistogram col-md-12 col-lg-4"></div>        </div>      </div>    </div>  </div></div>';t.html(n),b(e.getMeterInfo()),function(e){var t="<h3>Duration</h3><div class='timeUnit'></div><div class='metricGraph'><table class='progressTable'>"+v("Min","min")+v("Mean","mean")+v("Max","max")+v("Std&nbsp;Dev","stddev")+"</table></div>";l(e.getTimerStatsDivId()).html(t)}(e),function(e){var t="<h3> "+(e.isNested?"Histogram":e.getSubTitle())+"</h3><div>Percentiles</div><div class='metricGraph'><table class='progressTable'>"+v("99.9%","p999")+v("99%","p99")+v("98%","p98")+v("95%","p95")+v("75%","p75")+v("50%","p50")+"</table></div>";l(e.getTimerHistogramDivId()).html(t)}(e)}function m(e,t){y(e.getMeterInfo(),t),function(e,t){var n=e.getMetricNode(e.className,e.metricName,t);if(!n)return;l(e.getTimerStatsDivId()+" div.timeUnit").html(function(e){return e.charAt(0).toUpperCase()+e.slice(1)}(n.duration_units)),i(e.getTimerStatsDivId(),n,"min",e.durationMax),i(e.getTimerStatsDivId(),n,"mean",e.durationMax),i(e.getTimerStatsDivId(),n,"max",e.durationMax),i(e.getTimerStatsDivId(),n,"stddev",e.durationMax)}(e,t),function(e,t){var n=e.getMetricNode(e.className,e.metricName,t);if(!n)return;i(e.getTimerHistogramDivId(),n,"p999",e.durationMax),i(e.getTimerHistogramDivId(),n,"p99",e.durationMax),i(e.getTimerHistogramDivId(),n,"p98",e.durationMax),i(e.getTimerHistogramDivId(),n,"p95",e.durationMax),i(e.getTimerHistogramDivId(),n,"p75",e.durationMax),i(e.getTimerHistogramDivId(),n,"p50",e.durationMax)}(e,t)}function i(e,t,n,i){l(e+" tr."+n+" td.progressValue").html(s(t[n])),l(e+" tr."+n+" td.progressBar div.progress div.progress-bar").css("width",o(t[n],i)+"%")}function f(e,t){var n=e.getMetricNode(e.className,e.metricName,t);l("#"+e.divId+" td.countVal").html(s(n.count,0)),l("#"+e.divId+" td.minVal").html(s(n.min,0)),l("#"+e.divId+" td.maxVal").html(s(n.max,0)),l("#"+e.divId+" td.meanVal").html(s(n.mean,0)),r(e,n,"p999","p999",e.max),r(e,n,"p99","p99",e.max),r(e,n,"p98","p98",e.max),r(e,n,"p95","p95",e.max),r(e,n,"p75","p75",e.max),r(e,n,"p50","p50",e.max)}function b(e){var t=l("#"+e.divId),n="<div class='metric metricGraph'><h3>"+e.title+"</h3><div class='counterVal'></div><table class='progressTable'>"+v("1&nbsp;min","onemin")+v("5&nbsp;min","fivemin")+v("15&nbsp;min","fifteenmin")+v("Mean","mean")+"</table></div>";t.html(n)}function v(e,t){return"<tr class='"+t+"'><td class='progressLabel'>"+e+"</td><td class='progressBar'><div class='progress'><div class='progress-bar' style='width: 0%;'></div></div></td><td class='progressValue'>0</td></tr>"}function y(e,t){var n=e.getMetricNode(e.className,e.metricName,t);n&&function(e,t){l("#"+e.divId+" div.counterVal").html(t.rate_units+" ("+t.count+" total)");var n=Math.max(t.mean_rate,t.m1_rate,t.m5_rate,t.m15_rate);r(e,t,"mean_rate","mean",n),r(e,t,"m1_rate","onemin",n),r(e,t,"m5_rate","fivemin",n),r(e,t,"m15_rate","fifteenmin",n)}(e,n)}function r(e,t,n,i){r(e,t,n,i,e.max)}function r(e,t,n,i,r){l("#"+e.divId+" tr."+i+" td.progressValue").html(s(t[n])),l("#"+e.divId+" tr."+i+" td.progressBar div.progress div.progress-bar").css("width",o(t[n],r)+"%")}function w(e){var t=l("#"+e.divId),n="<div class='metric metricGraph'><h3>"+e.title+"</h3><div class='gaugeDataVal'></div></div>";t.html(n)}function C(e,t){var n=e.getMetricNode(e.className,e.metricName,t);n&&function(e,t){l("#"+e.divId+" div.gaugeDataVal").html(t.value)}(e,n)}function k(e){var t=l("#"+e.divId),n="<div class='metricsWatcher cache cacheGraph col-md-12'><fieldset><legend><div class='heading1'>"+e.title+"</div></legend><div class='cacheContainer col-md-12'>\t<div class='row'>\t\t<div class='col-md-3'><div id='"+e.divId+"Statistics'></div></div>\t\t<div class='col-md-9'>\t\t\t<div id='"+e.divId+"gettimer'></div>\t\t\t<div id='"+e.divId+"puttimer'></div>\t\t</div>\t</div></div></fieldset></div>";t.html(n);for(var i=e.components.gauges.length,r=0;r<i;r++)w(e.components.gauges[r]);g(e.getTimer),g(e.putTimer),function(e,t,n){var i="<div class='metricsWatcher metric metricGraph nested'><fieldset><legend><div class='heading1'>"+t+"</div></legend><div class='gaugeTableContainer'><table class='gaugeTable'></table></div></fieldset></div>";l("#"+e).html(i)}(e.divId+"Statistics","Statistics",e.components.gauges)}function S(e,t){for(var n=e.components.gauges.length,i=0;i<n;i++){var r=e.components.gauges[i],o=r.getMetricNode(e.className,r.metricName,t);if(o)l("#"+r.divId+" div.metricGraph div.gaugeDataVal").html(o.value)}m(e.getTimer,t),m(e.putTimer,t),function(e,t,n){for(var i=l("#"+e+" table"),r="",o=t.length,a=0;a<o;a++){var s=t[a];r+="<tr><td><h5>"+s.title+"</h5></td><td><h4>"+s.getMetricNode(s.className,s.metricName,n).value+"</h4></td></tr>"}i.html(r)}(e.divId+"Statistics",e.components.gauges,t)}function x(e){var t=l("#"+e.divId),n="<div class='metricsWatcher web metricGraph col-md-12'><fieldset><legend><div class='heading1 btn-link' data-toggle='collapse' data-target='#"+e.divId+"Collapse'>"+e.title+"</div></legend><div class='webContainer col-md-12' id='"+e.divId+"Collapse'>\t<div id='"+e.divId+"Web'></div><table><tr><td colspan='4' class='requestsGraph col-md-12'></td></tr><tr><td class='activeRequestsGraph col-md-3'></td><td class='responseCodesOkGraph col-md-3'></td><td class='responseCodesCreatedGraph col-md-3'></td><td class='responseCodesOtherGraph col-md-3'></td></tr><tr><td class='responseCodesBadRequestGraph col-md-3'></td><td class='responseCodesNoContentGraph col-md-3'></td><td class='responseCodesNotFoundGraph col-md-3'></td><td class='responseCodesServerErrorGraph col-md-3'></td></tr></table></div></fieldset></div>";t.html(n),g(e.components.requestsInfo),p(e.components.activeRequestsInfo);for(var i=e.components.meters.length,r=0;r<i;r++)b(e.components.meters[r])}function T(e,t){m(e.components.requestsInfo,t),h(e.components.activeRequestsInfo,t);for(var n=e.components.meters.length,i=0;i<n;i++)y(e.components.meters[i],t)}function I(e){var t=l("#"+e.divId),n="<div class='metricsWatcher log4j metricGraph col-md-12'><fieldset><legend><div class='heading1 btn-link' data-toggle='collapse' data-target='#"+e.divId+"Collapse'>"+e.title+"</div></legend><div class='log4jContainer col-md-12' id='"+e.divId+"Collapse'>\t<div id='"+e.divId+"Log4j'></div><table><tr><td colspan='4' class='col-md-12'></td></tr><tr><td class='all col-md-3'></td><td class='fatal col-md-3'></td><td class='error col-md-3'></td><td class='warn col-md-3'></td></tr><tr><td class='info col-md-3'></td><td class='debug col-md-3'></td><td class='trace col-md-3'></td></tr></table></div></fieldset></div>";t.html(n);for(var i=e.components.meters.length,r=0;r<i;r++)b(e.components.meters[r])}function j(e,t){for(var n=e.components.meters.length,i=0;i<n;i++)y(e.components.meters[i],t)}}(window.metricsWatcher=window.metricsWatcher||{},jQuery);var dialogModule=angular.module("hawtio-compat.dialog",["hawtio-compat.transition"]);function escapeJSDiff(e){var t=e;return t=(t=(t=(t=t.replace(/&/g,"&amp;")).replace(/</g,"&lt;")).replace(/>/g,"&gt;")).replace(/"/g,"&quot;")}function diffString(e,t){e=e.replace(/\s+$/,""),t=t.replace(/\s+$/,"");var n=diff(""==e?[]:e.split(/\s+/),""==t?[]:t.split(/\s+/)),i="",r=e.match(/\s+/g);null==r?r=["\n"]:r.push("\n");var o=t.match(/\s+/g);if(null==o?o=["\n"]:o.push("\n"),0==n.n.length)for(var a=0;a<n.o.length;a++)i+="<del>"+escapeJSDiff(n.o[a])+r[a]+"</del>";else{if(null==n.n[0].text)for(t=0;t<n.o.length&&null==n.o[t].text;t++)i+="<del>"+escapeJSDiff(n.o[t])+r[t]+"</del>";for(a=0;a<n.n.length;a++)if(null==n.n[a].text)i+="<ins>"+escapeJSDiff(n.n[a])+o[a]+"</ins>";else{var s="";for(t=n.n[a].row+1;t<n.o.length&&null==n.o[t].text;t++)s+="<del>"+escapeJSDiff(n.o[t])+r[t]+"</del>";i+=" "+n.n[a].text+o[a]+s}}return i}function randomColor(){return"rgb("+100*Math.random()+"%, "+100*Math.random()+"%, "+100*Math.random()+"%)"}function diffString2(e,t){e=e.replace(/\s+$/,""),t=t.replace(/\s+$/,"");var n=diff(""==e?[]:e.split(/\s+/),""==t?[]:t.split(/\s+/)),i=e.match(/\s+/g);null==i?i=["\n"]:i.push("\n");var r=t.match(/\s+/g);null==r?r=["\n"]:r.push("\n");for(var o="",a=new Array,s=0;s<n.o.length;s++)a[s]=randomColor(),null!=n.o[s].text?o+='<span style="background-color: '+a[s]+'">'+escapeJSDiff(n.o[s].text)+i[s]+"</span>":o+="<del>"+escapeJSDiff(n.o[s])+i[s]+"</del>";var l="";for(s=0;s<n.n.length;s++)null!=n.n[s].text?l+='<span style="background-color: '+a[n.n[s].row]+'">'+escapeJSDiff(n.n[s].text)+r[s]+"</span>":l+="<ins>"+escapeJSDiff(n.n[s])+r[s]+"</ins>";return{o:o,n:l}}function diff(e,t){for(var n=new Object,i=new Object,r=0;r<t.length;r++)null==n[t[r]]&&(n[t[r]]={rows:new Array,o:null}),n[t[r]].rows.push(r);for(r=0;r<e.length;r++)null==i[e[r]]&&(i[e[r]]={rows:new Array,n:null}),i[e[r]].rows.push(r);for(var r in n)1==n[r].rows.length&&void 0!==i[r]&&1==i[r].rows.length&&(t[n[r].rows[0]]={text:t[n[r].rows[0]],row:i[r].rows[0]},e[i[r].rows[0]]={text:e[i[r].rows[0]],row:n[r].rows[0]});for(r=0;r<t.length-1;r++)null!=t[r].text&&null==t[r+1].text&&t[r].row+1<e.length&&null==e[t[r].row+1].text&&t[r+1]==e[t[r].row+1]&&(t[r+1]={text:t[r+1],row:t[r].row+1},e[t[r].row+1]={text:e[t[r].row+1],row:r+1});for(r=t.length-1;0<r;r--)null!=t[r].text&&null==t[r-1].text&&0<t[r].row&&null==e[t[r].row-1].text&&t[r-1]==e[t[r].row-1]&&(t[r-1]={text:t[r-1],row:t[r].row-1},e[t[r].row-1]={text:e[t[r].row-1],row:r-1});return{o:e,n:t}}dialogModule.controller("MessageBoxController",["$scope","dialog","model",function(e,t,n){e.title=n.title,e.message=n.message,e.buttons=n.buttons,e.close=function(e){t.close(e)}}]),dialogModule.provider("$dialog",function(){var h={backdrop:!0,dialogClass:"modal",backdropClass:"modal-backdrop",transitionClass:"fade",triggerClass:"in",resolve:{},backdropFade:!1,dialogFade:!1,keyboard:!0,backdropClick:!0},g={},n={value:0};this.options=function(e){g=e},this.$get=["$http","$document","$compile","$rootScope","$controller","$templateCache","$q","$transition","$injector",function(r,e,o,a,s,l,c,d,u){var t=e.find("body");function i(e){var t=angular.element("<div>");return t.addClass(e),t}function p(e){var t=this,n=this.options=angular.extend({},h,g,e);this._open=!1,this.backdropEl=i(n.backdropClass),n.backdropFade&&(this.backdropEl.addClass(n.transitionClass),this.backdropEl.removeClass(n.triggerClass)),this.modalEl=i(n.dialogClass),n.dialogFade&&(this.modalEl.addClass(n.transitionClass),this.modalEl.removeClass(n.triggerClass)),this.handledEscapeKey=function(e){27===e.which&&(t.close(),e.preventDefault(),t.$scope.$apply())},this.handleBackDropClick=function(e){t.close(),e.preventDefault(),t.$scope.$apply()},this.handleLocationChange=function(){t.close()}}return p.prototype.isOpen=function(){return this._open},p.prototype.open=function(e,t){var i=this,n=this.options;if(e&&(n.templateUrl=e),t&&(n.controller=t),!n.template&&!n.templateUrl)throw new Error("Dialog.open expected template or templateUrl, neither found. Use options or open method to specify them.");return this._loadResolves().then(function(e){var t=e.$scope=i.$scope=e.$scope?e.$scope:a.$new();if(i.modalEl.html(e.$template),i.options.controller){var n=s(i.options.controller,e);i.modalEl.children().data("ngControllerController",n)}o(i.modalEl)(t),i._addElementsToDom(),setTimeout(function(){i.options.dialogFade&&i.modalEl.addClass(i.options.triggerClass),i.options.backdropFade&&i.backdropEl.addClass(i.options.triggerClass)}),i._bindEvents()}),this.deferred=c.defer(),this.deferred.promise},p.prototype.close=function(e){var t=this,n=this._getFadingElements();if(0<n.length)for(var i=n.length-1;0<=i;i--)d(n[i],r).then(o);else this._onCloseComplete(e);function r(e){e.removeClass(t.options.triggerClass)}function o(){t._open&&t._onCloseComplete(e)}},p.prototype._getFadingElements=function(){var e=[];return this.options.dialogFade&&e.push(this.modalEl),this.options.backdropFade&&e.push(this.backdropEl),e},p.prototype._bindEvents=function(){this.options.keyboard&&t.bind("keydown",this.handledEscapeKey),this.options.backdrop&&this.options.backdropClick&&this.backdropEl.bind("click",this.handleBackDropClick)},p.prototype._unbindEvents=function(){this.options.keyboard&&t.unbind("keydown",this.handledEscapeKey),this.options.backdrop&&this.options.backdropClick&&this.backdropEl.unbind("click",this.handleBackDropClick)},p.prototype._onCloseComplete=function(e){this._removeElementsFromDom(),this._unbindEvents(),this.deferred.resolve(e)},p.prototype._addElementsToDom=function(){t.append(this.modalEl),this.options.backdrop&&(0===n.value&&t.append(this.backdropEl),n.value++),this._open=!0},p.prototype._removeElementsFromDom=function(){this.modalEl.remove(),this.options.backdrop&&(n.value--,0===n.value&&this.backdropEl.remove()),this._open=!1},p.prototype._loadResolves=function(){var e,n=[],i=[],t=this;return this.options.template?e=c.when(this.options.template):this.options.templateUrl&&(e=r.get(this.options.templateUrl,{cache:l}).then(function(e){return e.data})),angular.forEach(this.options.resolve||[],function(e,t){i.push(t),n.push(angular.isString(e)?u.get(e):u.invoke(e))}),i.push("$template"),n.push(e),c.all(n).then(function(e){var n={};return angular.forEach(e,function(e,t){n[i[t]]=e}),n.dialog=t,n})},{dialog:function(e){return new p(e)},messageBox:function(e,t,n){return new p({templateUrl:"plugins/components/ui-bootstrap/html/message.html",controller:"MessageBoxController",resolve:{model:function(){return{title:e,message:t,buttons:n}}}})}}}]}),angular.module("hawtio-compat.modal",["hawtio-compat.dialog"]).directive("modal",["$parse","$dialog",function(s,l){return{restrict:"EA",terminal:!0,link:function(e,t,n){var i,r=angular.extend({},e.$eval(n.uiOptions||n.bsOptions||n.options)),o=n.modal||n.show;r=angular.extend(r,{template:t.html(),resolve:{$scope:function(){return e}}});var a=l.dialog(r);t.remove(),i=n.close?function(){s(n.close)(e)}:function(){angular.isFunction(s(o).assign)&&s(o).assign(e,!1)},e.$watch(o,function(e,t){e?a.open().then(function(){i()}):a.isOpen()&&a.close()})}}}]),function(e,u,t){"use strict";var n={tabbable:function(){return{restrict:"C",compile:function(e){var t=u.element('<ul class="nav nav-tabs"></ul>'),n=u.element('<div class="tab-content"></div>');n.append(e.contents()),e.append(t).append(n)},controller:["$scope","$element",function(a,e){var s,l=e.contents().eq(0),c=e.controller("ngModel")||{},d=[];c.$render=function(){var e=this.$viewValue;if((s?s.value!=e:e)&&(s&&(s.paneElement.removeClass("active"),s.tabElement.removeClass("active"),s=null),e)){for(var t=0,n=d.length;t<n;t++)if(e==d[t].value){s=d[t];break}s&&(s.paneElement.addClass("active"),s.tabElement.addClass("active"))}},this.addPane=function(e,t){var n=u.element("<li><a href></a></li>"),i=n.find("a"),r={paneElement:e,paneAttrs:t,tabElement:n};function o(){r.title=t.title,r.value=t.value||t.title,c.$setViewValue||c.$viewValue&&r!=s||(c.$viewValue=r.value),c.$render()}return d.push(r),t.$observe("value",o)(),t.$observe("title",function(){o(),i.text(r.title)})(),l.append(n),n.bind("click",function(e){e.preventDefault(),e.stopPropagation(),c.$setViewValue?a.$apply(function(){c.$setViewValue(r.value),c.$render()}):(c.$viewValue=r.value,c.$render())}),function(){r.tabElement.remove();for(var e=0,t=d.length;e<t;e++)r==d[e]&&d.splice(e,1)}}}]}},tabPane:function(){return{require:"?^tabbable",restrict:"C",link:function(e,t,n,i){i&&t.bind("$remove",i.addPane(t,n))}}}},i="hawtio-tabbable";u.module(i,[]).directive(n),hawtioPluginLoader.addModule(i)}(window,window.angular),angular.module("hawtio-compat.transition",[]).factory("$transition",["$q","$timeout","$rootScope",function(a,s,l){var c=function(t,e,n){n=n||{};var i=a.defer(),r=c[n.animation?"animationEndEventName":"transitionEndEventName"],o=function(e){l.$apply(function(){t.unbind(r,o),i.resolve(t)})};return r&&t.bind(r,o),s(function(){angular.isString(e)?t.addClass(e):angular.isFunction(e)?e(t):angular.isObject(e)&&t.css(e),r||i.resolve(t)}),i.promise.cancel=function(){r&&t.unbind(r,o),i.reject("Transition cancelled")},i.promise},n=document.createElement("trans");function e(e){for(var t in e)if(void 0!==n.style[t])return e[t]}return c.transitionEndEventName=e({WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"}),c.animationEndEventName=e({WebkitTransition:"webkitAnimationEnd",MozTransition:"animationend",OTransition:"oAnimationEnd",transition:"animationend"}),c}]);var HawtioTree,Pf,Quartz,SpringBoot,Integration,ActiveMQ,Camel,DataTable,CodeEditor,HawtioEditor,Forms,HawtioForms,Toastr,UI,UIBootstrap,Diagnostics,Core,Jmx,JVM,Karaf,Logs,Osgi,RBAC,Runtime,Login,ConsoleAssembly;__extends=this&&this.__extends||function(){var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};return function(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}}(),__spreadArrays=this&&this.__spreadArrays||function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var i=Array(e),r=0;for(t=0;t<n;t++)for(var o=arguments[t],a=0,s=o.length;a<s;a++,r++)i[r]=o[a];return i};!function(e){function t(e){e.addProductInfo("Hawtio Integration","4.16.5")}t.$inject=["aboutService"],e.configureAboutPage=t}(Integration||(Integration={})),function(s){function o(t,e,n){if(!t)return null;var i=null;if(angular.forEach(e,function(e){t.text===e&&(i=t)}),null===i)if(n){var r=t.parent;r&&(i=o(r,e,n))}else angular.forEach(t.children,function(t){angular.forEach(e,function(e){t.text===e&&(i=t)})});return i}s.pluginName="hawtio-integration-activemq",s.log=Logger.get(s.pluginName),s.jmxDomain="org.apache.activemq",s.retrieveQueueNames=function(e,t){var n=e.selection,i=n?o(n,["Queues","Queue"],t):null;return i?i.children.map(function(e){return e.text}):[]},s.retrieveTopicNames=function(e,t){var n=e.selection,i=n?o(n,["Topics","Topic"],t):null;return i?i.children.map(function(e){return e.text}):[]},s.selectCurrentMessage=function(e,t,n){"selectAll"in n.gridOptions?n.gridOptions.selectAll(!1):n.gridOptions.selectedItems.length=0;var i=Core.pathGet(e,["rowIndex"])||Core.pathGet(e,["index"]),r=Core.pathGet(e,["entity",t]);n.rowIndex=i;var o=n.gridOptions.selectedItems;o.splice(0,o.length),0<=i&&i<n.messages.length?(n.row=_.find(n.messages,function(e){return e[t]===r}),n.row&&o.push(n.row)):n.row=null},s.decorate=function(n,i){void 0===i&&(i=null),n.selectRowIndex=function(e){n.rowIndex=e;var t=n.gridOptions.selectedItems;t.splice(0,t.length),0<=e&&e<n.messages.length?(n.row=n.messages[e],n.row&&t.push(n.row)):n.row=null,i&&i.apply()},n.$watch("showMessageDetails",function(){n.showMessageDetails||(n.row=null,n.gridOptions.selectedItems.splice(0,n.gridOptions.selectedItems.length))})},s.getBrokerMBean=function(e,t,n){var i=null,r=e.selection;if(r&&function(e){if(e.selectionHasDomainAndType(s.jmxDomain,"Broker")){var t=Core.pathGet(e,["selection"]),n=Core.pathGet(e,["selection","parent"]);return!(n&&(n.ancestorHasType("Broker")||t.ancestorHasType("Broker")))}return!1}(e)&&r.objectName)return r.objectName;if(r){var o=r.folderNames,a=r?r.parent:null;a&&t&&o&&1<o.length&&(!(i=a.objectName)&&a&&(i=a.parent.objectName),i||(i=o[0]+":BrokerName="+o[1]+",Type=Broker"))}return i}}(ActiveMQ||(ActiveMQ={})),function(a){var e=function(){function e(e,t,n,i,r){this.$scope=e,this.workspace=t,this.$location=n,this.jolokia=i,this.localStorage=r,this.amqJmxDomain=this.localStorage.activemqJmxDomain||"org.apache.activemq",this.message="",this.destinationName="",this.destinationType="Queue",this.createDialog=!1,this.deleteDialog=!1,this.purgeDialog=!1}return e.$inject=["$scope","workspace","$location","jolokia","localStorage"],e.prototype.operationSuccess=function(){this.destinationName="",this.workspace.operationCounter+=1,Core.notification("success",this.message),this.workspace.loadTree(),Core.$apply(this.$scope)},e.prototype.deleteSuccess=function(){this.workspace.removeAndSelectParentNode(),this.workspace.operationCounter+=1,Core.notification("success",this.message),this.$location.path("/jmx/attributes").search({"main-tab":"activemq","sub-tab":"activemq-attributes"}),this.workspace.loadTree(),Core.$apply(this.$scope)},e.prototype.validateDestinationName=function(e){return-1===e.indexOf(":")},e.prototype.isQueue=function(e){return"Queue"===e},e.prototype.checkIfDestinationExists=function(t,e){var n,i=!1;return n=this.isQueue(e)?a.retrieveQueueNames(this.workspace,!1):a.retrieveTopicNames(this.workspace,!1),angular.forEach(n,function(e){t===e&&(i=!0)}),i},e.prototype.validateAndCreateDestination=function(e,t){this.validateDestinationName(e)?this.checkIfDestinationExists(e,t)?Core.notification("danger","The "+this.uncapitalisedDestinationType()+' "'+e+'" already exists'):this.createDestination(e,t):this.createDialog=!0},e.prototype.createDestination=function(e,t){var n=this,i=a.getBrokerMBean(this.workspace,this.jolokia,this.amqJmxDomain);if(e=Core.escapeHtml(e),i){var r=void 0;this.isQueue(t)?(r="addQueue(java.lang.String)",this.message='Created queue "'+e+'"'):(r="addTopic(java.lang.String)",this.message='Created topic "'+e+'"'),i?this.jolokia.execute(i,r,e,Core.onSuccess(function(){return n.operationSuccess()})):Core.notification("danger","Could not find the Broker MBean!")}},e.prototype.restoreRealDestinationName=function(e){return-1===e.indexOf("_")?e:this.jolokia.getAttribute(this.workspace.getSelectedMBeanName(),"Name",Core.onSuccess(null))},e.prototype.deleteDestination=function(){var e=this,t=a.getBrokerMBean(this.workspace,this.jolokia,this.amqJmxDomain),n=this.workspace.selection,i=n.entries;if(t&&n&&this.jolokia&&i){n.domain;var r=i.Destination||i.destinationName||n.text,o=void 0;this.isQueue(i.Type||i.destinationType)?(o="removeQueue(java.lang.String)",this.message='Deleted queue "'+r+'"'):(o="removeTopic(java.lang.String)",this.message='Deleted topic "'+r+'"'),r=this.restoreRealDestinationName(r),this.jolokia.execute(t,o,r,Core.onSuccess(function(){return e.deleteSuccess()}))}},e.prototype.purgeDestination=function(){var e=this,t=this.workspace.getSelectedMBeanName(),n=this.workspace.selection,i=n.entries;if(t&&n&&this.jolokia&&i){var r=i.Destination||i.destinationName||n.text;this.message='Purged queue "'+r+'"',r=_.unescape(r),this.jolokia.execute(t,"purge()",Core.onSuccess(function(){return e.operationSuccess()}))}},e.prototype.selectedName=function(){var e=this.workspace.selection;return e?_.unescape(e.text):null},e.prototype.uncapitalisedDestinationType=function(){return this.destinationType.charAt(0).toLowerCase()+this.destinationType.substring(1)},e}();a.DestinationController=e}(ActiveMQ||(ActiveMQ={})),function(e){e.createDestinationComponent={controller:e.DestinationController,templateUrl:"plugins/activemq/html/destination/create.html"},e.deleteQueueComponent={controller:e.DestinationController,templateUrl:"plugins/activemq/html/destination/deleteQueue.html"},e.deleteTopicComponent={controller:e.DestinationController,templateUrl:"plugins/activemq/html/destination/deleteTopic.html"}}(ActiveMQ||(ActiveMQ={})),function(e){e.destinationModule=angular.module("hawtio-activemq-destination",[]).component("createDestination",e.createDestinationComponent).component("deleteQueue",e.deleteQueueComponent).component("deleteTopic",e.deleteTopicComponent).name}(ActiveMQ||(ActiveMQ={})),function(o){var e=function(){function e(e,t,n,i){this.$scope=e,this.$location=t,this.workspace=n,(this.$element=i).addClass("tree-nav-sidebar-content")}return e.$inject=["$scope","$location","workspace","$element"],e.prototype.$onInit=function(){var e=this;this.$scope.$on("$destroy",function(){return e.removeTree()}),this.$scope.$on("$routeChangeStart",function(){return Jmx.updateTreeSelectionFromURL(e.$location,$(o.treeElementId))}),this.$scope.$on("jmxTreeUpdated",function(){return e.populateTree()}),this.populateTree()},e.prototype.updateSelectionFromURL=function(){Jmx.updateTreeSelectionFromURLAndAutoSelect(this.$location,$(o.treeElementId),function(e){if(null==e.children)return null;var t=e.children[0];return t&&"Queue"===t.text?t:null},!0)},e.prototype.populateTree=function(){var a=this,e=[],t=this.workspace.tree;if(t){var n=t.get("org.apache.activemq");if(n&&(e=n.children),e.length){var i=e[0];if(!i.typeName&&i.children.length<4){var r=[];angular.forEach(e,function(e){r=r.concat(e.children)}),e=r}}e.forEach(function(e){var t=e.children;if(t){var n=_.find(t,function(e){return"Topic"===e.text});if(n){var i="ActiveMQ-allTopics-"+e.text,r=_.clone(n.children);if(a.workspace.mapData[i]=r,Core.parseBooleanValue(localStorage.activemqFilterAdvisoryTopics)){if(n&&n.children){var o=_.filter(n.children,function(e){return!_.startsWith(e.text,"ActiveMQ.Advisory")});n.children=o}}else r&&(n.children=r)}}}),this.removeTree(),Jmx.enableTree(this.$scope,this.$location,this.workspace,$(o.treeElementId),e),this.updateSelectionFromURL()}},e.prototype.removeTree=function(){var e=$(o.treeElementId).treeview(!0);if(e.clearSearch){e.clearSearch();var t=function(e){delete e.$el,e.nodes&&e.nodes.forEach(t)};t(this.workspace.tree),e.remove()}},e}();o.TreeController=e}(ActiveMQ||(ActiveMQ={})),(HawtioTree||(HawtioTree={})).getMaxTreeLevel=function(e){return e.getNodes().map(function(e){return e.level}).reduce(function(e,t){return Math.max(e,t)})},function(t){var e=function(){function e(e,t){this.$scope=e,this.$element=t,this.filter="",this.result=[],t.addClass("tree-nav-sidebar-header")}return e.$inject=["$scope","$element"],e.prototype.$onInit=function(){var n=this;this.$scope.$watch(angular.bind(this,function(){return n.filter}),function(e,t){e!==t&&n.search(e)})},e.prototype.search=function(e){var i=this;_.debounce(function(e){var t,n=i.tree().search(e,{ignoreCase:!0,exactMatch:!1,revealResults:!0});i.result.length=0,(t=i.result).push.apply(t,n),Core.$apply(i.$scope)},300,{leading:!1,trailing:!0})(e)},e.prototype.tree=function(){return $(t.treeElementId).treeview(!0)},e.prototype.expandAll=function(){return this.tree().expandNode(this.tree().getNodes(),{levels:HawtioTree.getMaxTreeLevel(this.tree()),silent:!0})},e.prototype.contractAll=function(){return this.tree().collapseNode(this.tree().getNodes(),{ignoreChildren:!0,silent:!0})},e}();t.TreeHeaderController=e}(ActiveMQ||(ActiveMQ={})),function(e){e.treeHeaderComponent={templateUrl:"plugins/activemq/html/tree/header.html",controller:e.TreeHeaderController},e.treeComponent={templateUrl:"plugins/activemq/html/tree/content.html",controller:e.TreeController}}(ActiveMQ||(ActiveMQ={})),function(e){e.treeModule=angular.module("hawtio-activemq-tree",[]).component("activemqTreeHeader",e.treeHeaderComponent).component("activemqTree",e.treeComponent).name,e.treeElementId="#activemqtree"}(ActiveMQ||(ActiveMQ={})),(ActiveMQ||(ActiveMQ={})).activeMQComponent={template:'\n      <div class="tree-nav-layout">\n        <div class="sidebar-pf sidebar-pf-left" resizable r-directions="[\'right\']">\n          <activemq-tree-header></activemq-tree-header>\n          <activemq-tree></activemq-tree>\n        </div>\n        <div class="tree-nav-main">\n          <div>\n            <jmx-header></jmx-header>\n          </div>\n          <activemq-navigation></activemq-navigation>\n          <div class="contents" ng-view></div>\n        </div>\n      </div>\n    '},function(n){var t={attributes:{title:"Attributes",route:"/activemq/attributes"},operations:{title:"Operations",route:"/activemq/operations"},chart:{title:"Chart",route:"/activemq/charts"},browse:{title:"Browse",route:"/activemq/browseQueue"},sendMessage:{title:"Send",route:"/activemq/sendMessage"},durableSubscribers:{title:"Durable Subscribers",route:"/activemq/durableSubscribers"},jobs:{title:"Jobs",route:"/activemq/jobs"},createDestination:{title:"Create",route:"/activemq/createDestination"},deleteTopic:{title:"Delete",route:"/activemq/deleteTopic"},deleteQueue:{title:"Delete",route:"/activemq/deleteQueue"},queues:{title:"Queues",route:"/activemq/queues"},topics:{title:"Topics",route:"/activemq/topics"}},e=function(){function e(e){this.workspace=e}return e.$inject=["workspace"],e.prototype.getTabs=function(){var e=[];return 0<Object.keys(t).map(function(e){return t[e].route}).filter(function(e){return _.startsWith(e,"/activemq")}).length&&(e.push(new Nav.HawtioTab(t.attributes.title,t.attributes.route)),e.push(new Nav.HawtioTab(t.operations.title,t.operations.route)),e.push(new Nav.HawtioTab(t.chart.title,t.chart.route)),this.shouldShowBrowseTab()&&e.push(new Nav.HawtioTab(t.browse.title,t.browse.route)),this.shouldShowSendTab()&&e.push(new Nav.HawtioTab(t.sendMessage.title,t.sendMessage.route)),this.shouldShowDurableSubscribersTab()&&e.push(new Nav.HawtioTab(t.durableSubscribers.title,t.durableSubscribers.route)),this.shouldShowJobsTab()&&e.push(new Nav.HawtioTab(t.jobs.title,t.jobs.route)),this.shouldShowCreateTab()&&e.push(new Nav.HawtioTab(t.createDestination.title,t.createDestination.route)),this.shouldShowDeleteTopicTab()&&e.push(new Nav.HawtioTab(t.deleteTopic.title,t.deleteTopic.route)),this.shouldShowDeleteQueueTab()&&e.push(new Nav.HawtioTab(t.deleteQueue.title,t.deleteQueue.route)),this.shouldShowQueuesTab()&&e.push(new Nav.HawtioTab(t.queues.title,t.queues.route)),this.shouldShowTopicsTab()&&e.push(new Nav.HawtioTab(t.topics.title,t.topics.route))),e},e.prototype.shouldShowBrowseTab=function(){return this.isQueue()&&this.workspace.hasInvokeRights(this.workspace.selection,"browse()")},e.prototype.shouldShowSendTab=function(){return(this.isQueue()||this.isTopic())&&this.workspace.hasInvokeRights(this.workspace.selection,"sendTextMessage(java.util.Map,java.lang.String,java.lang.String,java.lang.String)")},e.prototype.shouldShowDurableSubscribersTab=function(){return this.isBroker()},e.prototype.shouldShowJobsTab=function(){return this.isJobScheduler()},e.prototype.shouldShowCreateTab=function(){return this.isBroker()&&this.workspace.hasInvokeRights(this.getBroker(),"addQueue","addTopic")},e.prototype.shouldShowDeleteTopicTab=function(){return this.isTopic()&&this.workspace.hasInvokeRights(this.getBroker(),"removeTopic")},e.prototype.shouldShowDeleteQueueTab=function(){return this.isQueue()&&this.workspace.hasInvokeRights(this.getBroker(),"removeQueue")},e.prototype.shouldShowQueuesTab=function(){return this.isBroker()},e.prototype.shouldShowTopicsTab=function(){return this.isBroker()},e.prototype.isQueue=function(){return this.workspace.hasDomainAndProperties(n.jmxDomain,{destinationType:"Queue"},4)||this.workspace.selectionHasDomainAndType(n.jmxDomain,"Queue")},e.prototype.isTopic=function(){return this.workspace.hasDomainAndProperties(n.jmxDomain,{destinationType:"Topic"},4)||this.workspace.selectionHasDomainAndType(n.jmxDomain,"Topic")},e.prototype.isQueuesFolder=function(){return this.workspace.selectionHasDomainAndLastFolderName(n.jmxDomain,"Queue")},e.prototype.isTopicsFolder=function(){return this.workspace.selectionHasDomainAndLastFolderName(n.jmxDomain,"Topic")},e.prototype.isJobScheduler=function(){return this.workspace.hasDomainAndProperties(n.jmxDomain,{service:"JobScheduler"},4)},e.prototype.isBroker=function(){if(this.workspace.selectionHasDomainAndType(n.jmxDomain,"Broker")){var e=Core.pathGet(this.workspace,["selection"]),t=Core.pathGet(this.workspace,["selection","parent"]);return!(t&&(t.ancestorHasType("Broker")||e.ancestorHasType("Broker")))}return!1},e.prototype.getBroker=function(){var e=null,t=this.workspace.selection;return t&&(e=t.findAncestor(function(e){var t=e.entries;return!!t&&("type"in t&&"Broker"===t.type&&"brokerName"in t&&!("destinationName"in t)&&!("destinationType"in t))})),e},e}();n.ActiveMQNavigationService=e}(ActiveMQ||(ActiveMQ={})),function(e){var t=function(){function e(e,t,n){var i=this;this.$location=t,this.activeMQNavigationService=n,e.$on("jmxTreeClicked",function(){i.tabs=n.getTabs();var e=_.find(i.tabs,{path:i.$location.path()});e||(e=i.tabs[0]),i.$location.path(e.path)})}return e.$inject=["$scope","$location","activeMQNavigationService"],e.prototype.$onInit=function(){this.tabs=this.activeMQNavigationService.getTabs()},e.prototype.goto=function(e){this.$location.path(e.path)},e}();e.ActiveMQNavigationController=t,e.activeMQNavigationComponent={template:'<hawtio-tabs tabs="$ctrl.tabs" on-change="$ctrl.goto(tab)"></hawtio-tabs>',controller:t}}(ActiveMQ||(ActiveMQ={})),function(c){function e(e){e.when("/activemq/attributes",{templateUrl:"plugins/jmx/html/attributes/attributes.html"}).when("/activemq/operations",{template:"<operations></operations>"}).when("/activemq/charts",{templateUrl:"plugins/jmx/html/charts.html"}).when("/activemq/charts/edit",{templateUrl:"plugins/jmx/html/chartEdit.html"}).when("/activemq/browseQueue",{templateUrl:"plugins/activemq/html/browseQueue.html"}).when("/activemq/createDestination",{template:"<create-destination></create-destination>"}).when("/activemq/deleteQueue",{template:"<delete-queue></delete-queue>"}).when("/activemq/deleteTopic",{template:"<delete-topic></delete-topic>"}).when("/activemq/sendMessage",{templateUrl:"plugins/camel/html/sendMessage.html"}).when("/activemq/durableSubscribers",{templateUrl:"plugins/activemq/html/durableSubscribers.html"}).when("/activemq/jobs",{templateUrl:"plugins/activemq/html/jobs.html"}).when("/activemq/queues",{templateUrl:"plugins/activemq/html/destinations.html",controller:"queuesController"}).when("/activemq/topics",{templateUrl:"plugins/activemq/html/destinations.html",controller:"topicsController"})}function t(e,t,n,i,r,o,a,s){n.addUserDoc("activemq","plugins/activemq/doc/help.md",function(){return t.treeContainsDomainAndProperties("org.apache.activemq")}),i.addTab("ActiveMQ","plugins/activemq/html/preferences.html",function(){return t.treeContainsDomainAndProperties("org.apache.activemq")}),e.addItem({title:"ActiveMQ",basePath:"/activemq",template:"<activemq></activemq>",isValid:function(){return t.treeContainsDomainAndProperties(c.jmxDomain)&&0<s.getTabs().length}}),t.addNamedTreePostProcessor("activemq",function(e){var t=e.get("org.apache.activemq");(function t(e){if(e){var n=e.parent,i=e.entries;if(n&&!n.typeName&&i){var r=i.endpoint;"Consumer"!==r&&"Producer"!==r||(n.typeName=r);var o=i.connectorName;o&&!e.icon&&(e.icon=UrlHelpers.join(a,"/img/icons/activemq/connector.png"))}angular.forEach(e.children,function(e){return t(e)})}})(t),t&&angular.forEach(t.children,function(e){angular.forEach(e.children,function(e){var i=e.children;if(i){angular.forEach(["Topic","Queue"],function(t){var e=_.findIndex(i,function(e){return e.text===t});if(0<e){var n=i[e];i.splice(e,1),i.splice(0,0,n)}})}})})}),o.addTask("CleanupActiveMQCredentials",function(){c.log.debug("Clean up ActiveMQ credentials in local storage"),r.removeItem("activemqUserName"),r.removeItem("activemqPassword")});var l=t.attributeColumnDefs;l[c.jmxDomain+"/Broker/folder"]=[{field:"BrokerName",displayName:"Name",width:"**"},{field:"TotalProducerCount",displayName:"Producer"},{field:"TotalConsumerCount",displayName:"Consumer"},{field:"StorePercentUsage",displayName:"Store %"},{field:"TempPercentUsage",displayName:"Temp %"},{field:"MemoryPercentUsage",displayName:"Memory %"},{field:"TotalEnqueueCount",displayName:"Enqueue"},{field:"TotalDequeueCount",displayName:"Dequeue"}],l[c.jmxDomain+"/Queue/folder"]=[{field:"Name",displayName:"Name",width:"***"},{field:"QueueSize",displayName:"Queue Size"},{field:"ProducerCount",displayName:"Producer"},{field:"ConsumerCount",displayName:"Consumer"},{field:"EnqueueCount",displayName:"Enqueue"},{field:"DequeueCount",displayName:"Dequeue"},{field:"MemoryPercentUsage",displayName:"Memory %"},{field:"DispatchCount",displayName:"Dispatch",visible:!1}],l[c.jmxDomain+"/Topic/folder"]=[{field:"Name",displayName:"Name",width:"****"},{field:"ProducerCount",displayName:"Producer"},{field:"ConsumerCount",displayName:"Consumer"},{field:"EnqueueCount",displayName:"Enqueue"},{field:"DequeueCount",displayName:"Dequeue"},{field:"MemoryPercentUsage",displayName:"Memory %"},{field:"DispatchCount",displayName:"Dispatch",visible:!1}],l[c.jmxDomain+"/Consumer/folder"]=[{field:"ConnectionId",displayName:"Name",width:"**"},{field:"PrefetchSize",displayName:"Prefetch Size"},{field:"Priority",displayName:"Priority"},{field:"DispatchedQueueSize",displayName:"Dispatched Queue #"},{field:"SlowConsumer",displayName:"Slow ?"},{field:"Retroactive",displayName:"Retroactive"},{field:"Selector",displayName:"Selector"}],l[c.jmxDomain+"/networkConnectors/folder"]=[{field:"Name",displayName:"Name",width:"**"},{field:"UserName",displayName:"User Name"},{field:"PrefetchSize",displayName:"Prefetch Size"},{field:"ConduitSubscriptions",displayName:"Conduit Subscriptions?"},{field:"Duplex",displayName:"Duplex"},{field:"DynamicOnly",displayName:"Dynamic Only"}],l[c.jmxDomain+"/PersistenceAdapter/folder"]=[{field:"IndexDirectory",displayName:"Index Directory",width:"**"},{field:"LogDirectory",displayName:"Log Directory",width:"**"}]}e.$inject=["$routeProvider"],t.$inject=["mainNavService","workspace","helpRegistry","preferencesRegistry","localStorage","preLogoutTasks","documentBase","activeMQNavigationService"],c._module=angular.module(c.pluginName,["angularResizable",c.destinationModule,c.treeModule]).config(e).controller("topicsController",["$scope",function(e){e.destinationType="topics"}]).controller("queuesController",["$scope",function(e){e.destinationType="queues"}]).component("activemq",c.activeMQComponent).component("activemqNavigation",c.activeMQNavigationComponent).service("activeMQNavigationService",c.ActiveMQNavigationService).run(t),hawtioPluginLoader.addModule(c.pluginName)}(ActiveMQ||(ActiveMQ={})),function(e){var t=function(){function e(e,t,n){this.name=e,this.state=t,this.mbeanName=n,this.selected=!1}return e.prototype.isStarted=function(){return"Started"===this.state},e.prototype.isSuspended=function(){return"Suspended"===this.state},e}();e.Context=t}(Camel||(Camel={})),function(i){var e=function(){function e(e,t){this.jolokiaService=e,this.treeService=t}return e.$inject=["jolokiaService","treeService"],e.prototype.getContexts=function(){var t=this;return this.treeService.getSelectedMBean().then(function(e){if(e.children){var n=e.children.filter(function(e){return e.objectName}).map(function(e){return e.objectName});return t.jolokiaService.getMBeans(n).then(function(e){return e.map(function(e,t){return new i.Context(e.CamelId,e.State,n[t])})})}return[]})},e.prototype.getContext=function(t){return this.jolokiaService.getMBean(t).then(function(e){return new i.Context(e.CamelId,e.State,t)})},e.prototype.startContext=function(e){return this.executeOperationOnContext("start()",e)},e.prototype.startContexts=function(e){return this.executeOperationOnContexts("start()",e)},e.prototype.suspendContext=function(e){return this.executeOperationOnContext("suspend()",e)},e.prototype.suspendContexts=function(e){return this.executeOperationOnContexts("suspend()",e)},e.prototype.stopContext=function(e){return this.executeOperationOnContext("stop()",e)},e.prototype.stopContexts=function(e){return this.executeOperationOnContexts("stop()",e)},e.prototype.executeOperationOnContext=function(e,t){return this.jolokiaService.execute(t.mbeanName,e)},e.prototype.executeOperationOnContexts=function(e,t){var n=t.map(function(e){return e.mbeanName});return this.jolokiaService.executeMany(n,e)},e}();i.ContextsService=e}(Camel||(Camel={})),function(e){var t=function(){function e(e,t,n,i){var r=this;this.$timeout=e,this.$uibModal=t,this.workspace=n,this.contextsService=i,this.startAction={name:"Start",actionFn:function(e){var t=r.getSelectedContexts();r.contextsService.startContexts(t).then(function(e){Core.notification("success","Started "+Core.maybePlural(t.length,"Camel context")+" successfully"),r.updateContexts()}).catch(function(e){Core.notification("danger",e)})},isDisabled:!0},this.suspendAction={name:"Suspend",actionFn:function(e){var t=r.getSelectedContexts();r.contextsService.suspendContexts(t).then(function(e){Core.notification("success","Suspended "+Core.maybePlural(t.length,"Camel context")+" successfully"),r.updateContexts()}).catch(function(e){Core.notification("danger",e)})},isDisabled:!0},this.deleteAction={name:"Delete",actionFn:function(e){r.$uibModal.open({templateUrl:"plugins/camel/html/deleteContextWarningModal.html"}).result.then(function(){var t=r.getSelectedContexts();r.contextsService.stopContexts(t).then(function(e){Core.notification("success","Deleted "+Core.maybePlural(t.length,"Camel context")+" successfully"),r.removeSelectedContexts()}).catch(function(e){Core.notification("danger",e)})})},isDisabled:!0},this.toolbarConfig={actionsConfig:{primaryActions:[this.startAction,this.suspendAction],moreActions:[this.deleteAction]},isTableView:!0},this.tableConfig={selectionMatchProp:"name",onCheckBoxChange:function(e){return r.enableDisableActions()}},this.tableColumns=[{header:"Name",itemField:"name"},{header:"State",itemField:"state"}],this.showTable=!0}return e.$inject=["$timeout","$uibModal","workspace","contextsService"],e.prototype.$onInit=function(){var t=this;this.contextsService.getContexts().then(function(e){return t.contexts=e})},e.prototype.getSelectedContexts=function(){return this.contexts.filter(function(e){return e.selected})},e.prototype.enableDisableActions=function(){var e=this.getSelectedContexts();this.startAction.isDisabled=!e.some(function(e){return"Suspended"===e.state}),this.suspendAction.isDisabled=!e.some(function(e){return"Started"===e.state}),this.deleteAction.isDisabled=0===e.length},e.prototype.updateContexts=function(){var n=this;this.contextsService.getContexts().then(function(e){for(var t=0;t<e.length;t++)n.contexts[t].state!==e[t].state&&(n.contexts[t]=angular.extend({},n.contexts[t],{state:e[t].state}));n.enableDisableActions(),n.repaintTable()})},e.prototype.removeSelectedContexts=function(){_.remove(this.contexts,function(e){return e.selected}),this.workspace.loadTree(),this.enableDisableActions()},e.prototype.repaintTable=function(){var e=this;this.showTable=!1,this.$timeout(function(){return e.showTable=!0})},e}();e.ContextsController=t,e.contextsComponent={template:'\n      <h2>Contexts</h2>\n      <p ng-if="!$ctrl.contexts">Loading...</p>\n      <div ng-if="$ctrl.contexts">\n        <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n        <div ng-if="$ctrl.showTable">\n          <pf-table-view config="$ctrl.tableConfig" columns="$ctrl.tableColumns" items="$ctrl.contexts"></pf-table-view>\n        </div>\n      </div>\n    ',controller:t}}(Camel||(Camel={})),function(e){var t=function(){function e(e,t,n,i){this.$scope=e,this.$uibModal=t,this.workspace=n,this.contextsService=i,this.context=null}return e.$inject=["$scope","$uibModal","workspace","contextsService"],e.prototype.$onInit=function(){var n=this;this.unsubscribe=this.$scope.$on(Jmx.TreeEvent.NodeSelected,function(e,t){"context"===t.typeName&&t.objectName?n.contextsService.getContext(t.objectName).then(function(e){return n.context=e}):n.context=null})},e.prototype.$onDestroy=function(){this.unsubscribe()},e.prototype.start=function(){var t=this;this.context.isStarted()||this.contextsService.startContext(this.context).then(function(e){Core.notification("success","Camel context started successfully"),t.contextsService.getContext(t.context.mbeanName).then(function(e){return t.context=e})}).catch(function(e){Core.notification("danger",e)})},e.prototype.suspend=function(){var t=this;this.context.isSuspended()||this.contextsService.suspendContext(this.context).then(function(e){Core.notification("success","Camel context suspended successfully"),t.contextsService.getContext(t.context.mbeanName).then(function(e){return t.context=e})}).catch(function(e){Core.notification("danger",e)})},e.prototype.delete=function(){var t=this;this.$uibModal.open({templateUrl:"plugins/camel/html/deleteContextWarningModal.html"}).result.then(function(){t.contextsService.stopContext(t.context).then(function(e){Core.notification("success","Camel context deleted successfully"),t.context=null,t.workspace.loadTree()})}).catch(function(e){Core.notification("danger",e)})},e}();e.ContextActionsController=t,e.contextActionsComponent={template:'\n      <div class="dropdown camel-main-actions" ng-show="$ctrl.context"\n        hawtio-show object-name-model="$ctrl.context.mbeanName" method-name="stop" mode="remove">\n        <button type="button" id="dropdownMenu1" class="btn btn-default dropdown-toggle"\n          data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">\n          <span class="fa" ng-class="{\'fa-play\': $ctrl.context.isStarted(), \'fa-pause\': $ctrl.context.isSuspended()}"></span>\n          &nbsp;\n          {{$ctrl.context.state}}\n          &nbsp;\n          <span class="caret"></span>\n        </button>\n        <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">\n          <li ng-class="{disabled: $ctrl.context.isStarted()}">\n            <a href="#" ng-click="$ctrl.start()">Start</a>\n          </li>\n          <li ng-class="{disabled: $ctrl.context.isSuspended()}">\n            <a href="#" ng-click="$ctrl.suspend()">Suspend</a>\n          </li>\n          <li>\n            <a href="#" ng-click="$ctrl.delete()">Delete</a>\n          </li>\n        </ul>\n      </div>\n    ',controller:t}}(Camel||(Camel={})),function(e){e.contextsModule=angular.module("hawtio-camel-contexts",[]).component("contexts",e.contextsComponent).component("contextActions",e.contextActionsComponent).service("contextsService",e.ContextsService).name}(Camel||(Camel={})),function(t){var e=function(){function e(e){this.debugService=e,this.conditionalBreakpoint=new t.ConditionalBreakpoint}return e.$inject=["debugService"],e.prototype.add=function(){var t=this;this.conditionalBreakpoint.nodeId=this.resolve.nodeId,this.debugService.addConditionalBreakpoint(this.conditionalBreakpoint).then(this.close).catch(function(e){return t.error=e})},e}();t.AddConditionalBreakpointModalController=e,t.addConditionalBreakpointModal={bindings:{close:"&",dismiss:"&",resolve:"<"},template:'\n      <form name="addConditionalBreakpointForm" class="form-horizontal" ng-submit="$ctrl.add()">\n        <div class="modal-header">\n          <button type="button" class="close" aria-label="Close" ng-click="$ctrl.dismiss()">\n            <span class="pficon pficon-close" aria-hidden="true"></span>\n          </button>\n          <h4 class="modal-title">Add conditional breakpoint</h4>\n        </div>\n        <div class="modal-body">\n          <div class="alert alert-danger" ng-if="$ctrl.error">\n            <span class="pficon pficon-error-circle-o"></span>\n            {{ $ctrl.error }}\n          </div>\n          <div class="form-group">\n            <label class="col-sm-2 control-label">Language</label>\n            <div class="col-sm-10">\n              <div class="radio">\n                <label>\n                  <input type="radio" ng-model="$ctrl.conditionalBreakpoint.language" value="simple">\n                  Simple\n                </label>\n              </div>\n              <div class="radio">\n                <label>\n                  <input type="radio" ng-model="$ctrl.conditionalBreakpoint.language" value="xpath">\n                  XPath\n                </label>\n              </div>\n            </div>\n          </div>\n          <div class="form-group">\n            <label class="col-sm-2 control-label" for="predicate">Predicate</label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" id="predicate" name="predicate"\n                     ng-model="$ctrl.conditionalBreakpoint.predicate" ng-disabled="!$ctrl.conditionalBreakpoint.language">\n            </div>\n          </div>\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-default" ng-click="$ctrl.dismiss()">Cancel</button>\n          <button type="submit" class="btn btn-primary" ng-disabled="!$ctrl.conditionalBreakpoint.predicate">Add</button>\n        </div>\n      </form>\n    ',controller:e}}(Camel||(Camel={})),function(x){e.$inject=["$scope","$element","workspace","jolokia","localStorage","documentBase","$uibModal"];var T=Logger.get("hawtio-integration-camel-debugger");function e(r,n,a,s,l,e,t){var o=UrlHelpers.join(e,"/img/icons/camel/breakpoint.png");function c(){x.highlightSelectedNode(w(),m())}function i(){r.debugging=!1;var e=x.getSelectionCamelDebugMBean(a);e&&(r.debugging=s.getAttribute(e,"Enabled",Core.onSuccess(null)),r.debugging?(s.execute(e,"getBreakpoints",Core.onSuccess(f)),r.graphView="plugins/camel/html/routeDiagram.html",Core.register(s,r,{type:"exec",mbean:e,operation:"getDebugCounter"},Core.onSuccess(d))):(r.graphView=null,r.tableView=null,r.selectedDiagramNodeId=null))}function d(e){var t=e.value;t&&t!==r.breakpointCounter&&(r.breakpointCounter=t,function(){var e=x.getSelectionCamelDebugMBean(a);e&&(T.info("Getting suspended breakpoints!"),s.execute(e,"getSuspendedBreakpointNodeIds",Core.onSuccess(u)))}())}function u(e){var t=x.getSelectionCamelDebugMBean(a);r.suspendedBreakpoints=e,r.stopped=e&&e.length,r.showDebugPanel=r.showDebugPanel?r.showDebugPanel:r.stopped;var n=m();t&&n&&(s.execute(t,"dumpTracedMessagesAsXml",n,Core.onSuccess(p)),r.selectedDiagramNodeId=n),C(),Core.$apply(r)}function p(e){if(T.debug("onMessage ->",e),r.messages=[],e){var t=e;if(angular.isString(t)){var n=$.parseXML(t),i=$(n).find("fabricTracerEventMessage");i&&i.length||(i=$(n).find("backlogTracerEventMessage")),i.each(function(e,t){var n=x.createMessageFromXml(t),i=$(t).find("toNode").text();i&&(n.toNode=i),n.openMessageDialog=r.openMessageDialog,r.messages.push(n)})}}else T.warn("WARNING: dumpTracedMessagesAsXml() returned no results!");h(),C(),c(),T.debug("has messages",r.messages.length,"selected row",r.row,"index",r.rowIndex),Core.$apply(r)}function h(){if(0<r.messages.length){r.row=r.messages[0];var e=r.row.body;r.mode=angular.isString(e)?CodeEditor.detectTextFormat(e):"text","javascript"==r.mode&&(r.mode="text")}}function g(){r.row=null,r.messages=[],r.suspendedBreakpoints=[],r.stopped=!1,h(),C(),c(),Core.$apply(r)}function m(){var e=null,t=r.suspendedBreakpoints;return t&&t.length&&(e=t[0],1<t.length&&r.isSuspendedAt(r.selectedDiagramNodeId)&&(e=r.selectedDiagramNodeId)),e}function f(e){r.breakpoints=e,v();var t=w();t.length&&C(t),Core.$apply(r)}function b(e){return y(r.breakpoints,e)}function v(){r.hasBreakpoint=b(r.selectedDiagramNodeId)}function y(e,t){return t&&e&&-1!==e.indexOf(t)}function w(){return d3.select("svg.camel-diagram").selectAll("g.node")}function C(e){void 0===e&&(e=w()),e.each(function(e){var t=e.cid,n=d3.select(this),i=n.selectAll("image.breakpoint");b(t)?i.length&&i[0].length?i.attr("xlink:href",function(e){return o}):n.append("image").attr("xlink:href",function(e){return o}).attr("class","breakpoint").attr("x",function(e){return-e.bbox.width/2-6}).attr("y",-20).attr("height",12).attr("width",12):i.remove(),n.classed("stopped",r.isSuspendedAt(t))})}function k(){i(),Core.$apply(r)}function S(e){var t=x.getSelectionCamelDebugMBean(a);if(t){var n=e?"enableDebugger":"disableDebugger",i=x.maximumTraceOrDebugBodyLength(l),r=x.traceOrDebugIncludeStreams(l),o=Core.onSuccess(null);s.setAttribute(t,"BodyMaxChars",i,o),s.setAttribute(t,"BodyIncludeStreams",r,o),s.setAttribute(t,"BodyIncludeFiles",r,o),s.execute(t,n,Core.onSuccess(k))}}r.debugging=!1,r.stopped=!1,r.showDebugPanel=!1,r.ignoreRouteXmlNode=!0,r.messages=[],r.mode="text",r.showMessageDetails=!0,r.camelDebugMBean=x.getSelectionCamelDebugMBean(a),r.startDebugging=function(){T.info("Start debugging"),S(!0)},r.stopDebugging=function(){T.info("Stop debugging"),S(!1)},r.$on("camel.diagram.selectedNodeId",function(e,t){r.selectedDiagramNodeId=t,v()}),r.$on("camel.diagram.layoutComplete",function(e,t){C(),$(n).find("g.node").dblclick(function(e){var t=this.getAttribute("data-cid");r.toggleBreakpoint(t)})}),r.toggleBreakpoint=function(e){T.info("Toggle breakpoint");var t=x.getSelectionCamelDebugMBean(a);if(t&&e){var n=b(e)?"removeBreakpoint":"addBreakpoint";s.execute(t,n,e,Core.onSuccess(k))}},r.addBreakpoint=function(){T.info("Add breakpoint");var e=x.getSelectionCamelDebugMBean(a);e&&r.selectedDiagramNodeId&&s.execute(e,"addBreakpoint",r.selectedDiagramNodeId,Core.onSuccess(k))},r.addConditionalBreakpoint=function(){t.open({component:"addConditionalBreakpointModal",resolve:{nodeId:function(){return r.selectedDiagramNodeId}}}).result.then(k)},r.removeBreakpoint=function(){T.info("Remove breakpoint");var e=x.getSelectionCamelDebugMBean(a);e&&r.selectedDiagramNodeId&&s.execute(e,"removeBreakpoint",r.selectedDiagramNodeId,Core.onSuccess(k))},r.removeBreakpointById=function(e){T.info("Remove breakpoint");var t=x.getSelectionCamelDebugMBean(a);t&&s.execute(t,"removeBreakpoint",e,Core.onSuccess(k))},r.resume=function(){T.info("Resume");var e=x.getSelectionCamelDebugMBean(a);e&&s.execute(e,"resumeAll",Core.onSuccess(g))},r.suspend=function(){T.info("Suspend");var e=x.getSelectionCamelDebugMBean(a);e&&s.execute(e,"suspendAll",Core.onSuccess(g))},r.step=function(){T.info("Step");var e=x.getSelectionCamelDebugMBean(a),t=m();e&&t&&s.execute(e,"stepBreakpoint(java.lang.String)",t,Core.onSuccess(g))},r.shouldDisableAddBreakpoint=function(){if(!r.selectedDiagramNodeId)return!0;var e=w();return!e||0==e.length||e[0][0].getAttribute("data-cid")===r.selectedDiagramNodeId},r.isSuspendedAt=function(e){return y(r.suspendedBreakpoints,e)},i()}x.DebugController=e}(Camel||(Camel={})),function(n){var e=function(){function e(e,t){this.workspace=e,this.jolokiaService=t}return e.$inject=["workspace","jolokiaService"],e.prototype.addConditionalBreakpoint=function(e){n.log.info("Add conditional breakpoint");var t=n.getSelectionCamelDebugMBean(this.workspace);return this.jolokiaService.execute(t,"addConditionalBreakpoint",e.nodeId,e.language,e.predicate)},e}();n.DebugService=e}(Camel||(Camel={})),function(e){e.debugModule=angular.module("hawtio-camel-debug",[]).controller("Camel.DebugRouteController",e.DebugController).component("addConditionalBreakpointModal",e.addConditionalBreakpointModal).service("debugService",e.DebugService).name}(Camel||(Camel={})),(Pf||(Pf={})).filter=function(e,i){var r=e;return i.appliedFilters&&i.appliedFilters.forEach(function(t){switch(_.find(i.fields,{id:t.id}).filterType){case"text":var n=new RegExp(t.value,"i");r=r.filter(function(e){return n.test(e[t.id])});break;case"number":r=r.filter(function(e){return e[t.id]===parseInt(t.value)});break;case"select":r=r.filter(function(e){return e[t.id]===t.value})}}),i.resultsCount=r.length,r},function(e){var t=function(){function e(e,t){this.jolokiaService=e,this.treeService=t}return e.$inject=["jolokiaService","treeService"],e.prototype.getStatistics=function(){var t=this;return this.treeService.findMBeanWithProperties("org.apache.camel",{type:"services",name:"DefaultRuntimeEndpointRegistry*"}).then(function(e){return t.jolokiaService.execute(e.objectName,"endpointStatistics").then(function(e){return _.values(e)})})},e}();e.EndpointsStatisticsService=t}(Camel||(Camel={})),function(e){var t=function(){function e(e){var t=this;this.endpointsStatisticsService=e,this.toolbarConfig={filterConfig:{fields:[{id:"url",title:"URL",placeholder:"Filter by URL...",filterType:"text"},{id:"routeId",title:"Route ID",placeholder:"Filter by route ID...",filterType:"text"},{id:"direction",title:"Direction",placeholder:"Filter by direction...",filterType:"text"}],onFilterChange:function(e){t.filteredItems=Pf.filter(t.allItems,t.toolbarConfig.filterConfig)},appliedFilters:[],resultsCount:0},isTableView:!0},this.tableConfig={selectionMatchProp:"url",showCheckboxes:!1},this.tableDtOptions={order:[[0,"asc"]]},this.tableColumns=[{itemField:"url",header:"URL"},{itemField:"routeId",header:"Route ID"},{itemField:"direction",header:"Direction"},{itemField:"static",header:"Static"},{itemField:"dynamic",header:"Dynamic"},{itemField:"hits",header:"Hits"}]}return e.$inject=["endpointsStatisticsService"],e.prototype.$onInit=function(){var t=this;this.endpointsStatisticsService.getStatistics().then(function(e){t.allItems=e,t.filteredItems=e,t.toolbarConfig.filterConfig.resultsCount=e.length})},e}();e.EndpointsStatisticsController=t,e.endpointsStatisticsComponent={template:'\n      <h2>Endpoints (in/out)</h2>\n      <p ng-if="!$ctrl.filteredItems">Loading...</p>\n      <div ng-if="$ctrl.filteredItems">\n        <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n        <pf-table-view config="$ctrl.tableConfig"\n                       dt-options="$ctrl.tableDtOptions"\n                       columns="$ctrl.tableColumns"\n                       items="$ctrl.filteredItems"></pf-table-view>\n      </div>\n    ',controller:t}}(Camel||(Camel={})),function(e){e.endpointsStatisticsModule=angular.module("hawtio-camel-endpoints-statistics",[]).component("endpointsStatistics",e.endpointsStatisticsComponent).service("endpointsStatisticsService",e.EndpointsStatisticsService).name}(Camel||(Camel={})),function(e){var t=function(){function e(e,t,n){this.uri=e,this.state=t,this.mbean=n}return e.$inject=["uri","state","mbean"],e}();e.Endpoint=t}(Camel||(Camel={})),function(i){var e=function(){function e(e,t,n){this.$q=e,this.jolokiaService=t,this.workspace=n}return e.$inject=["$q","jolokiaService","workspace"],e.prototype.getEndpoints=function(){if(this.workspace.selection&&this.workspace.selection.children&&0<this.workspace.selection.children.length){var n=this.workspace.selection.children.map(function(e){return e.objectName});return this.jolokiaService.getMBeans(n).then(function(e){return e.map(function(e,t){return new i.Endpoint(e.EndpointUri,e.State,n[t])})})}return this.$q.resolve([])},e.prototype.canCreateEndpoints=function(){return this.workspace.selection&&this.workspace.hasInvokeRights(this.workspace.selection,"createEndpoint")},e}();i.EndpointsService=e}(Camel||(Camel={})),function(e){var t=function(){function e(e,t){var n=this;this.$location=e,this.endpointsService=t,this.addAction={name:"Add",actionFn:function(e){n.$location.path("/camel/createEndpoint")},isDisabled:!0},this.toolbarConfig={actionsConfig:{primaryActions:[this.addAction]},isTableView:!0},this.tableConfig={selectionMatchProp:"uri",showCheckboxes:!1},this.tableDtOptions={order:[[0,"asc"]]},this.tableColumns=[{header:"URI",itemField:"uri"},{header:"State",itemField:"state"}]}return e.$inject=["$location","endpointsService"],e.prototype.$onInit=function(){var t=this;this.endpointsService.getEndpoints().then(function(e){return t.endpoints=e}),this.addAction.isDisabled=!this.endpointsService.canCreateEndpoints()},e}();e.EndpointsController=t,e.endpointsComponent={template:'\n      <h2>Endpoints</h2>\n      <p ng-if="!$ctrl.endpoints">Loading...</p>\n      <div ng-if="$ctrl.endpoints">\n        <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n        <pf-table-view config="$ctrl.tableConfig"\n                       dt-options="$ctrl.tableDtOptions"\n                       columns="$ctrl.tableColumns"\n                       items="$ctrl.endpoints"></pf-table-view>\n      </div>\n    ',controller:t}}(Camel||(Camel={})),function(e){e.endpointsModule=angular.module("hawtio-camel-endpoints",[]).component("endpoints",e.endpointsComponent).service("endpointsService",e.EndpointsService).name}(Camel||(Camel={})),(Camel||(Camel={})).exchangesComponent={template:"\n      <h2>Exchanges</h2>\n      <inflight-exchanges></inflight-exchanges>\n      <blocked-exchanges></blocked-exchanges>\n    "},function(r){var e=function(){function e(e,t,n){this.jolokiaService=e,this.treeService=t,this.workspace=n}return e.$inject=["jolokiaService","treeService","workspace"],e.prototype.getInflightExchanges=function(){return this.getExchanges("DefaultInflightRepository*")},e.prototype.getBlockedExchanges=function(){return this.getExchanges("DefaultAsyncProcessorAwaitManager*")},e.prototype.getExchanges=function(e){var i=this;return this.treeService.findMBeanWithProperties("org.apache.camel",{type:"services",name:e}).then(function(e){return i.jolokiaService.execute(e.objectName,"browse()").then(function(e){var t=_.values(e),n=r.getSelectedRouteId(i.workspace);return null!=n&&(t=_.filter(t,{routeId:n})),t=_.sortBy(t,"exchangeId")})})},e.prototype.unblockExchange=function(t){var n=this;return r.log.info("Unblocking thread ("+t.id+"/"+t.name+") for exchangeId: "+t.exchangeId),this.treeService.findMBeanWithProperties("org.apache.camel",{type:"services",name:"DefaultAsyncProcessorAwaitManager*"}).then(function(e){return n.jolokiaService.execute(e.objectName,"interrupt(java.lang.String)",t.exchangeId)})},e}();r.ExchangesService=e}(Camel||(Camel={})),function(e){var t=function(){function e(e,t){this.$timeout=e,this.exchangesService=t,this.reloadDelay=1e4,this.exchanges=null}return e.$inject=["$timeout","exchangesService"],e.prototype.$onInit=function(){this.loadDataPeriodically()},e.prototype.$onDestroy=function(){this.cancelTimer()},e.prototype.loadDataPeriodically=function(){var t=this;this.exchangesService.getInflightExchanges().then(function(e){return t.exchanges=e}).then(function(){return t.promise=t.$timeout(function(){return t.loadDataPeriodically()},t.reloadDelay)})},e.prototype.cancelTimer=function(){this.$timeout.cancel(this.promise)},e}();e.InflightExchangesController=t,e.inflightExchangesComponent={template:'\n      <h3>Inflight</h3>\n      <p ng-if="$ctrl.exchanges === null">Loading...</p>\n      <p ng-if="$ctrl.exchanges.length === 0">No inflight exchanges</p>\n      <div ng-if="$ctrl.exchanges.length > 0">\n        <table class="table table-striped table-bordered">\n          <thead>\n            <tr>\n              <th>Exchange ID</th>\n              <th>Route ID</th>\n              <th>Node ID</th>\n              <th>Duration (ms)</th>\n              <th>Elapsed (ms)</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-repeat="exchange in $ctrl.exchanges track by exchange.exchangeId">\n              <td>{{exchange.exchangeId}}</td>\n              <td>{{exchange.routeId}}</td>\n              <td>{{exchange.nodeId}}</td>\n              <td>{{exchange.duration}}</td>\n              <td>{{exchange.elapsed}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    ',controller:t}}(Camel||(Camel={})),function(e){var t=function(){function e(e,t,n){this.$timeout=e,this.$uibModal=t,this.exchangesService=n,this.reloadDelay=1e4,this.exchanges=null}return e.$inject=["$timeout","$uibModal","exchangesService"],e.prototype.$onInit=function(){this.loadDataPeriodically()},e.prototype.$onDestroy=function(){this.cancelTimer()},e.prototype.loadDataPeriodically=function(){var t=this;this.exchangesService.getBlockedExchanges().then(function(e){return t.exchanges=e}).then(function(){return t.promise=t.$timeout(function(){return t.loadDataPeriodically()},t.reloadDelay)})},e.prototype.cancelTimer=function(){this.$timeout.cancel(this.promise)},e.prototype.unblock=function(e){var t=this;this.$uibModal.open({component:"confirmUnblockExchange"}).result.then(function(){t.exchangesService.unblockExchange(e).then(function(){t.cancelTimer(),t.loadDataPeriodically()})})},e}();e.BlockedExchangesController=t,e.blockedExchangesComponent={template:'\n      <h3>Blocked</h3>\n      <p ng-if="$ctrl.exchanges === null">Loading...</p>\n      <p ng-if="$ctrl.exchanges.length === 0">No blocked exchanges</p>\n      <div ng-if="$ctrl.exchanges.length > 0">\n        <table class="table table-striped table-bordered dataTable">\n          <thead>\n            <tr>\n              <th>Exchange ID</th>\n              <th>Route ID</th>\n              <th>Node ID</th>\n              <th>Duration (ms)</th>\n              <th>Thread ID</th>\n              <th>Thread name</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-repeat="exchange in $ctrl.exchanges track by exchange.exchangeId">\n              <td>{{exchange.exchangeId}}</td>\n              <td>{{exchange.routeId}}</td>\n              <td>{{exchange.nodeId}}</td>\n              <td>{{exchange.duration}}</td>\n              <td>{{exchange.id}}</td>\n              <td>{{exchange.name}}</td>\n              <td class="table-view-pf-actions">\n                <div class="table-view-pf-btn">\n                  <button type="button" class="btn btn-default" ng-click="$ctrl.unblock(exchange)">Unblock</button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    ',controller:t}}(Camel||(Camel={})),(Camel||(Camel={})).confirmUnblockExchangeComponent={bindings:{close:"&",dismiss:"&"},template:'\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$ctrl.dismiss()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <h4 class="modal-title">Unblock Exchange</h4>\n      </div>\n      <div class="modal-body">\n        <p>You are about to unblock the selected thread.</p>\n        <p>This operation cannot be undone so please be careful.</p>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="$ctrl.dismiss()">Cancel</button>\n        <button type="button" class="btn btn-danger" ng-click="$ctrl.close()">Unblock</button>\n      </div>\n    '},function(e){e.exchangesModule=angular.module("hawtio-camel-exchanges",[]).component("exchanges",e.exchangesComponent).component("inflightExchanges",e.inflightExchangesComponent).component("blockedExchanges",e.blockedExchangesComponent).component("confirmUnblockExchange",e.confirmUnblockExchangeComponent).service("exchangesService",e.ExchangesService).name}(Camel||(Camel={})),function(l){var e=function(){function e(e,t){this.$q=e,this.jolokia=t}return e.$inject=["$q","jolokia"],e.prototype.getMBean=function(i){var e=this;return this.$q(function(t,n){e.jolokia.request({type:"read",mbean:i},Core.onSuccess(function(e){t(e.value)},{error:function(e){l.log.error("JolokiaService.getMBean('"+i+"') failed: "+e.error),n(e.error)},ajaxError:function(e){l.log.error("JolokiaService.getMBean('"+i+"') failed: "+e.responseText),n(e.responseText)}}))})},e.prototype.getMBeans=function(o){var e=this;return this.$q(function(t,n){if(0===o.length)return t([]);var i=o.map(function(e){return{type:"read",mbean:e}}),r=[];e.jolokia.request(i,Core.onSuccess(function(e){r.push(e.value),r.length===i.length&&t(r)},{error:function(e){l.log.error("JolokiaService.getMBeans('"+o+"') failed: "+e.error),n(e.error)},ajaxError:function(e){l.log.error("JolokiaService.getMBeans('"+o+"') failed: "+e.responseText),n(e.responseText)}}))})},e.prototype.getAttribute=function(i,r){var e=this;return this.$q(function(t,n){e.jolokia.request({type:"read",mbean:i,attribute:r},Core.onSuccess(function(e){t(e.value)},{error:function(e){l.log.error("JolokiaService.getAttribute('"+i+"', '"+r+"') failed: "+e.error),n(e.error)},ajaxError:function(e){l.log.error("JolokiaService.getAttribute('"+i+"', '"+r+"') failed: "+e.responseText),n(e.responseText)}}))})},e.prototype.getAttributes=function(i,r){var e=this;return this.$q(function(t,n){e.jolokia.request({type:"read",mbean:i,attribute:r},Core.onSuccess(function(e){t(e.value)},{error:function(e){l.log.error("JolokiaService.getAttributes('"+i+"', '"+r+"') failed: "+e.error),n(e.error)},ajaxError:function(e){l.log.error("JolokiaService.getAttributes('"+i+"', '"+r+"') failed: "+e.responseText),n(e.responseText)}}))})},e.prototype.setAttribute=function(i,r,o){var e=this;return this.$q(function(t,n){e.jolokia.request({type:"write",mbean:i,attribute:r,value:o},Core.onSuccess(function(e){t(e.value)},{error:function(e){l.log.error("JolokiaService.setAttribute('"+i+"', '"+r+"', '"+o+"') failed: "+e.error),n(e.error)},ajaxError:function(e){l.log.error("JolokiaService.setAttribute('"+i+"', '"+r+"', '"+o+"') failed: "+e.responseText),n(e.responseText)}}))})},e.prototype.setAttributes=function(o,a,s){var e=this;return this.$q(function(t,n){if(a.length!=s.length)return t([]);var i=a.map(function(e,t){return{type:"write",mbean:o,attribute:e,value:s[t]}}),r=[];e.jolokia.request(i,Core.onSuccess(function(e){r.push(e.value),r.length===i.length&&t(r)},{error:function(e){l.log.error("JolokiaService.setAttributes('"+o+"', '"+a+"', '"+s+"') failed: "+e.error),n(e.error)},ajaxError:function(e){l.log.error("JolokiaService.setAttributes('"+o+"', '"+a+"', '"+s+"') failed: "+e.responseText),n(e.responseText)}}))})},e.prototype.execute=function(i,r){for(var e=this,o=[],t=2;t<arguments.length;t++)o[t-2]=arguments[t];return this.$q(function(t,n){e.jolokia.request({type:"exec",mbean:i,operation:r,arguments:o},Core.onSuccess(function(e){t(e.value)},{error:function(e){l.log.error("JolokiaService.execute('"+i+"', '"+r+"', '"+o+"') failed: "+e.error),n(e.error)},ajaxError:function(e){l.log.error("JolokiaService.execute('"+i+"', '"+r+"', '"+o+"') failed: "+e.responseText),n(e.responseText)}}))})},e.prototype.executeMany=function(o,a){for(var e=this,s=[],t=2;t<arguments.length;t++)s[t-2]=arguments[t];return this.$q(function(t,n){if(0===o.length)return t([]);var i=o.map(function(e){return{type:"exec",mbean:e,operation:a,arguments:s}}),r=[];e.jolokia.request(i,Core.onSuccess(function(e){r.push(e.value),r.length===i.length&&t(r)},{error:function(e){l.log.error("JolokiaService.executeMany('"+o+"', '"+a+"', '"+s+"') failed: "+e.error),n(e.error)},ajaxError:function(e){l.log.error("JolokiaService.executeMany('"+o+"', '"+a+"', '"+s+"') failed: "+e.responseText),n(e.responseText)}}))})},e.prototype.search=function(i){var e=this;return this.$q(function(t,n){e.jolokia.request({type:"search",mbean:i},Core.onSuccess(function(e){t(e.value)},{error:function(e){l.log.error("JolokiaService.search('"+i+"') failed: "+e.error),n(e.error)},ajaxError:function(e){l.log.error("JolokiaService.search('"+i+"') failed: "+e.responseText),n(e.responseText)}}))})},e}();l.JolokiaService=e}(JVM||(JVM={})),function(e){var t=function(){function e(e,t){this.treeService=e,this.jolokiaService=t}return e.$inject=["treeService","jolokiaService"],e.prototype.getProfile=function(){var t=this;return this.treeService.getSelectedMBeanName().then(function(e){return t.jolokiaService.execute(e,"dumpRouteStatsAsXml(boolean,boolean)",!1,!0)}).then(function(e){var a=[],t=$.parseXML(e);return $(t).find("routeStat").each(function(e,t){var n={id:{},count:{},last:{},delta:{},mean:{},min:{},max:{},total:{},self:{}};n.id=t.getAttribute("id");var i=0;i+=+t.getAttribute("exchangesCompleted"),i+=+t.getAttribute("exchangesFailed"),n.count=i,n.last=parseInt(t.getAttribute("lastProcessingTime"));var r=t.getAttribute("deltaProcessingTime");n.delta=r?parseInt(r):0,n.mean=parseInt(t.getAttribute("meanProcessingTime")),n.min=parseInt(t.getAttribute("minProcessingTime")),n.max=parseInt(t.getAttribute("maxProcessingTime")),n.total=parseInt(t.getAttribute("totalProcessingTime")),n.self=parseInt(t.getAttribute("selfProcessingTime")),a.push(n)}),$(t).find("processorStat").each(function(e,t){var n={id:{},count:{},last:{},delta:{},mean:{},min:{},max:{},total:{},self:{}};n.id=t.getAttribute("id");var i=0;i+=+t.getAttribute("exchangesCompleted"),i+=+t.getAttribute("exchangesFailed"),n.count=i,n.last=parseInt(t.getAttribute("lastProcessingTime"));var r=t.getAttribute("deltaProcessingTime");n.delta=r?parseInt(r):0,n.mean=parseInt(t.getAttribute("meanProcessingTime")),n.min=parseInt(t.getAttribute("minProcessingTime")),n.max=parseInt(t.getAttribute("maxProcessingTime"));var o=t.getAttribute("accumulatedProcessingTime");n.total=o?parseInt(o):0,n.self=parseInt(t.getAttribute("totalProcessingTime")),a.push(n)}),a})},e}();e.ProfileService=t}(Camel||(Camel={})),function(t){var e=function(){function e(e,t){this.$interval=e,this.profileService=t,this.reloadDelay=1e4}return e.$inject=["$interval","profileService"],e.prototype.$onInit=function(){this.loadDataPeriodically()},e.prototype.$onDestroy=function(){this.cancelReloadTask()},e.prototype.loadDataPeriodically=function(){var e=this;this.loadData(),this.reloadTask=this.$interval(function(){return e.loadData()},this.reloadDelay)},e.prototype.loadData=function(){var t=this;this.profileService.getProfile().then(function(e){return t.profile=e})},e.prototype.cancelReloadTask=function(){this.$interval.cancel(this.reloadTask)||t.log.error("Failed to cancel Profile reload task")},e}();t.ProfileController=e,t.profileComponent={template:'\n      <h2>Profile</h2>\n      <p ng-if="!$ctrl.profile">Loading...</p>\n      <div ng-if="$ctrl.profile">\n        <table class="table table-striped table-bordered">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Count</th>\n              <th>Last</th>\n              <th>Delta</th>\n              <th>Mean</th>\n              <th>Min</th>\n              <th>Max</th>\n              <th>Total</th>\n              <th>Self</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-repeat="item in $ctrl.profile track by item.id">\n              <td>{{ item.id }}</td>\n              <td class="text-right">{{ item.count }}</td>\n              <td class="text-right">{{ item.last }}</td>\n              <td class="text-right">{{ item.delta }}</td>\n              <td class="text-right">{{ item.mean }}</td>\n              <td class="text-right">{{ item.min }}</td>\n              <td class="text-right">{{ item.max }}</td>\n              <td class="text-right">{{ item.total }}</td>\n              <td class="text-right">{{ item.self }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    ',controller:e}}(Camel||(Camel={})),function(e){e.profileModule=angular.module("hawtio-camel-profile",[]).component("profile",e.profileComponent).service("profileService",e.ProfileService).name}(Camel||(Camel={})),function(e){var t=function(){function e(e,t,n){this.name=e,this.value=t,this.description=n}return e.sortByName=function(e,t){return e.name<t.name?-1:e.name>t.name?1:0},e}();e.Property=t}(Camel||(Camel={})),function(r){var e=function(){function e(){}return e.prototype.getDefinedProperties=function(i){return Object.keys(i).filter(function(e){return i[e].value}).map(function(e){var t=i[e],n=t.title||e;return new r.Property(n,t.value,t.description)}).sort(r.Property.sortByName)},e.prototype.getDefaultProperties=function(i){return Object.keys(i).filter(function(e){return!i[e].value}).filter(function(e){return"defaultValue"in i[e]}).map(function(e){var t=i[e],n=t.title||e;return new r.Property(n,t.defaultValue,t.description)}).sort(r.Property.sortByName)},e.prototype.getUndefinedProperties=function(i){return Object.keys(i).filter(function(e){return!i[e].value}).filter(function(e){return!("defaultValue"in i[e])}).map(function(e){var t=i[e],n=t.title||e;return new r.Property(n,null,t.description)}).sort(r.Property.sortByName)},e}();r.PropertiesService=e}(Camel||(Camel={})),function(l){function e(r,o,a,n,i){function s(e){if(l.log.debug("Populate data",e),e.value){var t=JSON.parse(e.value);r.icon=UrlHelpers.join(n,"/img/icons/camel/endpoint24.png"),r.title=t.component.title,r.description=t.component.description,r.labels=t.component.label?t.component.label.split(","):[],r.definedProperties=i.getDefinedProperties(t.componentProperties),r.defaultProperties=i.getDefaultProperties(t.componentProperties),r.undefinedProperties=i.getUndefinedProperties(t.componentProperties),r.viewTemplate="plugins/camel/html/nodePropertiesView.html",Core.$apply(r)}}setTimeout(function(){$("[data-toggle=tooltip]").tooltip()},1e3),function(){var e=l.getSelectionCamelContextMBean(o),t=null;if(t||(t=o.getSelectedMBeanName()),t&&e){var n=a.request({type:"read",mbean:t,attribute:["ComponentName"]}).value.ComponentName;if(n){r.componentName=n,l.log.debug("Calling explainComponentJson for name:",n);var i={type:"exec",mbean:e,operation:"explainComponentJson(java.lang.String,boolean)",arguments:[n,!0]};a.request(i,Core.onSuccess(s))}}}()}e.$inject=["$scope","workspace","jolokia","documentBase","propertiesService"],l.PropertiesComponentController=e}(Camel||(Camel={})),function(l){function e(n,i,r,o,a){function s(e){if(l.log.debug("Populate data",e),e.value){var t=JSON.parse(e.value);n.icon=UrlHelpers.join(o,"/img/icons/camel/marshal24.png"),n.title=t.dataformat.title+" ("+t.dataformat.name+")",n.labels=t.dataformat.label?t.dataformat.label.split(","):[],n.description=t.dataformat.description,n.definedProperties=a.getDefinedProperties(t.properties),n.defaultProperties=a.getDefaultProperties(t.properties),n.undefinedProperties=a.getUndefinedProperties(t.properties),n.viewTemplate="plugins/camel/html/nodePropertiesView.html",Core.$apply(n)}}setTimeout(function(){$("[data-toggle=tooltip]").tooltip()},1e3),function(){var e=null;if(e||(e=i.getSelectedMBeanName()),e){l.log.info("Calling informationJson");var t={type:"exec",mbean:e,operation:"informationJson"};r.request(t,Core.onSuccess(s))}}()}e.$inject=["$scope","workspace","jolokia","documentBase","propertiesService"],l.PropertiesDataFormatController=e}(Camel||(Camel={})),function(c){function e(o,a,s,n,i){function l(e){if(c.log.debug("Populate data",e),e.value){var t=JSON.parse(e.value);o.icon=UrlHelpers.join(n,"/img/icons/camel/endpoint24.png"),o.title=o.endpointUrl,o.labels=t.component.label?t.component.label.split(","):[],o.description=t.component.description,o.definedProperties=i.getDefinedProperties(t.properties),o.defaultProperties=i.getDefaultProperties(t.properties),o.undefinedProperties=i.getUndefinedProperties(t.properties),o.viewTemplate="plugins/camel/html/nodePropertiesView.html",Core.$apply(o)}}setTimeout(function(){$("[data-toggle=tooltip]").tooltip()},1e3),function(){var e=c.getSelectionCamelContextMBean(a),t=null;if(o.contextId&&o.endpointPath){var n=a.findMBeanWithProperties(c.jmxDomain,{context:o.contextId,type:"endpoints",name:o.endpointPath});n&&(t=n.objectName)}if(t||(t=a.getSelectedMBeanName()),t&&e){var i=s.request({type:"read",mbean:t,attribute:["EndpointUri"]}).value.EndpointUri;if(i){o.endpointUrl=i,c.log.debug("Calling explainEndpointJson for url:",i);var r={type:"exec",mbean:e,operation:"explainEndpointJson(java.lang.String,boolean)",arguments:[i,!0]};s.request(r,Core.onSuccess(l))}}}()}e.$inject=["$scope","workspace","jolokia","documentBase","propertiesService"],c.PropertiesEndpointController=e}(Camel||(Camel={})),function(a){function e(i,e,r){var t=a.getSelectedRouteNode(e);if(t)o(t);else var n=i.$on("routeXmlNode",function(){n(),o(t=a.getSelectedRouteNode(e))});function o(e){var t=a.getRouteNodeJSON(e),n=a.getCamelSchema(e.nodeName);!function(e,t){for(var n in e){var i=t.properties[n];i&&(i.value=e[n])}}(t,n),a.log.enabledFor(Logger.DEBUG)&&(a.log.debug("Properties - data:",JSON.stringify(t,null,"  ")),a.log.debug("Properties - schema:",JSON.stringify(n,null,"  "))),i.icon=a.getRouteNodeIcon(e),i.title=n.title,i.labels=n.group?n.group.split(","):[],i.description=n.description,i.definedProperties=r.getDefinedProperties(n.properties),i.defaultProperties=r.getDefaultProperties(n.properties),i.undefinedProperties=r.getUndefinedProperties(n.properties),i.viewTemplate="plugins/camel/html/nodePropertiesView.html"}setTimeout(function(){$("[data-toggle=tooltip]").tooltip()},1e3)}e.$inject=["$scope","workspace","propertiesService"],a.PropertiesRouteController=e}(Camel||(Camel={})),(Camel||(Camel={})).propertyListComponent={bindings:{title:"@",properties:"<"},template:'\n      <div ng-show="$ctrl.properties.length > 0">\n        <h3 title="">{{$ctrl.title}}</h3>\n        <dl class="dl-horizontal">\n          <dt ng-repeat-start="property in $ctrl.properties" title="{{property.name}}">\n            {{property.name}}\n          </dt>\n          <dd class="camel-properties-value" title="" ng-repeat-end>\n            <span class="pficon pficon-info camel-properties-info-circle" data-toggle="tooltip" data-placement="top" title="{{property.description}}"></span>\n            {{property.value}}\n          </dd>\n        </dl>\n      </div>\n    '},function(e){e.propertiesModule=angular.module("hawtio-camel-properties",[]).controller("Camel.PropertiesComponentController",e.PropertiesComponentController).controller("Camel.PropertiesDataFormatController",e.PropertiesDataFormatController).controller("Camel.PropertiesEndpointController",e.PropertiesEndpointController).controller("Camel.PropertiesRouteController",e.PropertiesRouteController).service("propertiesService",e.PropertiesService).component("propertyList",e.propertyListComponent).name}(Camel||(Camel={})),function(t){var e=function(){function e(e,t){this.jolokiaService=e,this.workspace=t}return e.$inject=["jolokiaService","workspace"],e.prototype.getRestServices=function(){var e=t.getSelectionCamelRestRegistry(this.workspace);return this.jolokiaService.execute(e,"listRestServices").then(function(e){var t=[];return _.values(e).forEach(function(e){_.values(e).forEach(function(e){t.push({url:e.url,method:_.upperCase(e.method),consumes:e.consumes,produces:e.produces,routeId:e.routeId})})}),t})},e}();t.RestServicesService=e}(Camel||(Camel={})),function(e){var t=function(){function e(e){var t=this;this.restServicesService=e,this.toolbarConfig={filterConfig:{fields:[{id:"url",title:"URL",placeholder:"Filter by URL...",filterType:"text"},{id:"method",title:"Method",placeholder:"Filter by method...",filterType:"select",filterValues:["GET","POST","PUT","DELETE","PATCH"]},{id:"consumes",title:"Consumes",placeholder:"Filter by consumes...",filterType:"text"},{id:"produces",title:"Produces",placeholder:"Filter by produces...",filterType:"text"},{id:"routeId",title:"Route ID",placeholder:"Filter by route ID...",filterType:"text"}],onFilterChange:function(){t.tableItems=Pf.filter(t.restServices,t.toolbarConfig.filterConfig)},resultsCount:0},isTableView:!0},this.tableConfig={selectionMatchProp:"url",showCheckboxes:!1},this.tableOptions={order:[[1,"asc"],[2,"asc"]]},this.tableColumns=[{header:"URL",itemField:"url"},{header:"Method",itemField:"method"},{header:"Consumes",itemField:"consumes"},{header:"Produces",itemField:"produces"},{header:"Route ID",itemField:"routeId"}]}return e.$inject=["restServicesService"],e.prototype.$onInit=function(){var t=this;this.restServicesService.getRestServices().then(function(e){t.restServices=e,t.tableItems=Pf.filter(t.restServices,t.toolbarConfig.filterConfig)})},e}();e.RestServicesController=t,e.restServicesComponent={template:'\n      <h2>REST Services</h2>\n      <p ng-if="!$ctrl.tableItems">Loading...</p>\n      <div ng-if="$ctrl.tableItems">\n        <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n        <pf-table-view config="$ctrl.tableConfig" dt-options="$ctrl.tableOptions" columns="$ctrl.tableColumns"\n                       items="$ctrl.tableItems"></pf-table-view>\n      </div>\n    ',controller:t}}(Camel||(Camel={})),function(e){e.restServicesModule=angular.module("hawtio-camel-rest-services",[]).component("restServices",e.restServicesComponent).service("restServicesService",e.RestServicesService).name}(Camel||(Camel={})),function(e){var t=function(){function e(e,t,n,i,r,o,a,s,l,c){this.name=e,this.state=t,this.mbean=n,this.uptime=i,this.exchangesCompleted=r,this.exchangesFailed=o,this.failuresHandled=a,this.exchangesTotal=s,this.exchangesInflight=l,this.meanProcessingTimeMillis=c,this.selected=!1}return Object.defineProperty(e.prototype,"meanProcessingTime",{get:function(){return this.meanProcessingTimeMillis+" ms"},enumerable:!0,configurable:!0}),e.prototype.isStarted=function(){return"Started"===this.state},e.prototype.isStopped=function(){return"Stopped"===this.state},e}();e.Route=t}(Camel||(Camel={})),function(n){var e=function(){function e(e,t){this.jolokiaService=e,this.workspace=t,this.Operation={START:"start()",STOP:"stop()",DELETE:"remove()"}}return e.$inject=["jolokiaService","workspace"],e.prototype.getRoute=function(t){var n=this;return this.jolokiaService.getMBean(t).then(function(e){return n.buildRoute(e,t)})},e.prototype.getRoutes=function(n){var i=this;return this.jolokiaService.getMBeans(n).then(function(e){return e.map(function(e,t){return i.buildRoute(e,n[t])})})},e.prototype.buildRoute=function(e,t){return new n.Route(e.RouteId,e.State,t,e.Uptime,e.ExchangesCompleted,e.ExchangesFailed,e.FailuresHandled,e.ExchangesTotal,e.ExchangesInflight,e.MeanProcessingTime)},e.prototype.startRoute=function(e){return this.startRoutes([e])},e.prototype.startRoutes=function(e){return this.executeOperationOnRoutes(this.Operation.START,e)},e.prototype.stopRoute=function(e){return this.stopRoutes([e])},e.prototype.stopRoutes=function(e){return this.executeOperationOnRoutes(this.Operation.STOP,e)},e.prototype.removeRoute=function(e){return this.removeRoutes([e])},e.prototype.removeRoutes=function(e){return this.executeOperationOnRoutes(this.Operation.DELETE,e)},e.prototype.executeOperationOnRoutes=function(e,t){var n=t.map(function(e){return e.mbean});return this.jolokiaService.executeMany(n,e)},e.prototype.canStartRoutes=function(e){return this.canExecuteOperationOnRoutes(this.Operation.START,e)},e.prototype.canStopRoutes=function(e){return this.canExecuteOperationOnRoutes(this.Operation.STOP,e)},e.prototype.canDeleteRoutes=function(e){return this.canExecuteOperationOnRoutes(this.Operation.DELETE,e)},e.prototype.canExecuteOperationOnRoutes=function(t,e){var n=this;return _.every(e,function(e){return n.workspace.hasInvokeRightsForName(e.mbean,t)})},e}();n.RoutesService=e}(Camel||(Camel={})),function(n){var e=function(){function e(e,t,n,i,r){var o=this;this.$timeout=e,this.$uibModal=t,this.workspace=n,this.treeService=i,this.routesService=r,this.startAction={name:"Start",actionFn:function(e){var t=o.getSelectedRoutes();o.routesService.startRoutes(t).then(function(e){Core.notification("success","Started "+Core.maybePlural(t.length,"route")+" successfully"),o.updateRoutes()}).catch(function(e){Core.notification("danger",e),o.updateRoutes()})},isDisabled:!0},this.stopAction={name:"Stop",actionFn:function(e){var t=o.getSelectedRoutes();o.routesService.stopRoutes(t).then(function(e){Core.notification("success","Stopped "+Core.maybePlural(t.length,"route")+" successfully"),o.updateRoutes()}).catch(function(e){Core.notification("danger",e),o.updateRoutes()})},isDisabled:!0},this.deleteAction={name:"Delete",actionFn:function(e){var t=o.getSelectedRoutes();o.$uibModal.open({templateUrl:"plugins/camel/html/deleteRouteWarningModal.html"}).result.then(function(){o.routesService.removeRoutes(t).then(function(e){Core.notification("success","Deleted "+Core.maybePlural(t.length,"route")+" successfully"),o.removeSelectedRoutes()}).catch(function(e){Core.notification("danger",e),o.updateRoutes()})})},isDisabled:!0},this.toolbarConfig=null,this.tableConfig={selectionMatchProp:"name",onCheckBoxChange:function(e){return o.enableDisableActions()}},this.tableColumns=[{header:"Name",itemField:"name"},{header:"State",itemField:"state"},{header:"Uptime",itemField:"uptime"},{header:"Completed",itemField:"exchangesCompleted"},{header:"Failed",itemField:"exchangesFailed"},{header:"Handled",itemField:"failuresHandled"},{header:"Total",itemField:"exchangesTotal"},{header:"Inflight",itemField:"exchangesInflight"},{header:"Mean time",itemField:"meanProcessingTime"}],this.showTable=!0}return e.$inject=["$timeout","$uibModal","workspace","treeService","routesService"],e.prototype.$onInit=function(){var e=this;this.loadRoutes().then(function(){return e.configureToolbar()})},e.prototype.configureToolbar=function(){var e=[],t=[];this.routesService.canStartRoutes(this.routes)&&e.push(this.startAction),this.routesService.canStopRoutes(this.routes)&&e.push(this.stopAction),this.routesService.canDeleteRoutes(this.routes)&&t.push(this.deleteAction),n.log.debug("RBAC - Rendered routes actions:",e.concat(t).map(function(e){return e.name})),(0<e.length||0<t.length)&&(this.toolbarConfig={actionsConfig:{primaryActions:e,moreActions:t},isTableView:!0})},e.prototype.getSelectedRoutes=function(){return this.routes.filter(function(e){return e.selected})},e.prototype.enableDisableActions=function(){var e=this.getSelectedRoutes();this.startAction.isDisabled=!e.some(function(e){return"Stopped"===e.state}),this.stopAction.isDisabled=!e.some(function(e){return"Started"===e.state}),this.deleteAction.isDisabled=!e.every(function(e){return"Stopped"===e.state})},e.prototype.loadRoutes=function(){var i=this;return this.treeService.getSelectedMBean().then(function(e){if(e.children){var t=e.children.filter(function(e){return null!=e.objectName}),n=_.map(t,function(e){return e.objectName});return i.routesService.getRoutes(n).then(function(e){return i.routes=e})}})},e.prototype.updateRoutes=function(){var n=this,e=_.map(this.routes,function(e){return e.mbean});this.routesService.getRoutes(e).then(function(e){for(var t=0;t<e.length;t++)n.routes[t].state!==e[t].state&&(n.routes[t]=angular.extend({},n.routes[t],{state:e[t].state}));n.enableDisableActions(),n.repaintTable()})},e.prototype.removeSelectedRoutes=function(){_.remove(this.routes,function(e){return e.selected}),this.workspace.loadTree(),this.enableDisableActions()},e.prototype.repaintTable=function(){var e=this;this.showTable=!1,this.$timeout(function(){return e.showTable=!0})},e}();n.RoutesController=e,n.routesComponent={template:'\n      <h2>Routes</h2>\n      <p ng-if="!$ctrl.routes">Loading...</p>\n      <div ng-if="$ctrl.routes">\n        <div ng-if="$ctrl.toolbarConfig">\n          <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n        </div>\n        <div ng-if="$ctrl.showTable">\n          <pf-table-view class="camel-routes-table" config="$ctrl.tableConfig" columns="$ctrl.tableColumns"\n                         items="$ctrl.routes"></pf-table-view>\n        </div>\n      </div>\n    ',controller:e}}(Camel||(Camel={})),function(e){var t=function(){function e(e,t,n,i){this.$scope=e,this.$uibModal=t,this.workspace=n,this.routesService=i,this.route=null}return e.$inject=["$scope","$uibModal","workspace","routesService"],e.prototype.$onInit=function(){var n=this;this.unsubscribe=this.$scope.$on(Jmx.TreeEvent.NodeSelected,function(e,t){n.workspace.isRoute()?n.routesService.getRoute(t.objectName).then(function(e){return n.route=e}):n.route=null})},e.prototype.$onDestroy=function(){this.unsubscribe()},e.prototype.start=function(){var t=this;this.route.isStarted()||this.routesService.startRoute(this.route).then(function(e){Core.notification("success","Route started successfully"),t.routesService.getRoute(t.route.mbean).then(function(e){return t.route=e})}).catch(function(e){Core.notification("danger",e)})},e.prototype.stop=function(){var t=this;this.route.isStopped()||this.routesService.stopRoute(this.route).then(function(e){Core.notification("success","Route stopped successfully"),t.routesService.getRoute(t.route.mbean).then(function(e){return t.route=e})}).catch(function(e){Core.notification("danger",e)})},e.prototype.delete=function(){var t=this;this.route.isStarted()||this.$uibModal.open({templateUrl:"plugins/camel/html/deleteRouteWarningModal.html"}).result.then(function(){t.routesService.removeRoute(t.route).then(function(e){Core.notification("success","Route deleted successfully"),t.route=null,t.workspace.loadTree()}).catch(function(e){Core.notification("danger",e)})})},e}();e.RouteActionsController=t,e.routeActionsComponent={template:'\n      <div class="dropdown camel-main-actions" ng-show="$ctrl.route"\n        hawtio-show object-name-model="$ctrl.route.mbean" method-name="stop" mode="remove">\n        <button type="button" id="dropdownMenu1" class="btn btn-default dropdown-toggle"\n          data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">\n          <span class="fa" ng-class="{\'fa-play\': $ctrl.route.isStarted(), \'fa-stop\': $ctrl.route.isStopped()}"></span>\n          &nbsp;\n          {{$ctrl.route.state}}\n          &nbsp;\n          <span class="caret"></span>\n        </button>\n        <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">\n          <li ng-class="{disabled: $ctrl.route.isStarted()}">\n            <a href="#" ng-click="$ctrl.start()">Start</a>\n          </li>\n          <li ng-class="{disabled: $ctrl.route.isStopped()}">\n            <a href="#" ng-click="$ctrl.stop()">Stop</a>\n          </li>\n          <li ng-class="{disabled: $ctrl.route.isStarted()}">\n            <a href="#" ng-click="$ctrl.delete()">Delete</a>\n          </li>\n        </ul>\n      </div>\n    ',controller:t}}(Camel||(Camel={})),function(e){e.routesModule=angular.module("hawtio-camel-routes",[]).component("routes",e.routesComponent).component("routeActions",e.routeActionsComponent).service("routesService",e.RoutesService).name}(Camel||(Camel={})),function(i){var e=function(){function e(e,t,n,i,r){this.$scope=e,this.$location=t,this.workspace=n,this.jolokia=i,(this.$element=r).addClass("tree-nav-sidebar-content")}return e.$inject=["$scope","$location","workspace","jolokia","$element"],e.prototype.$onInit=function(){var e=this;this.$scope.$on("$destroy",function(){return e.removeTree()}),this.$scope.$on("$routeChangeStart",function(){return Jmx.updateTreeSelectionFromURL(e.$location,$(i.treeElementId))}),this.$scope.$on(Jmx.TreeEvent.Updated,function(){return e.populateTree()}),this.populateTree()},e.prototype.updateSelectionFromURL=function(){Jmx.updateTreeSelectionFromURLAndAutoSelect(this.$location,$(i.treeElementId),function(e){var t=e.children;if(t&&1===t.length){var n=t[0].children;if(n&&n.length){var i=n[0];if("routes"===i.typeName)return i}}return null},!0),this.workspace.broadcastSelectionNode()},e.prototype.populateTree=function(){var e=this.workspace.tree;if(e){var t=e.findDescendant(function(e){return"camelContexts"===e.key});if(t)this.removeTree(),Jmx.enableTree(this.$scope,this.$location,this.workspace,$(i.treeElementId),[t]),this.updateSelectionFromURL();else if(e.children&&0<e.children.length){var n=e.children[0];this.$location.path("/jmx/attributes").search({nid:n.id})}}},e.prototype.removeTree=function(){var e=$(i.treeElementId).treeview(!0);if(e.clearSearch){e.clearSearch();var t=function(e){delete e.$el,e.nodes&&e.nodes.forEach(t)};t(this.workspace.tree),e.remove()}},e}();i.TreeController=e}(Camel||(Camel={})),function(t){var e=function(){function e(e,t){this.$scope=e,this.$element=t,this.filter="",this.result=[],t.addClass("tree-nav-sidebar-header")}return e.$inject=["$scope","$element"],e.prototype.$onInit=function(){var n=this;this.$scope.$watch(angular.bind(this,function(){return n.filter}),function(e,t){e!==t&&n.search(e)})},e.prototype.search=function(e){var i=this;_.debounce(function(e){var t,n=i.tree().search(e,{ignoreCase:!0,exactMatch:!1,revealResults:!0});i.result.length=0,(t=i.result).push.apply(t,n),Core.$apply(i.$scope)},300,{leading:!1,trailing:!0})(e)},e.prototype.tree=function(){return $(t.treeElementId).treeview(!0)},e.prototype.expandAll=function(){return this.tree().expandNode(this.tree().getNodes(),{levels:HawtioTree.getMaxTreeLevel(this.tree()),silent:!0})},e.prototype.contractAll=function(){return this.tree().collapseNode(this.tree().getNodes(),{ignoreChildren:!0,silent:!0})},e}();t.TreeHeaderController=e}(Camel||(Camel={})),function(e){e.treeHeaderComponent={templateUrl:"plugins/camel/html/tree/header.html",controller:e.TreeHeaderController},e.treeComponent={templateUrl:"plugins/camel/html/tree/content.html",controller:e.TreeController}}(Camel||(Camel={})),function(e){e.treeModule=angular.module("hawtio-camel-tree",[]).component("camelTreeHeader",e.treeHeaderComponent).component("camelTree",e.treeComponent).name,e.treeElementId="#cameltree"}(Camel||(Camel={})),(Camel||(Camel={})).typeConvertersComponent={template:"\n      <h2>Type Converters</h2>\n      <type-converters-statistics></type-converters-statistics>\n      <type-converters-table></type-converters-table>\n    "},function(e){var t=function(){function e(e){angular.extend(this,e)}return e.prototype.reset=function(){this.AttemptCounter=0,this.HitCounter=0,this.MissCounter=0,this.FailedCounter=0},e}();e.TypeConvertersStatistics=t}(Camel||(Camel={})),function(e){var t=function(e,t){this.from=e,this.to=t};(Camel||(Camel={})).TypeConverter=t}(),function(o){var e=function(){function e(e,t){this.jolokiaService=e,this.treeService=t}return e.$inject=["jolokiaService","treeService"],e.prototype.enableStatistics=function(){var t=this;return this.getTypeConverterObjectName().then(function(e){return t.jolokiaService.setAttribute(e,"StatisticsEnabled",!0)})},e.prototype.disableStatistics=function(){var t=this;return this.getTypeConverterObjectName().then(function(e){return t.jolokiaService.setAttribute(e,"StatisticsEnabled",!1)})},e.prototype.resetStatistics=function(){var t=this;return this.getTypeConverterObjectName().then(function(e){return t.jolokiaService.execute(e,"resetTypeConversionCounters")})},e.prototype.getStatistics=function(){var t=this,n=["AttemptCounter","HitCounter","MissCounter","FailedCounter"];return this.getTypeConverterObjectName().then(function(e){return t.jolokiaService.getAttributes(e,n)}).then(function(e){return new o.TypeConvertersStatistics(e)})},e.prototype.getTypeConverters=function(){var t=this;return this.getTypeConverterObjectName().then(function(e){return t.jolokiaService.execute(e,"listTypeConverters").then(function(e){var t=[];for(var n in e){var i=e[n];for(var r in i)t.push(new o.TypeConverter(n,r))}return t})})},e.prototype.getTypeConverterObjectName=function(){return this.treeService.findMBeanWithProperties("org.apache.camel",{type:"services",name:"*TypeConverter"}).then(function(e){return e.objectName})},e}();o.TypeConvertersService=e}(Camel||(Camel={})),function(e){var t=function(){function e(e,t){var n=this;this.$timeout=e,this.typeConvertersService=t,this.reloadDelay=1e4,this.enableStatisticsAction={name:"Enable statistics",actionFn:function(){return n.enableStatistics()}},this.disableStatisticsAction={name:"Disable statistics",actionFn:function(){return n.disableStatistics()}},this.resetStatisticsAction={name:"Reset statistics",actionFn:function(){return n.resetStatistics()},isDisabled:!0},this.toolbarConfig={actionsConfig:{primaryActions:[this.enableStatisticsAction,this.resetStatisticsAction]}}}return e.$inject=["$timeout","typeConvertersService"],e.prototype.enableStatistics=function(){this.typeConvertersService.enableStatistics(),this.loadDataPeriodically(),this.showDisableStatisticsButton()},e.prototype.showDisableStatisticsButton=function(){this.toolbarConfig.actionsConfig.primaryActions[0]=this.disableStatisticsAction,this.resetStatisticsAction.isDisabled=!1},e.prototype.disableStatistics=function(){this.cancelTimer(),this.typeConvertersService.disableStatistics(),this.showEnableStatisticsButton()},e.prototype.showEnableStatisticsButton=function(){this.toolbarConfig.actionsConfig.primaryActions[0]=this.enableStatisticsAction,this.resetStatisticsAction.isDisabled=!0,this.statistics=null},e.prototype.resetStatistics=function(){this.typeConvertersService.resetStatistics(),this.statistics.reset()},e.prototype.$onDestroy=function(){this.cancelTimer()},e.prototype.loadDataPeriodically=function(){var t=this;this.typeConvertersService.getStatistics().then(function(e){return t.statistics=e}).then(function(){return t.promise=t.$timeout(function(){return t.loadDataPeriodically()},t.reloadDelay)})},e.prototype.cancelTimer=function(){this.$timeout.cancel(this.promise)},e}();e.TypeCovertersStatisticsController=t,e.typeConvertersStatisticsComponent={template:"\n      <pf-toolbar config=\"$ctrl.toolbarConfig\"></pf-toolbar>\n      <dl class=\"dl-horizontal camel-type-converters-statistics\">\n        <dt>Attempts</dt>\n        <dd>{{$ctrl.statistics ? $ctrl.statistics.AttemptCounter : '-'}}</dd>\n        <dt>Hits</dt>\n        <dd>{{$ctrl.statistics ? $ctrl.statistics.HitCounter : '-'}}</dd>\n        <dt>Misses</dt>\n        <dd>{{$ctrl.statistics ? $ctrl.statistics.MissCounter : '-'}}</dd>\n        <dt>Failures</dt>\n        <dd>{{$ctrl.statistics ? $ctrl.statistics.FailedCounter : '-'}}</dd>\n      </dl>\n    ",controller:t}}(Camel||(Camel={})),function(e){var t=function(){function e(e){var t=this;this.typeConvertersService=e,this.toolbarConfig={filterConfig:{fields:[{id:"from",title:"From",placeholder:"Filter by from...",filterType:"text"},{id:"to",title:"To",placeholder:"Filter by to...",filterType:"text"}],onFilterChange:function(e){t.applyFilters(e)},resultsCount:0},isTableView:!0},this.tableConfig={selectionMatchProp:"from",showCheckboxes:!1},this.tableDtOptions={order:[[0,"asc"],[1,"asc"]]},this.tableColumns=[{header:"From",itemField:"from"},{header:"To",itemField:"to"}]}return e.$inject=["typeConvertersService"],e.prototype.$onInit=function(){var t=this;this.typeConvertersService.getTypeConverters().then(function(e){t.allTypeConverters=e,t.applyFilters([])})},e.prototype.applyFilters=function(e){var n=this;this.typeConverters=this.allTypeConverters,e.forEach(function(e){var t=new RegExp(e.value,"i");switch(e.id){case"from":n.typeConverters=n.typeConverters.filter(function(e){return t.test(e.from)});break;case"to":n.typeConverters=n.typeConverters.filter(function(e){return t.test(e.to)})}}),this.toolbarConfig.filterConfig.resultsCount=this.typeConverters.length},e}();e.TypeCovertersTableController=t,e.typeConvertersTableComponent={template:'\n      <div class="table-view">\n        <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n        <pf-table-view config="$ctrl.tableConfig"\n                       dt-options="$ctrl.tableDtOptions"\n                       columns="$ctrl.tableColumns"\n                       items="$ctrl.typeConverters"></pf-table-view>\n      </div>\n    ',controller:t}}(Camel||(Camel={})),function(e){e.typeConvertersModule=angular.module("hawtio-camel-type-converters",[]).component("typeConverters",e.typeConvertersComponent).component("typeConvertersStatistics",e.typeConvertersStatisticsComponent).component("typeConvertersTable",e.typeConvertersTableComponent).service("typeConvertersService",e.TypeConvertersService).name}(Camel||(Camel={})),function(h){h.endpointCategories={bigdata:{label:"Big Data",endpoints:["hdfs","hbase","lucene","solr"],endpointIcon:"img/icons/camel/endpointRepository24.png"},database:{label:"Database",endpoints:["couchdb","elasticsearch","hbase","jdbc","jpa","hibernate","mongodb","mybatis","sql"],endpointIcon:"img/icons/camel/endpointRepository24.png"},cloud:{label:"Cloud",endpoints:["aws-cw","aws-ddb","aws-sdb","aws-ses","aws-sns","aws-sqs","aws-s3","gauth","ghhtp","glogin","gtask","jclouds"]},core:{label:"Core",endpoints:["bean","direct","seda"]},messaging:{label:"Messaging",endpoints:["jms","activemq","amqp","cometd","cometds","mqtt","netty","vertx","websocket"],endpointIcon:"img/icons/camel/endpointQueue24.png"},mobile:{label:"Mobile",endpoints:["apns"]},sass:{label:"SaaS",endpoints:["salesforce","sap-netweaver"]},social:{label:"Social",endpoints:["atom","facebook","irc","ircs","rss","smpp","twitter","weather"]},storage:{label:"Storage",endpointIcon:"img/icons/camel/endpointFolder24.png",endpoints:["file","ftp","sftp","scp","jsch"]},template:{label:"Templating",endpoints:["freemarker","velocity","xquery","xslt","scalate","string-template"]}},h.endpointToCategory={},h.endpointIcon="img/icons/camel/endpoint24.png",h.endpointConfigurations={drools:{icon:"img/icons/camel/endpointQueue24.png"},quartz:{icon:"img/icons/camel/endpointTimer24.png"},facebook:{icon:"img/icons/camel/endpoints/facebook24.jpg"},salesforce:{icon:"img/icons/camel/endpoints/salesForce24.png"},sap:{icon:"img/icons/camel/endpoints/SAPe24.png"},"sap-netweaver":{icon:"img/icons/camel/endpoints/SAPNetweaver24.jpg"},timer:{icon:"img/icons/camel/endpointTimer24.png"},twitter:{icon:"img/icons/camel/endpoints/twitter24.png"},weather:{icon:"img/icons/camel/endpoints/weather24.jpg"}},h.endpointForms={file:{tabs:{Options:["*"]}},activemq:{tabs:{Connection:["clientId","transacted","transactedInOut","transactionName","transactionTimeout"],Producer:["timeToLive","priority","allowNullBody","pubSubNoLocal","preserveMessageQos"],Consumer:["concurrentConsumers","acknowledgementModeName","selector","receiveTimeout"],Reply:["replyToDestination","replyToDeliveryPersistent","replyToCacheLevelName","replyToDestinationSelectorName"],Options:["*"]}}},h.endpointForms.jms=h.endpointForms.activemq,angular.forEach(h.endpointCategories,function(t,e){t.id=e,angular.forEach(t.endpoints,function(e){h.endpointToCategory[e]=t})});var t={route:{Overview:["id","description"],Advanced:["*"]}};function r(e){return h.endpointToCategory[e]||h.endpointCategories.core}h.getEndpointIcon=function(e){var t=h.getEndpointConfig(e,null),n=Core.pathGet(t,["icon"]);if(!n){var i=r(e);n=Core.pathGet(i,["endpointIcon"])}return n||h.endpointIcon},h.getEndpointConfig=function(e,t){var n=h.endpointConfigurations[e];return n||(n={},h.endpointConfigurations[e]=n),n.label||(n.label=e),n.icon||(n.icon=Core.pathGet(t,["endpointIcon"])||h.endpointIcon),n.category||(n.category=t),n},h.getEndpointCategory=r,h.getConfiguredCamelModel=function(){var e=h._apacheCamelModel,i=e.definitions;return i&&angular.forEach(t,function(e,t){var n=i[t];n&&(n.tabs||(n.tabs=e))}),e},h.initEndpointChooserScope=function(c,d,u,p,e){c.selectedComponentName=null,c.endpointParameters={},c.endpointPath="",c.schema={definitions:{}},c.jolokia=e,c.profileWorkspace=p;var r={silent:!0};function t(e){c.componentNames=e,h.log.debug("onComponents: "+e),c.hasComponentNames=!!c.componentNames,Core.$apply(c)}function n(t){if(t)try{var e=JSON.parse(t),n=c.selectedComponentName;!function(e,t){var n=h.endpointForms[e];n&&t&&n.tabs&&(t.tabs=n.tabs)}(n,e),c.endpointSchema=e,c.schema.definitions[n]=e,c.loadedEndpointSchema=n,Core.$apply(c)}catch(e){h.log.error("Failed to parse JSON "+e),h.log.error("JSON: "+t)}}function o(){var e=c.profileWorkspace;if(!e){var t=c.jolokia;t&&(e=function(e,t,n,i,r,o,a){void 0===r&&(r=null),void 0===o&&(o=null),void 0===a&&(a=null);var s={xhr:null,listMethod:t.listMethod,listMBean:t.listMBean},l=Core.lazyLoaders,c=new Jmx.Workspace(e,s,l,n,o,a,i,r);return h.log.info("Loading the profile using jolokia: "+e),c.loadTree(),c}(t,p.jolokiaStatus,d,u),c.profileWorkspace=e)}e||(h.log.info("No profileWorkspace found so defaulting it to workspace for now"),e=p);var n,i,r=c.selectedComponentName;angular.isDefined(c.camelSelectionDetails)&&(n=c.camelSelectionDetails.selectedCamelContextId,i=c.camelSelectionDetails.selectedRouteId);var o,a=h.camelContextMBeansById(e);if(n){var s=a[n];if(s)return s.objectName}if(i){var l=h.camelContextMBeansByRouteId(e);if(o=Core.pathGet(l,[i,"mbean"]))return o}if(r&&(l=h.camelContextMBeansByComponentName(e),o=Core.pathGet(l,[r,"mbean"])))return o;return _.first(_.values(a)).objectName}c.$watch("selectedComponentName",function(){c.selectedComponentName!==c.loadedComponentName&&(c.endpointParameters={},c.loadEndpointSchema(c.selectedComponentName),c.loadedComponentName=c.selectedComponentName)}),c.endpointCompletions=function(e){var t=null,n=o(),i=c.selectedComponentName;return n&&i&&e&&(t=c.jolokia.execute(n,"completeEndpointPath",i,{},e,Core.onSuccess(null,r))),t||[]},c.loadEndpointNames=function(){c.componentNames=null;var e=o();e?c.jolokia.execute(e,"findComponentNames",Core.onSuccess(t,r)):h.log.warn("WARNING: No camel context mbean so cannot load component names")},c.loadEndpointSchema=function(e){var t=o();t&&e&&e!==c.loadedEndpointSchema&&(c.selectedComponentName=e,c.jolokia.execute(t,"componentParameterJsonSchema",e,Core.onSuccess(n,r)))}}}(Camel||(Camel={})),function(N){function P(e){var t=null;if(e&&!(t=e.getAttribute("uri"))){var n=e.getAttribute("ref");if(n){var i=e.getAttribute("method");t=i?n+"."+i+"()":"ref:"+n}}return t}function n(e,t){return void 0===t&&(t="  "),e+t}function p(d,e,t){if(d){var u=n(t);angular.forEach(e,function(e,t){return function t(e,n,i){if(void 0===i&&(i=!1),angular.isArray(e))$(d).children(n).remove(),angular.forEach(e,function(e){t(e,n,!0)});else if(angular.isObject(e)){var r=null;if("expression"===n){var o=e.language;o&&(n=o,r=e.expression,delete(e=angular.copy(e)).expression,delete e.language)}var a=$(d).children(n),s=null;if(!i&&a&&a.length)s=a[0];else{var l=d.ownerDocument||document;d.appendChild(l.createTextNode("\n"+u)),s=l.createElementNS(d.namespaceURI,n),r&&s.appendChild(l.createTextNode(r)),d.appendChild(s)}p(s,e,u),r&&a.text(r)}else if(e)if(_.startsWith(n,"_"));else{var c=e.toString();d.setAttribute(n,c)}else d.removeAttribute(n)}(e,t,!1)})}}function D(e){var t=null;if(e){var n=e.localName;t=n?O(n):e}if(t){var i=t.icon||"generic24.png";return UrlHelpers.join("img/icons/camel/",i)}return null}function O(e){return angular.isObject(e)?e:Forms.lookupDefinition(e,N._apacheCamelModel)}function a(e){return null!=Forms.lookupDefinition(e,N._apacheCamelModel)}function t(e){return N._apacheCamelModel.languages[e]}function h(n,e,i){(n.routeXmlNode=e).setAttribute("_cid",n.key);var r=[];return $(e).children("*").each(function(e,t){r.push(function(e,t,n){var i=t.localName,r=O(i);if(r){var o=D(r),a=new Jmx.Folder(i);a.domain=N.jmxDomain,a.typeName="routeNode",g(a,t,r),a.folderNames=e.folderNames;for(var s=t.getAttribute("id")||i,l=e.key+"_"+Core.toSafeDomID(s),c=1,d=!0;d;){var u=l+c;_.find(e.children,{key:u})?c+=1:(d=!1,l=u)}a.key=l,a.image=o,a.routeXmlNode=t;var p=h(a,t,n);return p.forEach(function(e){return a.moveChild(e)}),a}}(n,t,i))}),i.$rootScope.$broadcast("routeXmlNode",e),_.compact(r)}function i(e){var t=e?e.tree:null;return t?t.get(N.jmxDomain):null}function r(e,t){var n=i(e);return n&&t?n.findDescendant(function(e){return t===e.text}):null}function o(e){var t=Core.pathGet(e,["routeXmlNode","localName"]);return"from"===t||"to"===t?"endpoint":t}function g(e,t,n){var i=t.localName,r=t.getAttribute("id"),o=n.title||i,a=n.tooltip||n.description||o;if(r)o=r;else{var s=P(t);if(s){var l=(o=s).split("?");l&&1<l.length&&(o=l[0]),a+=" "+s}else{var c=$(t).children("*");if(c&&c.length){var d=c[0],u=d.localName,p=null;N.isCamelLanguage(u)&&((p=d.textContent)||(p=d.getAttribute("expression"))),p&&(o+=" "+p,a+=" "+u+" expression")}}}return e.text=o,e.tooltip=a,o}function l(e){var t=s(e);return t?t.objectName:null}function s(e){if(e){var t=u(e),n=e.selection,i=e.tree;if(i&&n){var r=n.domain;if(r&&t)return i.findDescendant(function(e){return"context"===e.typeName&&e.domain===r&&e.text===t})}}return null}function c(e,t){if(t.entries&&"routes"===t.entries.type){var n=e.tree.findDescendant(function(e){return"context"===e.typeName&&"org.apache.camel"===e.domain&&e.entries.context===t.entries.context});if(n)return n.objectName}return null}function d(e){if(e){var t=u(e),n=e.selection,i=e.tree;if(i&&n){var r=n.domain;if(r&&t){var o=i.navigate(r,"Camel Contexts",t,"MBeans","services");if(o&&o.children){var a=_.find(o.children,function(e){return _.startsWith(e.text,"DefaultRestRegistry")});if(a)return a.objectName}}}}return null}function u(e){var t=e.selection;if(t){var n=t.findAncestor(function(e){return"context"===e.typeName});if(n)return n.text}}function m(e,t){var n=t||e.selection,i=null;if(n&&n&&n.entries){var r=n.entries.type,o=n.entries.name;"routes"===r&&o&&(i=Core.trimQuotes(o))}return i}function f(e,t){var n=s(e);return n&&null!=n.parent?(n.version||(n.version=t.getAttribute(n.objectName,"CamelVersion",Core.onSuccess(null))),n.version):null}function b(e){return e?_.startsWith(e,"java.lang")?e.substr(10):e:""}function L(e,t,n){switch(e.localName){case"method":n||(e.getAttribute("bean")?t+=" "+e.getAttribute("bean"):e.getAttribute("ref")?t+=" "+e.getAttribute("ref"):e.getAttribute("beanType")&&(t+=" "+e.getAttribute("beanType"))),e.getAttribute("method")&&(t+=" "+e.getAttribute("method"))}return t}function v(e,r){var o={},t=e.tree;if(t){var n=t.navigate(N.jmxDomain,"Camel Contexts");n&&angular.forEach(n.children,function(e){var t=e.navigate(r);if(e&&t&&e.children&&e.children.length){var n=e.objectName;if(n){var i={folder:e,mbean:n};angular.forEach(t.children,function(e){var t=e.text;t&&(o[t]=i)})}}})}return o}N.pluginName="hawtio-integration-camel",N.log=Logger.get(N.pluginName),N.jmxDomain="org.apache.camel",N.defaultMaximumLabelWidth=34,N.defaultCamelMaximumTraceOrDebugBodyLength=5e3,N.defaultCamelTraceOrDebugIncludeStreams=!1,N.defaultCamelRouteMetricMaxSeconds=10,N.defaultHideOptionDocumentation=!1,N.defaultHideOptionDefaultValue=!1,N.defaultHideOptionUnusedValue=!1,N._apacheCamelModel=void 0,hawtioPluginLoader.registerPreBootstrapTask(function(e){N._apacheCamelModel=window._apacheCamelModel,N.log.debug("Setting apache camel model: ",N._apacheCamelModel),e()}),N.hasRestServices=function(e,t){var n=d(e);return!!n&&0<t.getAttribute(n,"NumberOfRestServices")},N.processRouteXml=function(e,t,n,r){var o=m(e,n),i=c(e,n)||l(e);if(i&&o){var a=t.request({type:"exec",mbean:i,operation:"dumpRoutesAsXml()"},Core.onSuccess(null)),s=null;a&&a.value?s=a.value:a&&a.error&&N.log.error("Jolokia request dumpRoutesAsXml failed:",a.error),function(e){var t=null;if(e){var n=$.parseXML(e),i=$(n).find("route[id='"+o+"']");i&&i.length&&(t=i[0])}r(t)}(s)}else o||N.log.warn("No selectedRouteId when trying to lazy load the route!"),r(null)},N.getRouteNodeUri=P,N.getRouteFolderJSON=function(e,t){void 0===t&&(t={});var n=e.camelNodeData;if(!n){var i=e.routeXmlNode;i&&(n=N.getRouteNodeJSON(i)),n||(n=t),e.camelNodeData=n}return n},N.getRouteNodeJSON=function r(e,o){if(void 0===o&&(o={}),e){angular.forEach(e.attributes,function(e){o[e.name]=e.value});var t=e.localName;"route"!==t&&"routes"!==t&&"camelContext"!==t&&"rests"!==t&&$(e).children("*").each(function(e,t){var n=t.localName;if(N.camelLanguageSettings(n))o.expression={language:n,expression:t.textContent};else if(!a(n)){var i=r(t);i&&(i.expression&&(i=i.expression),"completionSize"===n?n="completionSizeExpression":"completionTimeout"===n&&(n="completionTimeoutExpression"),o[n]=i)}})}return o},N.increaseIndent=n,N.setRouteNodeJSON=p,N.getRouteNodeIcon=D,N.getSelectedEndpointName=function(e){var t=e.selection;if(t&&t.objectName&&t.typeName&&"endpoints"===t.typeName){var n=Core.parseMBean(t.objectName);if(!n)return null;var i=n.attributes;if(!i)return null;if(!("name"in i))return null;var r=i.name;return r=r.replace("\\?","?"),_.startsWith(r,'"')&&(r=r.substr(1)),_.endsWith(r,'"')&&(r=r.substr(0,r.length-1)),r}return null},N.escapeEndpointUriNameForJmx=function(e){if(angular.isString(e)){var t=e.replace("?","\\?");return t=(t=t.replace(/\:(\/[^\/])/,"://$1")).replace(/\:([^\/])/,"://$1")}return e},N.getContextAndTargetEndpoint=function(e){return{uri:N.getSelectedEndpointName(e),mbean:N.getSelectionCamelContextMBean(e)}},N.getSelectedRouteNode=function(e){var t=e.selection||e.getSelectedMBean();return t&&N.jmxDomain===t.domain?t.routeXmlNode:null},N.isRouteNode=function(e){var t=e.selection||e.getSelectedMBean();return t&&t.domain===N.jmxDomain&&"routeNode"===t.typeName},N.getCamelSchema=O,N.isCamelPattern=a,N.camelLanguageSettings=t,N.isCamelLanguage=function(e){return!(!t(e)&&"expression"!==e)},N.loadRouteChildren=h,N.getRootCamelFolder=i,N.getCamelContextFolder=r,N.getCamelContextMBean=function(e,t){var n=r(e,t);return n?n.objectName:null},N.getFolderCamelNodeId=o,N.createFolderXmlTree=function a(e,s,t){void 0===t&&(t=N.increaseIndent(""));var n=e.data||e,l=0,i=o(n);if(n){if(!s){s=document.createElement(i);var r=N.getRouteFolderJSON(n);r&&N.setRouteNodeJSON(s,r,t)}var c=s.ownerDocument||document,d=s.namespaceURI,u="route"!==i,p=N.increaseIndent(t);angular.forEach(e.children||e.getChildren(),function(e){var t=e.data||e,n=N.getFolderCamelNodeId(t),i=N.getRouteFolderJSON(t);if(n&&i){if("endpoint"===n&&(u?n="to":(n="from",u=!0)),"expression"===n){var r=i.language;r&&(n=r)}s.appendChild(c.createTextNode("\n"+p));var o=c.createElementNS(d,n);N.setRouteNodeJSON(o,i,p),s.appendChild(o),l+=1,a(e,o,p)}}),l&&s.appendChild(c.createTextNode("\n"+t))}return s},N.updateRouteNodeLabelAndTooltip=g,N.getSelectionCamelContextMBean=l,N.getSelectionCamelContext=s,N.getExpandingFolderCamelContextMBean=c,N.getSelectionCamelContextEndpoints=function(e){if(e){var t=u(e),n=e.selection,i=e.tree;if(i&&n){var r=n.domain;if(r&&t)return i.navigate(r,"Camel Contexts",t,"endpoints")}}return null},N.getSelectionCamelTraceMBean=function(e){if(e){var t=u(e),n=e.selection,i=e.tree;if(i&&n){var r=n.domain;if(r&&t){var o=i.navigate(r,"Camel Contexts",t,"MBeans","tracer");if(o&&o.children){var a=_.find(o.children,function(e){return _.startsWith(e.text,"BacklogTracer")});if(a)return a.objectName}}}}return null},N.getSelectionCamelDebugMBean=function(e){if(e){var t=u(e),n=e.selection,i=e.tree;if(i&&n){var r=n.domain;if(r&&t){var o=i.navigate(r,"Camel Contexts",t,"MBeans","tracer");if(o&&o.children){var a=_.find(o.children,function(e){return _.startsWith(e.text,"BacklogDebugger")});if(a)return a.objectName}}}}return null},N.getSelectionCamelTypeConverter=function(e){if(e){var t=u(e),n=e.selection,i=e.tree;if(i&&n){var r=n.domain;if(r&&t){var o=i.navigate(r,"Camel Contexts",t,"MBeans","services");if(o&&o.children){var a=_.find(o.children,function(e){return _.endsWith(e.text,"TypeConverter")});if(a)return a.objectName}}}}return null},N.getSelectionCamelRestRegistry=d,N.getSelectionCamelEndpointRuntimeRegistry=function(e){if(e){var t=u(e),n=e.selection,i=e.tree;if(i&&n){var r=n.domain;if(r&&t){var o=i.navigate(r,"Camel Contexts",t,"MBeans","services");if(o&&o.children){var a=_.find(o.children,function(e){return _.startsWith(e.text,"DefaultRuntimeEndpointRegistry")});if(a)return a.objectName}}}}return null},N.getSelectionCamelInflightRepository=function(e){if(e){var t=u(e),n=e.selection,i=e.tree;if(i&&n){var r=n.domain;if(r&&t){var o=i.navigate(r,"Camel Contexts",t,"MBeans","services");if(o&&o.children){var a=_.find(o.children,function(e){return _.startsWith(e.text,"DefaultInflightRepository")});if(a)return a.objectName}}}}return null},N.getSelectionCamelBlockedExchanges=function(e){if(e){var t=u(e),n=e.selection,i=e.tree;if(i&&n){var r=n.domain;if(r&&t){var o=i.navigate(r,"Camel Contexts",t,"MBeans","services");if(o&&o.children){var a=_.find(o.children,function(e){return _.startsWith(e.text,"DefaultAsyncProcessorAwaitManager")});if(a)return a.objectName}}}}return null},N.getSelectionCamelRouteMetrics=function(e){if(e){var t=u(e),n=e.selection,i=e.tree;if(i&&n){var r=n.domain;if(r&&t){var o=i.navigate(r,"Camel Contexts",t,"MBeans","services");if(o&&o.children){var a=_.find(o.children,function(e){return _.startsWith(e.text,"MetricsRegistryService")});if(a)return a.objectName}}}}return null},N.getContextId=u,N.iconClass=function(e){if(e)switch(e.toLowerCase()){case"started":return"green fa fa-play-circle";case"suspended":return"fa fa-pause"}return"orange fa fa-off"},N.getSelectedRouteId=m,N.getSelectionRouteMBean=function(e,t){if(e){var n=u(e),i=e.selection,r=e.tree;if(r&&i){var o=i.domain;if(o&&n){var a=r.navigate(o,"Camel Contexts",n,"routes");if(a&&a.children){var s=_.find(a.children,function(e){return e.text===t});if(s)return s.objectName}}}}return null},N.getCamelVersion=f,N.createMessageFromXml=function(e){var t=$(e),o={headers:{},headerTypes:{},id:null,uid:t.children("uid").text(),timestamp:t.children("timestamp").text(),headerHtml:""},n=t.children("message")[0];n||(n=e);var i=$(n),r=i.find("header"),a="";r.each(function(e,t){var n=t.getAttribute("key"),i=t.getAttribute("type"),r=t.textContent;n&&(r&&(o.headers[n]=r),i&&(o.headerTypes[n]=i),a+="<tr><td class='property-name'>"+n+"</td><td class='property-value'>"+b(i)+"</td><td class='property-value'>"+(r||"")+"</td></tr>")}),o.headerHtml=a;var s=o.headers.breadcrumbId;s||(angular.forEach(["MessageID","ID","Path","Name"],function(n){s||angular.forEach(o.headers,function(e,t){!s&&_.endsWith(t,n)&&(s=e)})}),angular.forEach(o.headers,function(e,t){s||(s=e)}));o.id=s;var l=i.children("body")[0];if(l){var c=l.textContent,d=l.getAttribute("type");o.body=c,o.bodyType=b(d)}return o},N.humanizeJavaType=b,N.createBrowseGridOptions=function(){return{selectedItems:[],data:"messages",displayFooter:!1,showFilter:!1,showColumnMenu:!0,enableColumnResize:!0,enableColumnReordering:!0,filterOptions:{filterText:""},selectWithCheckboxOnly:!0,showSelectionCheckbox:!0,maintainColumnRatios:!1,columnDefs:[{field:"id",displayName:"ID",cellTemplate:'<div class="ngCellText"><a href="" ng-click="row.entity.openMessageDialog(row)">{{row.entity.id}}</a></div>'}]}},N.loadRouteXmlNodes=function(i,e,r,o,a,t){var n=$(e).find("route"),s=t/n.length,l=0;n.each(function(e,t){var n=t.getAttribute("id");r&&n&&r!==n||(N.addRouteXmlChildren(i,t,o,a,null,l,0),l+=s)})},N.addRouteXmlChildren=function k(S,e,x,T,I,t,n,j){void 0===j&&(j=null);var M=t,A=n+150,E=e.getAttribute("id"),R=[],q=e.localName;return $(e).children().each(function(e,t){var n=x.length,i=t.localName;"from"!==i||I||(I=n);var r=O(i),o=null;if(r){var a=r.title||i,s=P(t);s&&(a+=" "+s.split("?")[0]);var l=r.tooltip||r.description||a;s&&(l+=" "+s);var c=t.getAttribute("id"),d=a;if(c){var u=t.getAttribute("customId");S.camelIgnoreIdForLabel||!u||"false"===u?d="id: "+c:a=c}var p=S.camelMaximumLabelWidth||N.defaultMaximumLabelWidth;p<a.length&&(d=a+"\n\n"+d,a=a.substring(0,p)+"..");var h=D(r);if(("from"===i||"to"===i)&&s){var g=s.indexOf(":");if(0<g){var m=s.substring(0,g);if(m){var f=N.getEndpointIcon(m);f&&(h=Core.url(f))}}}var b=t.getAttribute("_cid")||t.getAttribute("id");o={name:y,label:a,labelSummary:d,group:1,id:n,elementId:c,x:M,"y:":A,imageUrl:h,cid:b,tooltip:l,type:i,uri:s},E&&(o.rid=E,S.routeNodes||(S.routeNodes={}),S.routeNodes[E]=o),b||(b=i+(x.length+1)),b&&(o.cid=b,S.nodes||(S.nodes={}),S.nodes[b]=o),E=null,x.push(o),null!==I&&I!==n&&(0===R.length||"choice"===q?T.push({source:I,target:n,value:1}):(R.forEach(function(e){T.push({source:e,target:n,value:1})}),R.length=0))}else{var v=N.camelLanguageSettings(i);if(v&&j){var y=v.name||i,w=t.textContent;w?(j.tooltip=j.label+" "+y+" "+w,j.label+=": "+L(t,w,!0)):j.label+=": "+L(t,y,!1)}}var C=k(S,t,x,T,n,M,A,o);"choice"===q?(R=R.concat(C),M+=150):(R="aggregate"===i||"choice"===i||"delay"===i||"filter"===i||"loadBalance"===i||"loop"===i||"multicast"===i||"resequence"===i||"split"===i||"doTry"===i||"doCatch"===i||"doFinally"===i||"idempotentConsumer"===i||"onCompletion"===i?C:[x.length-1],A+=150)}),R},N.camelContextMBeansById=function(e){var n={},t=e.tree;if(t){var i=t.navigate(N.jmxDomain,"Camel Contexts");i&&angular.forEach(i.children,function(e){var t=Core.pathGet(e,["entries","name"])||e.key;t&&(n[t]=e)})}return n},N.camelContextMBeansByComponentName=function(e){return v(e,"components")},N.camelContextMBeansByRouteId=function(e){return v(e,"routes")},N.ignoreIdForLabel=function(e){var t=e.camelIgnoreIdForLabel;return Core.parseBooleanValue(t)},N.maximumLabelWidth=function(e){var t=e.camelMaximumLabelWidth;return angular.isString(t)&&(t=parseInt(t)),t||(t=N.defaultMaximumLabelWidth),t},N.maximumTraceOrDebugBodyLength=function(e){var t=e.camelMaximumTraceOrDebugBodyLength;return angular.isString(t)&&(t=parseInt(t)),t||(t=N.defaultCamelMaximumTraceOrDebugBodyLength),t},N.traceOrDebugIncludeStreams=function(e){var t=e.camelTraceOrDebugIncludeStreams;return Core.parseBooleanValue(t,N.defaultCamelTraceOrDebugIncludeStreams)},N.showInflightCounter=function(e){var t=e.camelShowInflightCounter;return Core.parseBooleanValue(t,!0)},N.routeMetricMaxSeconds=function(e){var t=e.camelRouteMetricMaxSeconds;return angular.isString(t)&&(t=parseInt(t)),t||(t=N.defaultCamelRouteMetricMaxSeconds),t},N.hideOptionDocumentation=function(e){var t=e.camelHideOptionDocumentation;return Core.parseBooleanValue(t,N.defaultHideOptionDocumentation)},N.hideOptionDefaultValue=function(e){var t=e.camelHideOptionDefaultValue;return Core.parseBooleanValue(t,N.defaultHideOptionDefaultValue)},N.hideOptionUnusedValue=function(e){var t=e.camelHideOptionUnusedValue;return Core.parseBooleanValue(t,N.defaultHideOptionUnusedValue)},N.highlightSelectedNode=function(e,o){e.classed("selected",!1),e.filter(function(e){if(e){var t=e.cid,n=e.rid,i=e.type,r=e.elementId;return"from"===i?o===n:r?o===r:t?o===t:o===n}return null}).classed("selected",!0)},N.isCamelVersionEQGT=function(e,t,n,i){var r=f(n,i);if(r){r+="camel-";var o=Core.parseVersionNumbers(r);return 0<=Core.compareVersionNumberArrays(o,[e,t])}return!1},N.isBrowsableEndpoint=function(e){if(e&&e.mbean){var t=e.mbean;if(t.op)return null!=t.op.browseAllMessagesAsXml}return!1}}(Camel||(Camel={})),function(e){var t=function(){function e(e){this.treeService=e}return e.$inject=["treeService"],e.prototype.getSelectedRouteId=function(){return this.treeService.getSelectedMBean().then(function(e){return"routes"===e.entries.type?Core.trimQuotes(e.entries.name):null})},e}();e.CamelTreeService=t}(Camel||(Camel={})),function(q){var e=function(){function e(e,t){this.workspace=e,this.jolokia=t}return e.$inject=["workspace","jolokia"],e.prototype.getTabs=function(){var e=[],t=this.workspace.isCamelContext(),n=q.isCamelVersionEQGT(2,13,this.workspace,this.jolokia),i=q.isCamelVersionEQGT(2,14,this.workspace,this.jolokia),r=q.isCamelVersionEQGT(2,15,this.workspace,this.jolokia),o=q.isCamelVersionEQGT(2,16,this.workspace,this.jolokia),a=this.workspace.isComponent(),s=this.workspace.isComponentsFolder(),l=this.workspace.selection&&"camelContexts"===this.workspace.selection.key,c=this.workspace.isEndpoint(),d=this.workspace.isEndpointsFolder(),u=null!==q.getSelectionCamelEndpointRuntimeRegistry(this.workspace),p=this.workspace.isDataformat(),h=null!==q.getSelectionCamelDebugMBean(this.workspace),g=null!==q.getSelectionCamelRestRegistry(this.workspace),m=this.workspace.isRoute(),f=this.workspace.isRoutesFolder(),b=null!==q.getSelectionCamelRouteMetrics(this.workspace),v=null!==q.getSelectionCamelTraceMBean(this.workspace),y=this.workspace.hasInvokeRightsForName(q.getSelectionCamelInflightRepository(this.workspace),"browse"),w=this.workspace.hasInvokeRights(this.workspace.selection,"browseAllMessagesAsXml"),C=this.workspace.hasInvokeRightsForName(q.getSelectionCamelContextMBean(this.workspace),"dumpRoutesAsXml"),k=this.workspace.hasInvokeRights(this.workspace.selection,"explainEndpointJson"),S=this.workspace.hasInvokeRights(this.workspace.selection,"explainComponentJson"),x=this.workspace.hasInvokeRights(this.workspace.selection,"explainDataFormatJson"),T=this.workspace.hasInvokeRightsForName(q.getSelectionCamelTraceMBean(this.workspace),"dumpAllTracedMessagesAsXml"),I=this.workspace.hasInvokeRightsForName(q.getSelectionCamelRouteMetrics(this.workspace),"dumpStatisticsAsJson"),j=this.workspace.hasInvokeRightsForName(q.getSelectionCamelDebugMBean(this.workspace),"getBreakpoints"),M=this.workspace.hasInvokeRightsForName(q.getSelectionCamelRestRegistry(this.workspace),"listRestServices"),A=this.workspace.hasInvokeRightsForName(q.getSelectionCamelTypeConverter(this.workspace),"listTypeConverters"),E=this.workspace.hasInvokeRightsForName(q.getSelectionCamelEndpointRuntimeRegistry(this.workspace),"endpointStatistics"),R=this.workspace.hasInvokeRights(this.workspace.selection,this.workspace.selection&&"org.apache.camel"===this.workspace.selection.domain?"sendBodyAndHeaders":"sendTextMessage");return l||f||q.isRouteNode(this.workspace)||e.push(new Nav.HawtioTab("Attributes","/camel/attributes")),l&&e.push(new Nav.HawtioTab("Contexts","/camel/contexts")),f&&e.push(new Nav.HawtioTab("Routes","/camel/routes")),(m||f)&&C&&e.push(new Nav.HawtioTab("Route Diagram","/camel/routeDiagram")),c||d||!m&&!f||!C||e.push(new Nav.HawtioTab("Source","/camel/source")),(m||q.isRouteNode(this.workspace))&&e.push(new Nav.HawtioTab("Properties","/camel/propertiesRoute")),c&&r&&k&&e.push(new Nav.HawtioTab("Properties","/camel/propertiesEndpoint")),a&&r&&S&&e.push(new Nav.HawtioTab("Properties","/camel/propertiesComponent")),p&&o&&x&&e.push(new Nav.HawtioTab("Properties","/camel/propertiesDataFormat")),d||c||s||a||!(t||f||m)||!r||!y||e.push(new Nav.HawtioTab("Exchanges","/camel/exchanges")),!d&&!c&&(t||f)&&i&&b&&I&&e.push(new Nav.HawtioTab("Route Metrics","/camel/routeMetrics")),m||q.isRouteNode(this.workspace)||d||c||s||a||!t&&!f||!i||!g||!q.hasRestServices(this.workspace,this.jolokia)||!M||e.push(new Nav.HawtioTab("REST Services","/camel/restServices")),d||c||s||a||!t&&!f||!o||!u||!E||e.push(new Nav.HawtioTab("Endpoints (in/out)","/camel/endpoints-statistics")),m||q.isRouteNode(this.workspace)||d||c||s||a||!t&&!f||!n||!A||e.push(new Nav.HawtioTab("Type Converters","/camel/typeConverter")),m&&v&&T&&e.push(new Nav.HawtioTab("Profile","/camel/profile")),m&&h&&j&&e.push(new Nav.HawtioTab("Debug","/camel/debugRoute")),m&&v&&T&&e.push(new Nav.HawtioTab("Trace","/camel/traceRoute")),c&&q.isBrowsableEndpoint(this.workspace.selection)&&w&&e.push(new Nav.HawtioTab("Browse","/camel/browseEndpoint")),c&&R&&e.push(new Nav.HawtioTab("Send","/camel/sendMessage")),d&&e.push(new Nav.HawtioTab("Endpoints","/camel/endpoints")),l||f||q.isRouteNode(this.workspace)||e.push(new Nav.HawtioTab("Operations","/camel/operations")),l||f||q.isRouteNode(this.workspace)||e.push(new Nav.HawtioTab("Chart","/camel/charts")),e},e}();q.CamelNavigationService=e}(Camel||(Camel={})),function(e){var t=function(){function e(e,t,n,i){var r=this;this.$location=t,this.camelNavigationService=n,this.workspace=i,e.$on("jmxTreeClicked",function(){r.tabs=n.getTabs()})}return e.$inject=["$scope","$location","camelNavigationService","workspace"],e.prototype.$onInit=function(){this.tabs=this.camelNavigationService.getTabs()},e.prototype.goto=function(e){this.$location.path(e.path)},e}();e.CamelNavigationController=t,e.camelNavigationComponent={template:'<hawtio-tabs tabs="$ctrl.tabs" on-change="$ctrl.goto(tab)"></hawtio-tabs>',controller:t}}(Camel||(Camel={})),(Camel||(Camel={})).camelComponent={template:'\n      <div class="tree-nav-layout">\n        <div class="sidebar-pf sidebar-pf-left" resizable r-directions="[\'right\']">\n          <camel-tree-header></camel-tree-header>\n          <camel-tree></camel-tree>\n        </div>\n        <div class="tree-nav-main">\n          <div>\n            <context-actions></context-actions>\n            <route-actions></route-actions>\n            <jmx-header></jmx-header>\n          </div>\n          <camel-navigation></camel-navigation>\n          <div class="contents" ng-view></div>\n        </div>\n      </div>\n    '},function(a){a._module=angular.module(a.pluginName,["angularResizable",a.contextsModule,a.debugModule,a.endpointsStatisticsModule,a.endpointsModule,a.exchangesModule,a.profileModule,a.propertiesModule,a.restServicesModule,a.routesModule,a.treeModule,a.typeConvertersModule]).component("camel",a.camelComponent).component("camelNavigation",a.camelNavigationComponent).service("camelTreeService",a.CamelTreeService).service("camelNavigationService",a.CamelNavigationService),a._module.config(["$routeProvider",function(e){e.when("/camel/attributes",{templateUrl:"plugins/jmx/html/attributes/attributes.html"}).when("/camel/operations",{template:"<operations></operations>"}).when("/camel/charts",{templateUrl:"plugins/jmx/html/charts.html"}).when("/camel/charts/edit",{templateUrl:"plugins/jmx/html/chartEdit.html"}).when("/camel/contexts",{template:"<contexts></contexts>"}).when("/camel/routes",{template:"<routes></routes>"}).when("/camel/endpoints",{template:"<endpoints></endpoints>"}).when("/camel/browseEndpoint",{templateUrl:"plugins/camel/html/browseEndpoint.html"}).when("/camel/endpoint/browse/:contextId/*endpointPath",{templateUrl:"plugins/camel/html/browseEndpoint.html"}).when("/camel/createEndpoint",{templateUrl:"plugins/camel/html/createEndpoint.html"}).when("/camel/route/diagram/:contextId/:routeId",{templateUrl:"plugins/camel/html/routeDiagram.html"}).when("/camel/routeDiagram",{templateUrl:"plugins/camel/html/routeDiagram.html"}).when("/camel/source",{templateUrl:"plugins/camel/html/source.html"}).when("/camel/typeConverter",{template:"<type-converters></type-converters>"}).when("/camel/restServices",{template:"<rest-services></rest-services>"}).when("/camel/endpoints-statistics",{template:"<endpoints-statistics></endpoints-statistics>"}).when("/camel/routeMetrics",{templateUrl:"plugins/camel/html/routeMetrics.html",reloadOnSearch:!1}).when("/camel/exchanges",{template:"<exchanges></exchanges>"}).when("/camel/sendMessage",{templateUrl:"plugins/camel/html/sendMessage.html",reloadOnSearch:!1}).when("/camel/traceRoute",{templateUrl:"plugins/camel/html/traceRoute.html"}).when("/camel/debugRoute",{templateUrl:"plugins/camel/html/debug.html"}).when("/camel/profile",{template:"<profile></profile>"}).when("/camel/propertiesRoute",{templateUrl:"plugins/camel/html/propertiesRoute.html"}).when("/camel/propertiesComponent",{templateUrl:"plugins/camel/html/propertiesComponent.html"}).when("/camel/propertiesDataFormat",{templateUrl:"plugins/camel/html/propertiesDataFormat.html"}).when("/camel/propertiesEndpoint",{templateUrl:"plugins/camel/html/propertiesEndpoint.html"})}]),a._module.factory("tracerStatus",function(){return{messages:[]}}),a._module.filter("camelIconClass",function(){return a.iconClass}),a._module.factory("activeMQMessage",function(){return{message:null}}),a._module.factory("metricsWatcher",["$window",function(e){var t=e.metricsWatcher;return t||(t={},e.metricsWatcher=t),t}]),a._module.run(["mainNavService","workspace","jolokia","helpRegistry","preferencesRegistry","$rootScope",function(e,p,h,t,n,g){t.addUserDoc("camel","plugins/camel/doc/help.md",function(){return p.treeContainsDomainAndProperties(a.jmxDomain)}),n.addTab("Camel","plugins/camel/html/preferences.html",function(){return p.treeContainsDomainAndProperties(a.jmxDomain)}),e.addItem({title:"Camel",basePath:"/camel",template:"<camel></camel>",isValid:function(){return p.treeContainsDomainAndProperties(a.jmxDomain)}});var i="State",r={field:i,displayName:i,cellTemplate:'<div class="ngCellText pagination-centered" title="{{row.getProperty(col.field)}}"><i class="{{row.getProperty(\'State\') | camelIconClass}}"></i></div>',width:56,minWidth:56,maxWidth:56,resizable:!1,defaultSort:!1},o=p.attributeColumnDefs;o[a.jmxDomain+"/context/folder"]=[r,{field:"CamelId",displayName:"Context"},{field:"Uptime",displayName:"Uptime",visible:!1},{field:"CamelVersion",displayName:"Version",visible:!1},{field:"ExchangesCompleted",displayName:"Completed"},{field:"ExchangesFailed",displayName:"Failed"},{field:"FailuresHandled",displayName:"Failed Handled",visible:!1},{field:"ExchangesTotal",displayName:"Total",visible:!1},{field:"Redeliveries",displayName:"Redelivery",visible:!1},{field:"ExchangesInflight",displayName:"Inflight"},{field:"OldestInflightDuration",displayName:"Oldest Inflight Time",visible:!1},{field:"MeanProcessingTime",displayName:"Mean Time"},{field:"MinProcessingTime",displayName:"Min Time"},{field:"MaxProcessingTime",displayName:"Max Time"},{field:"TotalProcessingTime",displayName:"Total Time",visible:!1},{field:"DeltaProcessingTime",displayName:"Delta Time",visible:!1},{field:"LastProcessingTime",displayName:"Last Time",visible:!1},{field:"LastExchangeCompletedTimestamp",displayName:"Last completed",visible:!1},{field:"LastExchangeFailedTimestamp",displayName:"Last failed",visible:!1},{field:"ExternalRedeliveries",displayName:"External Redelivery",visible:!1},{field:"StartedRoutes",displayName:"Started Routes"},{field:"TotalRoutes",displayName:"Total Routes"}],o[a.jmxDomain+"/routes/folder"]=[r,{field:"CamelId",displayName:"Context"},{field:"RouteId",displayName:"Route"},{field:"ExchangesCompleted",displayName:"Completed"},{field:"ExchangesFailed",displayName:"Failed"},{field:"FailuresHandled",displayName:"Failed Handled",visible:!1},{field:"Redeliveries",displayName:"Redelivery",visible:!1},{field:"ExchangesTotal",displayName:"Total",visible:!1},{field:"ExchangesInflight",displayName:"Inflight"},{field:"OldestInflightDuration",displayName:"Oldest Inflight Time",visible:!1},{field:"MeanProcessingTime",displayName:"Mean Time"},{field:"MinProcessingTime",displayName:"Min Time"},{field:"MaxProcessingTime",displayName:"Max Time"},{field:"TotalProcessingTime",displayName:"Total Time",visible:!1},{field:"DeltaProcessingTime",displayName:"Delta Time",visible:!1},{field:"LastProcessingTime",displayName:"Last Time",visible:!1},{field:"LastExchangeCompletedTimestamp",displayName:"Last completed",visible:!1},{field:"LastExchangeFailedTimestamp",displayName:"Last failed",visible:!1},{field:"ExternalRedeliveries",displayName:"External Redelivery",visible:!1}],o[a.jmxDomain+"/processors/folder"]=[r,{field:"CamelId",displayName:"Context"},{field:"RouteId",displayName:"Route"},{field:"ProcessorId",displayName:"Processor"},{field:"ExchangesCompleted",displayName:"Completed"},{field:"ExchangesFailed",displayName:"Failed"},{field:"FailuresHandled",displayName:"Failed Handled",visible:!1},{field:"Redeliveries",displayName:"Redelivery",visible:!1},{field:"ExchangesTotal",displayName:"Total",visible:!1},{field:"ExchangesInflight",displayName:"Inflight"},{field:"OldestInflightDuration",displayName:"Oldest Inflight Time",visible:!1},{field:"MeanProcessingTime",displayName:"Mean Time"},{field:"MinProcessingTime",displayName:"Min Time"},{field:"MaxProcessingTime",displayName:"Max Time"},{field:"TotalProcessingTime",displayName:"Total Time",visible:!1},{field:"DeltaProcessingTime",displayName:"Delta Time",visible:!1},{field:"LastProcessingTime",displayName:"Last Time",visible:!1},{field:"LastExchangeCompletedTimestamp",displayName:"Last completed",visible:!1},{field:"LastExchangeFailedTimestamp",displayName:"Last failed",visible:!1},{field:"ExternalRedeliveries",displayName:"External Redelivery",visible:!1}],o[a.jmxDomain+"/components/folder"]=[r,{field:"CamelId",displayName:"Context"},{field:"ComponentName",displayName:"Name"}],o[a.jmxDomain+"/consumers/folder"]=[r,{field:"CamelId",displayName:"Context"},{field:"RouteId",displayName:"Route"},{field:"EndpointUri",displayName:"Endpoint URI",width:"**"},{field:"Suspended",displayName:"Suspended",resizable:!1},{field:"InflightExchanges",displayName:"Inflight"}],o[a.jmxDomain+"/producers/folder"]=[r,{field:"CamelId",displayName:"Context"},{field:"RouteId",displayName:"Route"},{field:"EndpointUri",displayName:"Endpoint URI",width:"**"},{field:"Suspended",displayName:"Suspended",resizable:!1}],o[a.jmxDomain+"/services/folder"]=[r,{field:"CamelId",displayName:"Context"},{field:"RouteId",displayName:"Route"},{field:"Suspended",displayName:"Suspended",resizable:!1},{field:"SupportsSuspended",displayName:"Can Suspend",resizable:!1}],o[a.jmxDomain+"/endpoints/folder"]=[r,{field:"CamelId",displayName:"Context"},{field:"EndpointUri",displayName:"Endpoint URI",width:"***"},{field:"Singleton",displayName:"Singleton",resizable:!1}],o[a.jmxDomain+"/threadpools/folder"]=[{field:"Id",displayName:"Id",width:"**"},{field:"ActiveCount",displayName:"Active"},{field:"PoolSize",displayName:"Pool Size"},{field:"CorePoolSize",displayName:"Core Pool Size"},{field:"TaskQueueSize",displayName:"Task Queue Size"},{field:"TaskCount",displayName:"Task"},{field:"CompletedTaskCount",displayName:"Completed Task"}],o[a.jmxDomain+"/errorhandlers/folder"]=[{field:"CamelId",displayName:"Context"},{field:"DeadLetterChannel",displayName:"Dead Letter"},{field:"DeadLetterChannelEndpointUri",displayName:"Endpoint URI",width:"**",resizable:!0},{field:"MaximumRedeliveries",displayName:"Max Redeliveries"},{field:"RedeliveryDelay",displayName:"Redelivery Delay"},{field:"MaximumRedeliveryDelay",displayName:"Max Redeliveries Delay"}],p.addNamedTreePostProcessor("camel",function(e){var c=a.jmxDomain;if(e){var d=new Jmx.Folder("Camel Contexts");d.class="org-apache-camel-context-folder",d.children=[],d.typeName="context",d.key="camelContexts",d.domain=c;var t=e.get(c);if(t){var u=[];angular.forEach(t.children,function(e,t){var n=e.get("context"),i=e.get("routes"),r=e.get("endpoints"),o=e.get("components"),a=e.get("dataformats");if(n){var s=n.children[0];if(s){h.request({type:"read",mbean:s.objectName,attribute:"CamelVersion"},Core.onSuccess(function(e){s.version=e.value,Core.$apply(g)})),i&&(s.moveChild(i),i.typeName="routes",i.class="org-apache-camel-routes-folder",angular.forEach(i.children,function(e){return e.class="org-apache-camel-routes"})),r&&(s.moveChild(r),r.typeName="endpoints",r.class="org-apache-camel-endpoints-folder",angular.forEach(r.children,function(e){return e.class="org-apache-camel-endpoints"})),o&&(s.moveChild(o),o.typeName="components",o.class="org-apache-camel-components-folder",angular.forEach(o.children,function(e){return e.class="org-apache-camel-components"})),a&&(s.moveChild(a),a.class="org-apache-camel-dataformats-folder",angular.forEach(a.children,function(e){return e.class="org-apache-camel-dataformats"}),a.typeName="dataformats");var l=new Jmx.Folder("MBeans");p.configureFolder(l,c,"org-apache-camel",_.clone(e.folderNames).concat("mbeans"),"mbeans"),e.children.filter(function(e){return!("context"===e.text||"routes"===e.text||"endpoints"===e.text||"components"===e.text||"dataformats"===e.text)}).forEach(function(e){return l.moveChild(e)}),0<l.children.length&&(l.sortChildren(!1),s.moveChild(l)),d.moveChild(s)}u.push(e)}}),u.forEach(function(e){return e.detach()}),t.children.splice(0,0,d)}}})}]),hawtioPluginLoader.addModule(a.pluginName),hawtioPluginLoader.registerPreBootstrapTask(function(e){Jmx.registerLazyLoadHandler(a.jmxDomain,function(e){return a.jmxDomain===e.domain&&"routes"===e.typeName?function(t,n,i){"routes"===n.typeName?a.processRouteXml(t,t.jolokia,n,function(e){return i(e?a.loadRouteChildren(n,e,t):new Array)}):i(new Array)}:null}),e()})}(Camel||(Camel={})),function(o){function r(e,t,n){var i=[];return s(e,i,[]),_.find(i,function(e){return e.Name==t&&e.Version==n})}o.pluginName="hawtio-integration-karaf",o.log=Logger.get(o.pluginName),o.setSelect=function(t,e){if(!angular.isDefined(t))return e[0];var n=_.findIndex(e,function(e){return e.id===t.id});return-1!==n?e[n]:e[0]},o.installRepository=function(e,t,n,i,r){o.log.info("installing URI: ",n),t.request({type:"exec",mbean:p(e),operation:"addRepository(java.lang.String)",arguments:[n]},Core.onSuccess(i,{error:r}))},o.uninstallRepository=function(e,t,n,i,r){o.log.info("uninstalling URI: ",n),t.request({type:"exec",mbean:p(e),operation:"removeRepository(java.lang.String)",arguments:[n]},Core.onSuccess(i,{error:r}))},o.installFeature=function(e,t,n,i,r,o){t.request({type:"exec",mbean:p(e),operation:"installFeature(java.lang.String, java.lang.String)",arguments:[n,i]},Core.onSuccess(r,{error:o,ajaxError:r}))},o.uninstallFeature=function(e,t,n,i,r,o){t.request({type:"exec",mbean:p(e),operation:"uninstallFeature(java.lang.String, java.lang.String)",arguments:[n,i]},Core.onSuccess(r,{error:o,ajaxError:r}))},o.toCollection=function(e){var t=e;return angular.isArray(e)||(t=[e]),t},o.featureLinks=function(e,t,n){return"<a href='"+Core.url("#/karaf/features/"+t+"/"+n+e.hash())+"'>"+n+"</a>"},o.extractFeature=r;var t=new RegExp(["^org.apache.aries","^org.apache.karaf","^activemq-karaf","^org.apache.commons","^org.apache.felix","^io.fabric8","^io.fabric8.fab","^io.fabric8.insight","^io.fabric8.mq","^io.fabric8.patch","^io.fabric8.runtime","^io.fabric8.security","^org.apache.geronimo.specs","^org.apache.servicemix.bundles","^org.objectweb.asm","^io.hawt","^javax.mail","^javax","^org.jvnet","^org.mvel2","^org.apache.mina.core","^org.apache.sshd.core","^org.apache.neethi","^org.apache.servicemix.specs","^org.apache.xbean","^org.apache.santuario.xmlsec","^biz.aQute.bndlib","^groovy-all","^com.google.guava","jackson-\\w+-asl","^com.fasterxml.jackson","^org.ops4j","^org.springframework","^bcprov$","^jline$","scala-library$","^org.scala-lang","^stax2-api$","^woodstox-core-asl","^org.jboss.amq.mq-fabric","^gravia-","^joda-time$","^org.apache.ws","-commands$","patch.patch","org.fusesource.insight","activeio-core","activemq-osgi","^org.eclipse.jetty","org.codehaus.jettison.jettison","org.jledit.core","org.fusesource.jansi","org.eclipse.equinox.region"].join("|")),n=new RegExp(["^org.apache.camel","camel-karaf-commands$","activemq-camel$"].join("|")),i=new RegExp(["^org.apache.cxf"].join("|")),a=new RegExp(["^org.apache.activemq","activemq-camel$"].join("|"));function s(e,i,t){var r=e.Features;angular.forEach(e.Repositories,function(n){t.push({id:n.Name,uri:n.Uri}),r&&angular.forEach(n.Features,function(e){angular.forEach(e,function(e){if(void 0!==r[e.Name]){var t=_.cloneDeep(r[e.Name][e.Version]);t.Id=e.Name+"/"+e.Version,t.RepositoryName=n.Name,t.RepositoryURI=n.Uri,i.push(t)}})})})}function l(t,n,e){var i=[];return angular.forEach(e,function(e){i.push({Name:e,State:c(u(t,n,e))})}),i}function c(e){switch(e){case 2:return"Enabled";case 4:return"Unsatisfied";case 8:return"Activating";case 16:return"Active";case 32:return"Registered";case 64:return"Factory";case 128:return"Deactivating";case 256:return"Destroying";case 1024:return"Disabling";case 2048:return"Disposing"}return"Unknown"}function d(e,t){var n=h(e),i=t.request({type:"read",mbean:n,arguments:[]});return"Components"in i.value?i.value.Components.values:(i=t.request({type:"exec",mbean:n,operation:"listComponents()"}),l(e,t,i.value))}function u(e,t,n){return t.request({type:"exec",mbean:h(e),operation:"componentState(java.lang.String)",arguments:[n]}).value}function p(e){if(e){var t=((e.mbeanTypesToDomain.features||e.mbeanTypesToDomain.feature||{})["org.apache.karaf"]||{}).objectName;if(t)return t;var n=e.tree.navigate("org.apache.karaf","features");if(!n&&(n=e.tree.navigate("org.apache.karaf"))){var i=n.children;n=null,angular.forEach(i,function(e){n||(n=e.navigate("features"))})}if(n){if(i=n.children){var r=i[0];if(r)return r.objectName}return n.objectName}}return null}function h(e){if(e){var t=((e.mbeanTypesToDomain.scr||{})["org.apache.karaf"]||{}).objectName;if(t)return t;var n=e.tree.navigate("org.apache.karaf","scr");if(!n&&(n=e.tree.navigate("org.apache.karaf"))){var i=n.children;n=null,angular.forEach(i,function(e){n||(n=e.navigate("scr"))})}if(n){if(i=n.children){var r=i[0];if(r)return r.objectName}return n.objectName}}return null}o.isPlatformBundle=function(e){return t.test(e)},o.isActiveMQBundle=function(e){return a.test(e)},o.isCamelBundle=function(e){return n.test(e)},o.isCxfBundle=function(e){return i.test(e)},o.populateFeaturesAndRepos=s,o.createScrComponentsView=l,o.getComponentStateDescription=c,o.getAllComponents=d,o.getComponentByName=function(e,t,n){var i=d(e,t);return _.find(i,function(e){return e.Name==n})},o.isComponentActive=function(e,t,n){return t.request({type:"exec",mbean:h(e),operation:"isComponentActive(java.lang.String)",arguments:[n]}).value},o.getComponentState=u,o.activateComponent=function(e,t,n,i,r){t.request({type:"exec",mbean:h(e),operation:"activateComponent(java.lang.String)",arguments:[n]},Core.onSuccess(i,{error:r}))},o.deactivateComponent=function(e,t,n,i,r){t.request({type:"exec",mbean:h(e),operation:"deactivateComponent(java.lang.String)",arguments:[n]},Core.onSuccess(i,{error:r}))},o.populateDependencies=function(n,e,i){angular.forEach(e,function(e){angular.forEach(e,function(e){var t=r(n,e.Name,e.Version);t.id=e.Name+"/"+e.Version,i.push(t)})})},o.getSelectionFeaturesMBean=p,o.getSelectionFeaturesMBeanAsync=function(e,t){return Osgi.runWhenTreeReady(function(){return p(e)},e,t)},o.getSelectionScrMBean=h,o.getSelectionScrMBeanAsync=function(e,t){return Osgi.runWhenTreeReady(function(){return h(e)},e,t)}}(Karaf||(Karaf={})),function(n){function r(e,t){switch(t){case"INSTALLED":return e+"-important";case"RESOLVED":return e+"-inverse";case"STARTING":return e+"-warning";case"ACTIVE":return e+"-success";case"STOPPING":return e+"-info";case"UNINSTALLED":return"";default:return e+"-important"}}function o(e){for(var t={},n=0;n<e.length;n++){var i=e[n],r=i.indexOf(";");if(0<r){var o=i.substring(0,r),a=i.substring(r+1),s=t[o];void 0===s&&(s={},t[o]=s),s.ReportedVersion=a}}return t}function p(e,t){var n=t.indexOf(":=");if(0<n)e["D"+t.substring(0,n)]=t.substring(n+2);else{var i=t.indexOf("=");0<i&&(e["A"+t.substring(0,i)]=t.substring(i+1))}}function a(e){var t=e;return angular.isArray(e)||(t=[e]),t}function s(t,e,n){return a(e).sort(function(e,t){return e-t}).filter(function(e){return n.hasOwnProperty(e)}).map(function(e){return{label:n[e].SymbolicName,url:Core.url("/osgi/bundles/"+e+t.hash())}})}function l(i,e){var r="",t=a(e).sort(function(e,t){return e-t});return angular.forEach(t,function(e,t){var n="";0<r.length&&(n=" "),r+=n+"<a href='"+Core.url("/osgi/bundles/"+e+i.hash())+"'>Bundle "+e+"</a>"}),r}function c(n,e){var i=[];return angular.forEach(e,function(e,t){i.push(Core.url("/osgi/bundles/"+e+n.hash()))}),i}function i(e){if(e){var t=e.tree.navigate("osgi.core","framework");return n.findFirstObjectName(t)}return null}function d(e){if(e){var t=e.tree.navigate("osgi.core","serviceState");return n.findFirstObjectName(t)}return null}function u(e){if(e){var t=e.tree.navigate("osgi.core","packageState");return n.findFirstObjectName(t)}return null}function h(e){if(e){var t=e.tree.navigate("osgi.compendium","cm");return n.findFirstObjectName(t)}return null}function g(e,t,n){void 0===n&&(n=!1);var i=t,r=e.versionId;e.profileId;return r&&r?"/wiki/branch/"+r+(n?"/newConfiguration/":"/configuration/")+i+"/"+e.pageId:"osgi/configurations/pid/"+i}function m(i,r,e){return e(function(e,t){if(r.treeFetched)e(i());else var n=r.$rootScope.$on(Jmx.TreeEvent.Updated,function(){n(),e(i())})})}n.pluginName="hawtio-integration-osgi",n.log=Logger.get(n.pluginName),n.defaultBundleValues=function(t,e,n){var i=n;return angular.forEach(n,function(e){e.ImportData=o(e.ImportedPackages),e.ExportData=o(e.ExportedPackages),e.IdentifierLink=l(t,e.Identifier),e.Hosts=s(t,e.Hosts,i),e.Fragments=s(t,e.Fragments,i),e.ImportedPackages=_.uniq(e.ImportedPackages),e.StateStyle=r("label",e.State),e.RequiringBundles=s(t,e.RequiringBundles,i)}),n},n.getStateStyle=r,n.defaultServiceValues=function(t,e,n){return angular.forEach(n,function(e){e.BundleLinks=l(t,e.BundleIdentifier)}),n},n.defaultPackageValues=function(o,e,t){var a=[];function n(e,t){t||(t=e);var n=e.Name;if(e.Version,n&&!_.startsWith(n,"#")){var i=t.ImportingBundles||e.ImportingBundles,r=t.ExportingBundles||e.ExportingBundles;e.ImportingBundleUrls=c(o,i),e.ExportingBundleUrls=c(o,r),a.push(e)}}var i=t.values;return i&&angular.forEach(i,n),angular.forEach(t,function(t){angular.forEach(t,function(e){angular.forEach(e,function(e){n(e,t)})})}),a},n.parseActualPackages=o,n.parseManifestHeader=function(e,t){var n={},i={},r=e[t];if(void 0===r)return n;for(var o=r.Value,a=!0,s=!1,l="",c="",d=0;d<o.length;d++){var u=o[d];'"'!==u?s?c+=u:";"!==u?","!==u?a?l+=u:c+=u:(p(i,c),n[l]=i,i={},a=!(c=l="")):a?a=!1:(p(i,c),c=""):s=!s}return p(i,c),n[l]=i,n},n.toCollection=a,n.labelBundleLinks=s,n.bundleLinks=l,n.bundleUrls=c,n.pidLinks=function(i,e){var r="";return angular.forEach(a(e),function(e,t){var n="";0<r.length&&(n=" "),r+=n+"<a href='"+Core.url("/osgi/bundles/"+e+i.hash())+"'>"+e+"</a>"}),r},n.findBundle=function(n,e){var i="";return angular.forEach(e,function(e){var t=e.Identifier;if(n===t.toString())return i=e}),i},n.getSelectionBundleMBean=function(e){if(e){var t=e.tree.navigate("osgi.core","bundleState");return n.findFirstObjectName(t)}return null},n.findFirstObjectName=function e(t){if(t){var n=t.objectName;if(n)return n;var i=t.children;if(i&&i.length)return e(i[0])}return null},n.getSelectionFrameworkMBean=i,n.getSelectionFrameworkMBeanAsync=function(e,t){return m(function(){return i(e)},e,t)},n.getSelectionServiceMBean=d,n.getSelectionServiceMBeanAsync=function(e,t){return m(function(){return d(e)},e,t)},n.getSelectionPackageMBean=u,n.getSelectionPackageMBeanAsync=function(e,t){return m(function(){return u(e)},e,t)},n.getSelectionConfigAdminMBean=h,n.getSelectionConfigAdminMBeanAsync=function(e,t){return m(function(){return h(e)},e,t)},n.getMetaTypeMBean=function(e){return e?((e.mbeanTypesToDomain.MetaTypeFacade||{})["io.fabric8"]||{}).objectName:null},n.getProfileMetadataMBean=function(e){return e?((e.mbeanTypesToDomain.ProfileMetadata||{})["io.fabric8"]||{}).objectName:null},n.getHawtioOSGiToolsMBean=function(e){return e?((e.mbeanTypesToDomain.OSGiTools||{}).hawtio||{}).objectName:null},n.getHawtioConfigAdminMBean=function(e){return e?((e.mbeanTypesToDomain.ConfigAdmin||{}).hawtio||{}).objectName:null},n.createConfigPidLink=function(e,t,n,i){return void 0===i&&(i=!1),g(e,n,i)+t.hash()},n.createConfigPidPath=g,n.getConfigurationProperties=function(e,t,n,i){var r=h(e),o=null;return t&&r&&(o=t.execute(r,"getProperties",n,Core.onSuccess(i))),o},n.removeFactoryPidPrefix=function(e,t){if(e&&t){if(_.startsWith(e,t))return e.substring(t.length+1);var n=t.lastIndexOf(".");if(0<n){var i=t.substring(0,n+1);return Core.trimLeading(e,i)}}return e},n.runWhenTreeReady=m}(Osgi||(Osgi={})),function(i){var e=function(){function e(e,t){this.workspace=e,this.jolokiaService=t}return e.$inject=["workspace","jolokiaService"],e.prototype.getBundles=function(){var e=i.getSelectionBundleMBean(this.workspace);return this.jolokiaService.execute(e,"listBundles()").then(function(e){return _.values(e).map(function(e){return{id:e.Identifier,name:e.Headers["Bundle-Name"]?e.Headers["Bundle-Name"].Value:"",location:e.Location,symbolicName:e.SymbolicName,state:e.State.toLowerCase(),version:e.Version,startLevel:e.StartLevel,fragment:e.Fragment}})})},e.prototype.startBundles=function(e){var t=i.getSelectionFrameworkMBean(this.workspace),n=e.map(function(e){return e.id});return this.jolokiaService.execute(t,"startBundles([J)",n).then(this.handleResponse)},e.prototype.stopBundles=function(e){var t=i.getSelectionFrameworkMBean(this.workspace),n=e.map(function(e){return e.id});return this.jolokiaService.execute(t,"stopBundles([J)",n).then(this.handleResponse)},e.prototype.updateBundles=function(e){var t=i.getSelectionFrameworkMBean(this.workspace),n=e.map(function(e){return e.id});return this.jolokiaService.execute(t,"updateBundles([J)",n).then(this.handleResponse)},e.prototype.refreshBundles=function(e){var t=i.getSelectionFrameworkMBean(this.workspace),n=e.map(function(e){return e.id});return this.jolokiaService.execute(t,"refreshBundles([J)",n).then(this.handleResponse)},e.prototype.uninstallBundles=function(e){var t=i.getSelectionFrameworkMBean(this.workspace),n=e.map(function(e){return e.id});return this.jolokiaService.execute(t,"uninstallBundles([J)",n).then(this.handleResponse)},e.prototype.installBundle=function(e){var t=this,n=i.getSelectionFrameworkMBean(this.workspace);return this.jolokiaService.execute(n,"installBundle(java.lang.String)",e).then(function(e){return t.jolokiaService.execute(n,"startBundles([J)",e)}).then(this.handleResponse)},e.prototype.handleResponse=function(e){if(e&&e.Error)throw e.Error;return"The operation completed successfully"},e}();i.BundlesService=e}(Osgi||(Osgi={})),function(i){var e=function(){function n(e,t){var n=this;this.bundlesService=e,this.workspace=t,this.startAction={name:"Start",actionFn:function(e){var t=n.getSelectedBundles();0<t.filter(function(e){return e.fragment}).length?Core.notification("warning","Fragment bundles cannot be started"):n.bundlesService.startBundles(t).then(function(e){Core.notification("success",e),n.loadBundles()}).catch(function(e){return Core.notification("danger",e)})},isDisabled:!0},this.stopAction={name:"Stop",actionFn:function(e){var t=n.getSelectedBundles();n.bundlesService.stopBundles(t).then(function(e){Core.notification("success",e),n.loadBundles()}).catch(function(e){return Core.notification("danger",e)})},isDisabled:!0},this.refreshAction={name:"Refresh",actionFn:function(e){var t=n.getSelectedBundles();n.bundlesService.refreshBundles(t).then(function(e){Core.notification("success",e),setTimeout(function(){return n.loadBundles()},2e3)}).catch(function(e){return Core.notification("danger",e)})},isDisabled:!0},this.updateAction={name:"Update",actionFn:function(e){var t=n.getSelectedBundles();n.bundlesService.updateBundles(t).then(function(e){Core.notification("success",e),n.loadBundles()}).catch(function(e){return Core.notification("danger",e)})},isDisabled:!0},this.uninstallAction={name:"Uninstall",actionFn:function(e){var t=n.getSelectedBundles();n.bundlesService.uninstallBundles(t).then(function(e){Core.notification("success",e),n.loadBundles()}).catch(function(e){return Core.notification("danger",e)})},isDisabled:!0},this.tableConfig={selectionMatchProp:"id",showCheckboxes:!0,onCheckBoxChange:function(e){return n.enableDisableActions()}},this.toolbarConfig={filterConfig:{fields:[{id:"state",title:"State",placeholder:"Filter by state...",filterType:"select",filterValues:["active","installed","resolved","signers_all","signers_trusted","start_activation_policy","start_transient","starting","stop_transient","stopping","uninstalled"]},{id:"name",title:"Name",placeholder:"Filter by name...",filterType:"text"},{id:"symbolicName",title:"Symbolic Name",placeholder:"Filter by symbolic name...",filterType:"text"},{id:"version",title:"Version",placeholder:"Filter by version...",filterType:"text"}],onFilterChange:function(e){n.applyFilters(e)},appliedFilters:[],resultsCount:0},actionsConfig:{primaryActions:this.toolbarActions()},isTableView:!0},this.tableColumns=[{header:"ID",itemField:"id",templateFn:function(e){return'<a href="osgi/bundles/'+e+'">'+e+"</a>"}},{header:"State",itemField:"state"},{header:"Name",itemField:"name"},{header:"Symbolic Name",itemField:"symbolicName"},{header:"Version",itemField:"version"}],this.tableItems=null,this.loading=!0}return n.$inject=["bundlesService","workspace"],n.prototype.$onInit=function(){this.loadBundles()},n.prototype.loadBundles=function(){var t=this;this.bundlesService.getBundles().then(function(e){t.bundles=e,t.applyFilters(t.toolbarConfig.filterConfig.appliedFilters),t.enableDisableActions(),t.loading=!1})},n.prototype.toolbarActions=function(){var e=[],t=i.getSelectionFrameworkMBean(this.workspace);return this.workspace.hasInvokeRightsForName(t,"startBundle")&&e.push(this.startAction),this.workspace.hasInvokeRightsForName(t,"stopBundle")&&e.push(this.stopAction),this.workspace.hasInvokeRightsForName(t,"refreshBundle")&&e.push(this.refreshAction),this.workspace.hasInvokeRightsForName(t,"updateBundle")&&e.push(this.updateAction),this.workspace.hasInvokeRightsForName(t,"uninstallBundle")&&e.push(this.uninstallAction),i.log.debug("RBAC - Rendered bundles actions:",e),_.isEmpty(e)&&(i.log.debug("RBAC - Disable checkboxes"),this.tableConfig.showCheckboxes=!1),e},n.prototype.applyFilters=function(e){void 0===e&&(e=[]);var t=this.bundles;e.forEach(function(e){t=n.FILTER_FUNCTIONS[e.id](t,e.value)}),this.tableItems=t,this.toolbarConfig.filterConfig.resultsCount=t.length},n.prototype.getSelectedBundles=function(){return this.tableItems.filter(function(e){return e.selected})},n.prototype.enableDisableActions=function(){var e=this.getSelectedBundles(),t=0===e.length;this.startAction.isDisabled=t||e.every(function(e){return"active"===e.state}),this.stopAction.isDisabled=t||e.every(function(e){return"active"!==e.state}),this.refreshAction.isDisabled=t,this.updateAction.isDisabled=t,this.uninstallAction.isDisabled=t},n.FILTER_FUNCTIONS={state:function(e,t){return e.filter(function(e){return e.state===t})},name:function(e,t){var n=new RegExp(t,"i");return e.filter(function(e){return n.test(e.name)})},symbolicName:function(e,t){return e.filter(function(e){return-1!==e.symbolicName.indexOf(t)})},version:function(e,t){return e.filter(function(e){return-1!==e.version.indexOf(t)})}},n}();i.BundlesController=e,i.bundlesComponent={template:'\n      <div class="table-view">\n        <h1>Bundles</h1>\n        <p ng-if="$ctrl.loading">Loading...</p>\n        <div ng-if="!$ctrl.loading">\n          <install-bundle bundles="$ctrl.bundles" on-install="$ctrl.loadBundles()"></install-bundle>\n          <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n          <pf-table-view config="$ctrl.tableConfig"\n                         columns="$ctrl.tableColumns"\n                         items="$ctrl.tableItems"></pf-table-view>\n        </div>\n      </div>\n    ',controller:e}}(Osgi||(Osgi={})),function(n){var e=function(){function e(e,t){this.bundlesService=e,this.workspace=t,this.loading=!1,this.bundles=[],this.frameworkMBean=n.getSelectionFrameworkMBean(this.workspace)}return e.$inject=["bundlesService","workspace"],e.prototype.install=function(e){var t=this,n=this.findBundleByUrl(e);n?Core.notification("warning","Bundle "+n.name+" "+n.version+" is already installed"):(this.loading=!0,this.bundlesService.installBundle(e).then(function(e){t.loading=!1,Core.notification("success",e),t.onInstall()}).catch(function(e){t.loading=!1,Core.notification("danger",e)}))},e.prototype.findBundleByUrl=function(t){return this.bundles.filter(function(e){return e.location===t.trim()})[0]},e.prototype.installDisabled=function(e){return this.loading||!e||0===e.trim().length},e}();n.InstallBundleController=e,n.installBundleComponent={template:'\n      <div class="row install-bundle"\n          hawtio-show object-name="{{$ctrl.frameworkMBean}}" method-name="installBundle">\n        <div class="col-lg-6">\n          <div class="input-group">\n            <input type="text" class="form-control" placeholder="Bundle URL..." ng-model="bundleUrl">\n            <span class="input-group-btn">\n              <button type="button" class="btn btn-default" ng-click="$ctrl.install(bundleUrl)" ng-disabled="$ctrl.installDisabled(bundleUrl)">\n                Install\n              </button>\n            </span>\n          </div>\n        </div>\n        <div class="col-lg-6">\n        </div>\n      </div>\n    ',controller:e,bindings:{onInstall:"&",bundles:"<"}}}(Osgi||(Osgi={})),function(e){e.bundlesModule=angular.module("hawtio-osgi-bundles",[]).component("bundles",e.bundlesComponent).component("installBundle",e.installBundleComponent).service("bundlesService",e.BundlesService).name}(Osgi||(Osgi={})),function(e){var t=function(){this.property=new e.ConfigurationProperty("","")};e.ConfigurationPropertyAddModalController=t,e.configurationPropertyAddModal={bindings:{close:"&",dismiss:"&"},template:'\n      <form name="addPropertyForm" class="form-horizontal" ng-submit="$ctrl.close({$value: $ctrl.property})">\n        <div class="modal-header">\n          <button type="button" class="close" aria-label="Close" ng-click="$ctrl.dismiss()">\n            <span class="pficon pficon-close" aria-hidden="true"></span>\n          </button>\n          <h4 class="modal-title">Add property</h4>\n        </div>\n        <div class="modal-body">\n          <div class="form-group" ng-class="{\'has-error\': addPropertyForm.propKey.$invalid}">\n            <label class="col-sm-2 control-label" for="propKey">Key</label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" id="propKey" name="propKey" ng-model="$ctrl.property.key" ng-pattern="/^\\S+$/">\n              <span class="help-block" ng-show="addPropertyForm.propKey.$invalid">Spaces are not allowed</span>\n            </div>\n          </div>\n          <div class="form-group">\n            <label class="col-sm-2 control-label" for="propValue">Value</label>\n            <div class="col-sm-10">\n              <textarea class="form-control" id="propValue" name="propValue" rows="5" ng-model="$ctrl.property.value"></textarea>\n            </div>\n          </div>\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-default" ng-click="$ctrl.dismiss()">Cancel</button>\n          <button type="submit" class="btn btn-primary" ng-disabled="!$ctrl.property.key">Add</button>\n        </div>\n      </form>\n    ',controller:t}}(Osgi||(Osgi={})),(Osgi||(Osgi={})).configurationPropertyDeleteModal={bindings:{close:"&",dismiss:"&",resolve:"<"},template:'\n      <form class="form-horizontal" ng-submit="$ctrl.close()">\n        <div class="modal-header">\n          <button type="button" class="close" aria-label="Close" ng-click="$ctrl.dismiss()">\n            <span class="pficon pficon-close" aria-hidden="true"></span>\n          </button>\n          <h4 class="modal-title">Delete property</h4>\n        </div>\n        <div class="modal-body">\n          <p>Delete property \'{{$ctrl.resolve.property.key}}\'?</p>\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-default" ng-click="$ctrl.dismiss()">Cancel</button>\n          <button type="submit" class="btn btn-danger">Delete</button>\n        </div>\n      </form>\n    '},(Osgi||(Osgi={})).configurationPropertyEditModal={bindings:{close:"&",dismiss:"&",resolve:"<"},template:'\n      <form name="addPropertyForm" class="form-horizontal" ng-submit="$ctrl.close({$value: $ctrl.resolve.property})">\n        <div class="modal-header">\n          <button type="button" class="close" aria-label="Close" ng-click="$ctrl.dismiss()">\n            <span class="pficon pficon-close" aria-hidden="true"></span>\n          </button>\n          <h4 class="modal-title">Edit property</h4>\n        </div>\n        <div class="modal-body">\n          <div class="form-group" ng-class="{\'has-error\': addPropertyForm.propKey.$invalid}">\n            <label class="col-sm-2 control-label" for="propKey">Key</label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" id="propKey" name="propKey" ng-model="$ctrl.resolve.property.key" ng-pattern="/^\\S+$/">\n              <span class="help-block" ng-show="addPropertyForm.propKey.$invalid">Spaces are not allowed</span>\n            </div>\n          </div>\n          <div class="form-group">\n            <label class="col-sm-2 control-label" for="propValue">Value</label>\n            <div class="col-sm-10">\n              <textarea class="form-control" id="propValue" name="propValue" rows="5" ng-model="$ctrl.resolve.property.value"></textarea>\n            </div>\n          </div>\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-default" ng-click="$ctrl.dismiss()">Cancel</button>\n          <button type="submit" class="btn btn-primary" ng-disabled="!$ctrl.resolve.property.key">Save</button>\n        </div>\n      </form>\n    '},function(e){var t=function(e,t){this.key=e,this.value=t};(Osgi||(Osgi={})).ConfigurationProperty=t}(),function(e){var t=function(){function e(e,t){this.id=e,this.properties=t}return e.prototype.getPropertiesAsJson=function(){var t={};return this.properties.forEach(function(e){return t[e.key]=e.value}),JSON.stringify(t)},e}();e.Configuration=t}(Osgi||(Osgi={})),function(r){var e=function(){function e(e,t,n){var i=this;this.$routeParams=e,this.$uibModal=t,this.configurationService=n,this.toolbarConfig={actionsConfig:{primaryActions:[]},isTableView:!0},this.tableConfig={selectionMatchProp:"key",showCheckboxes:!1},this.tableColumns=[{header:"Key",itemField:"key"},{header:"Value",itemField:"value"}],this.addAction=function(){i.$uibModal.open({component:"configurationPropertyAddModal"}).result.then(function(e){i.configurationService.addProperty(i.configuration,e).then(function(e){i.configuration=e,Core.notification("success","Successfully added property")})})},this.editAction=function(e,t){i.$uibModal.open({component:"configurationPropertyEditModal",resolve:{property:function(){return new r.ConfigurationProperty(t.key,t.value)}}}).result.then(function(e){i.configurationService.replaceProperty(i.configuration,t,e).then(function(e){i.configuration=e,Core.notification("success","Successfully updated property")})})},this.deleteAction=function(e,t){i.$uibModal.open({component:"configurationPropertyDeleteModal",resolve:{property:function(){return t}}}).result.then(function(){i.configurationService.deleteProperty(i.configuration,t).then(function(e){i.configuration=e,Core.notification("success","Successfully deleted property")})})},this.toolbarConfig.actionsConfig.primaryActions=this.getToolbarActions(),this.tableMenuActions=this.getTableMenuActions()}return e.$inject=["$routeParams","$uibModal","configurationService"],e.prototype.$onInit=function(){this.loadConfiguration()},e.prototype.loadConfiguration=function(){var t=this,e=this.$routeParams.id;this.configurationService.getConfiguration(e).then(function(e){return t.configuration=e})},e.prototype.getToolbarActions=function(){var e=[];return this.configurationService.isReadWrite()&&this.configurationService.hasRightsToAddProperty()&&e.push({name:"Add property",actionFn:this.addAction}),e},e.prototype.getTableMenuActions=function(){var e=[];return this.configurationService.isReadWrite()&&this.configurationService.hasRightsToEditProperties()&&e.push({name:"Edit",actionFn:this.editAction}),this.configurationService.isReadWrite()&&this.configurationService.hasRightsToDeleteProperties()&&e.push({name:"Delete",actionFn:this.deleteAction}),e},e}();r.ConfigurationController=e,r.configurationComponent={template:'\n      <div class="table-view">\n        <ol class="breadcrumb">\n          <li><a ng-href="osgi/configurations">Configuration</a></li>\n          <li class="page-title">{{$ctrl.configuration.id}}</li>\n        </ol>\n        <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n        <pf-table-view config="$ctrl.tableConfig" columns="$ctrl.tableColumns" items="$ctrl.configuration.properties"\n          menu-actions="$ctrl.tableMenuActions"></pf-table-view>\n      </div>\n    ',controller:e}}(Osgi||(Osgi={})),function(i){var e=function(){function e(e,t){this.workspace=e,this.jolokiaService=t,this.hawtioConfigAdminMBean=i.getHawtioConfigAdminMBean(e),this.configAdminMBean=i.getSelectionConfigAdminMBean(e)}return e.$inject=["workspace","jolokiaService"],e.prototype.isReadWrite=function(){return!!this.hawtioConfigAdminMBean&&!!this.configAdminMBean},e.prototype.getConfiguration=function(n){return this.jolokiaService.execute(this.configAdminMBean,"getProperties",n).then(function(e){var t=[];return _.values(e).filter(function(e){return"service.pid"!==e.Key}).map(function(e){return t.push(new i.ConfigurationProperty(e.Key,e.Value))}),new i.Configuration(n,t)})},e.prototype.addProperty=function(e,t){return e.properties.push(t),this.saveAndLoadConfiguration(e)},e.prototype.replaceProperty=function(e,t,n){return e.properties=e.properties.filter(function(e){return e!==t}),e.properties.push(n),this.saveAndLoadConfiguration(e)},e.prototype.deleteProperty=function(e,t){return e.properties=e.properties.filter(function(e){return e!==t}),this.saveAndLoadConfiguration(e)},e.prototype.saveAndLoadConfiguration=function(e){var t=this;return this.jolokiaService.execute(this.hawtioConfigAdminMBean,"configAdminUpdate",e.id,e.getPropertiesAsJson()).then(function(){return t.getConfiguration(e.id)})},e.prototype.hasRightsToAddProperty=function(){return this.workspace.hasInvokeRightsForName(this.configAdminMBean,"createFactoryConfiguration")&&this.workspace.hasInvokeRightsForName(this.hawtioConfigAdminMBean,"configAdminUpdate")},e.prototype.hasRightsToEditProperties=function(){return this.workspace.hasInvokeRightsForName(this.hawtioConfigAdminMBean,"configAdminUpdate")},e.prototype.hasRightsToDeleteProperties=function(){return this.workspace.hasInvokeRightsForName(this.hawtioConfigAdminMBean,"configAdminUpdate")},e}();i.ConfigurationService=e}(Osgi||(Osgi={})),function(e){e.configurationModule=angular.module("hawtio-osgi-configuration",[]).component("osgiConfiguration",e.configurationComponent).component("configurationPropertyAddModal",e.configurationPropertyAddModal).component("configurationPropertyDeleteModal",e.configurationPropertyDeleteModal).component("configurationPropertyEditModal",e.configurationPropertyEditModal).service("configurationService",e.ConfigurationService).name}(Osgi||(Osgi={})),function(i){var e=function(){function n(e,t,n){this.$q=e,this.workspace=t,this.jolokiaService=n}return n.$inject=["$q","workspace","jolokiaService"],n.prototype.getFramework=function(){var t=this;return i.getSelectionFrameworkMBeanAsync(this.workspace,this.$q).then(function(e){return t.jolokiaService.getMBean(e)}).then(function(e){return{initialBundleStartLevel:e.InitialBundleStartLevel,startLevel:e.FrameworkStartLevel}})},n.prototype.updateConfiguration=function(e){var t=i.getSelectionFrameworkMBean(this.workspace);if(t)return this.jolokiaService.setAttributes(t,n.FRAMEWORK_MBEAN_ATTRIBUTES,[e.startLevel.toString(),e.initialBundleStartLevel.toString()])},n.FRAMEWORK_MBEAN_ATTRIBUTES=["FrameworkStartLevel","InitialBundleStartLevel"],n}();i.FrameworkService=e}(Osgi||(Osgi={})),function(i){var e=function(){function e(e,t,n,i,r){this.frameworkService=e,this.bundlesService=t,this.attributesService=n,this.workspace=i,this.$q=r,this.framework=null,this.maxBundleStartLevel=null,this.loading=!1,this.saveInProgress=!1,this.canSave=!1}return e.$inject=["frameworkService","bundlesService","attributesService","workspace","$q"],e.prototype.$onInit=function(){var n=this;this.loading=!0,this.frameworkService.getFramework().then(function(e){return n.framework=e}).catch(function(e){return Core.notification("danger",e)}),this.bundlesService.getBundles().then(function(e){var t=e.filter(function(e){return"active"===e.state}).map(function(e){return e.startLevel});n.maxBundleStartLevel=Math.max.apply(Math,t)}).then(function(e){return n.fetchPermissions()}).then(function(e){n.canSave=_.every(e),n.loading=!1}).catch(function(e){n.loading=!1,i.log.error(e)})},e.prototype.fetchPermissions=function(){var t=this,n=i.getSelectionFrameworkMBean(this.workspace);return this.$q.all(i.FrameworkService.FRAMEWORK_MBEAN_ATTRIBUTES.map(function(e){return t.attributesService.canInvoke(n,e,"Int")}))},e.prototype.updateFrameworkConfiguration=function(){var t=this;this.framework.startLevel<this.framework.initialBundleStartLevel?Core.notification("danger","Cannot set framework start level below initial bundle start level"):null!==this.maxBundleStartLevel&&this.framework.startLevel<this.maxBundleStartLevel?Core.notification("danger","Cannot set framework start level to "+this.framework.startLevel+".\n\nSome installed bundles require a start level of "+this.maxBundleStartLevel+"."):(this.saveInProgress=!0,this.frameworkService.updateConfiguration(this.framework).then(function(e){t.saveInProgress=!1,Core.notification("success","Configuration updated")}).catch(function(e){t.saveInProgress=!1,Core.notification("danger",e)}))},e.prototype.saveDisabled=function(){return null===this.framework||null===this.framework.initialBundleStartLevel||null===this.framework.startLevel||!0===this.saveInProgress},e.prototype.hasEditPermission=function(){return this.canSave},e}();i.FrameworkController=e,i.frameworkComponent={template:'\n      <div class="framework-main">\n        <h1>Framework Configuration</h1>\n        <p ng-if="$ctrl.loading">Loading...</p>\n        <div ng-if="!$ctrl.loading">\n          <form class="form-horizontal framework-form" ng-submit="$ctrl.updateFrameworkConfiguration()">\n            <div class="form-group">\n              <label class="col-sm-3 control-label" for="startLevel">Current Framework Start Level</label>\n              <div class="col-sm-2">\n                <input id="startLevel" class="form-control" type="number" min="0" max="100" ng-model="$ctrl.framework.startLevel">\n              </div>\n            </div>\n            <div class="form-group">\n              <label class="col-sm-3 control-label" for="initialBundleStartLevel">Initial Bundle Start Level</label>\n              <div class="col-sm-2">\n                <input id="initialBundleStartLevel" class="form-control" type="number" min="0" max="100" ng-model="$ctrl.framework.initialBundleStartLevel">\n              </div>\n            </div>\n            <div ng-if="$ctrl.hasEditPermission()" class="form-group">\n              <div class="col-sm-offset-3 col-sm-2">\n                <button type="submit" class="btn btn-primary" ng-disabled="$ctrl.saveDisabled()">\n                  Save\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    ',controller:e}}(Osgi||(Osgi={})),function(e){e.frameworkModule=angular.module("hawtio-osgi-framework",[]).component("framework",e.frameworkComponent).service("frameworkService",e.FrameworkService).name}(Osgi||(Osgi={})),function(e){var t=function(){function e(e){this.workspace=e}return e.$inject=["workspace"],e.prototype.$onInit=function(){this.tabs=[];var e=new Nav.HawtioTab("Bundles","/osgi/bundles");this.tabs.push(e),Karaf.getSelectionFeaturesMBean(this.workspace)&&this.tabs.push(new Nav.HawtioTab("Features","/osgi/features")),this.tabs.push(new Nav.HawtioTab("Packages","/osgi/packages")),this.tabs.push(new Nav.HawtioTab("Services","/osgi/services")),Karaf.getSelectionScrMBean(this.workspace)&&this.tabs.push(new Nav.HawtioTab("Declarative Services","/osgi/scr-components")),this.tabs.push(new Nav.HawtioTab("Server","/osgi/server")),this.tabs.push(new Nav.HawtioTab("Framework","/osgi/fwk")),this.tabs.push(new Nav.HawtioTab("Configuration","/osgi/configurations"))},e}();e.OsgiController=t,e.osgiComponent={template:'<hawtio-tabs-layout tabs="$ctrl.tabs"></hawtio-tabs-layout>',controller:t}}(Osgi||(Osgi={})),function(r){var e=function(){function e(e,t){this.jolokia=t,this.workspace=e}return e.prototype.getBundles=function(){var i={},e=this.jolokia.request({type:"exec",mbean:r.getSelectionBundleMBean(this.workspace),operation:"listBundles()"},Core.onSuccess(null));return angular.forEach(e.value,function(e,t){var n={Identifier:e.Identifier,Name:"",SymbolicName:e.SymbolicName,Fragment:e.Fragment,State:e.State,Version:e.Version,LastModified:new Date(Number(e.LastModified)),Location:e.Location,StartLevel:void 0,RegisteredServices:e.RegisteredServices,ServicesInUse:e.ServicesInUse};e.Headers["Bundle-Name"]&&(n.Name=e.Headers["Bundle-Name"].Value),i[e.Identifier]=n}),i},e.prototype.getServices=function(){var n={},e=this.jolokia.request({type:"exec",mbean:r.getSelectionServiceMBean(this.workspace),operation:"listServices()"},Core.onSuccess(null)).value;return angular.forEach(e,function(e,t){n[e.Identifier]=e}),n},e.prototype.getPackages=function(){var t={};return this.jolokia.request({type:"exec",mbean:r.getSelectionPackageMBean(this.workspace),operation:"listPackages()"},Core.onSuccess(null)).value.values.forEach(function(e){t[e.Name+"-"+e.Version]=e}),t},e}();r.OsgiDataService=e}(Osgi||(Osgi={})),function(n){n._module=angular.module(n.pluginName,["infinite-scroll",n.bundlesModule,n.configurationModule,n.frameworkModule]).component("osgi",n.osgiComponent),n._module.config(["$routeProvider",function(e){e.when("/osgi/bundles",{template:"<bundles></bundles>"}).when("/osgi/bundles/:bundleId",{templateUrl:"plugins/osgi/html/bundle.html"}).when("/osgi/services",{templateUrl:"plugins/osgi/html/services.html"}).when("/osgi/packages",{templateUrl:"plugins/osgi/html/packages.html"}).when("/osgi/configurations",{templateUrl:"plugins/osgi/html/configurations.html"}).when("/osgi/configurations/:id",{template:"<osgi-configuration></osgi-configuration>"}).when("/osgi/fwk",{template:"<framework></framework>"})}]),n._module.run(["mainNavService","workspace","helpRegistry",function(e,t,n){n.addUserDoc("osgi","plugins/osgi/doc/help.md",function(){return t.treeContainsDomainAndProperties("osgi.core")}),e.addItem({title:"OSGi",basePath:"/osgi",template:"<osgi></osgi>",isValid:function(){return t.treeContainsDomainAndProperties("osgi.core")}})}]),n._module.factory("osgiDataService",["workspace","jolokia",function(e,t){return new n.OsgiDataService(e,t)}]),hawtioPluginLoader.addModule(n.pluginName)}(Osgi||(Osgi={})),function(t){function e(e){e.when("/quartz/scheduler",{template:"<quartz-scheduler></quartz-scheduler>"}).when("/quartz/triggers",{template:"<quartz-triggers></quartz-triggers>"}).when("/quartz/jobs",{template:"<quartz-jobs></quartz-jobs>"})}function n(e,t){e.addItem({title:"Quartz",basePath:"/quartz",template:"<quartz></quartz>",isValid:function(){return r(t)}})}function i(e,t){e.addUserDoc("quartz","plugins/quartz/doc/help.md",function(){return r(t)})}function r(e){return e.treeContainsDomainAndProperties(t.jmxDomain)}e.$inject=["$routeProvider"],n.$inject=["mainNavService","workspace"],i.$inject=["helpRegistry","workspace"],t.log=Logger.get("hawtio-quartz"),t.jmxDomain="quartz",t.configureRoutes=e,t.configureLayout=n,t.configureHelp=i,t.iconClass=function(e){var t="pficon pficon-ok",n="pficon pficon-paused";if(_.isBoolean(e))return e?t:n;if(e)switch(e.toString().toLowerCase()){case"true":case"normal":return t;case"false":case"paused":return n}return"pficon pficon-error-circle-o"},t.misfireText=function(e){if(_.isNumber(e))switch(e){case-1:return"ignore";case 0:return"smart";case 1:return"fire once now";case 2:return"do nothing"}return"unknown"}}(Quartz||(Quartz={})),function(e){var t=function(){function e(e){this.$location=e}return e.$inject=["$location"],e.prototype.$onInit=function(){this.tabs=[],this.tabs.push(new Nav.HawtioTab("Scheduler","/quartz/scheduler")),this.tabs.push(new Nav.HawtioTab("Triggers","/quartz/triggers")),this.tabs.push(new Nav.HawtioTab("Jobs","/quartz/jobs"))},e.prototype.goto=function(e){this.$location.path(e.path)},e}();e.QuartzNavController=t,e.quartzComponent={template:'\n      <div class="tree-nav-layout">\n        <div class="sidebar-pf sidebar-pf-left" resizable r-directions="[\'right\']">\n          <quartz-tree></quartz-tree>\n        </div>\n        <div class="tree-nav-main">\n          <div class="nav-tabs-main">\n            <hawtio-tabs tabs="$ctrl.tabs" on-change="$ctrl.goto(tab)"></hawtio-tabs>\n            <div class="contents" ng-view></div>\n          </div>\n        </div>\n      </div>\n    ',controller:t}}(Quartz||(Quartz={})),function(t){var e=function(){function e(e,t){this.jolokia=e,this.workspace=t}return e.$inject=["jolokia","workspace"],e.prototype.getQuartzMBean=function(){var e=this.getMBeanTypeFolder(t.jmxDomain,"QuartzScheduler");return Core.pathGet(e,["objectName"])},e.prototype.getMBeanTypeFolder=function(e,t){var n=((this.workspace.mbeanTypesToDomain||{})[t]||{})[e];return angular.isArray(n)&&0<n.length?n[0]:n},e.prototype.searchSchedulers=function(e){this.jolokia.search("quartz:type=QuartzScheduler,*",Core.onSuccess(e))},e.prototype.readSchedulerName=function(e){return this.jolokia.request({type:"read",mbean:e,attribute:["SchedulerName"]}).value.SchedulerName},e.prototype.registerRead=function(e,t,n){this.unregister(e),Core.register(this.jolokia,e,[{type:"read",mbean:t}],Core.onSuccess(n))},e.prototype.unregister=function(e){Core.unregister(this.jolokia,e)},e.prototype.getTriggerState=function(e,t){return this.jolokia.request({type:"exec",mbean:e,operation:"getTriggerState",arguments:t})},e.prototype.start=function(e,t){this.execute(e,"start",t)},e.prototype.standby=function(e,t){this.execute(e,"standby",t)},e.prototype.execute=function(e,t,n,i){void 0===i&&(i={}),this.jolokia.request({type:"exec",mbean:e,operation:t},Core.onSuccess(n,i))},e.prototype.canPauseTrigger=function(e){return this.canExecuteOperation(e,"pauseTrigger")},e.prototype.pauseTrigger=function(e,t,n){this.executeWithArgs(e,"pauseTrigger",t,n)},e.prototype.canResumeTrigger=function(e){return this.canExecuteOperation(e,"resumeTrigger")},e.prototype.resumeTrigger=function(e,t,n){this.executeWithArgs(e,"resumeTrigger",t,n)},e.prototype.canUpdateTrigger=function(e){return this.canExecuteOperation("hawtio:type=QuartzFacade","updateCronTrigger")||this.canExecuteOperation("hawtio:type=QuartzFacade","updateSimpleTrigger")},e.prototype.updateCronTrigger=function(e,t,n){this.executeWithArgs("hawtio:type=QuartzFacade","updateCronTrigger",e,t,{error:n})},e.prototype.updateSimpleTrigger=function(e,t,n){this.executeWithArgs("hawtio:type=QuartzFacade","updateSimpleTrigger",e,t,{error:n})},e.prototype.canManualTrigger=function(e){return this.canExecuteOperation(e,"triggerJob")},e.prototype.triggerJob=function(e,t,n,i){this.executeWithArgs(e,"triggerJob",t,n,{error:i})},e.prototype.executeWithArgs=function(e,t,n,i,r){void 0===r&&(r={}),this.jolokia.request({type:"exec",mbean:e,operation:t,arguments:n},Core.onSuccess(i,r))},e.prototype.enableSampledStatistics=function(e){this.setAttribute(e,"SampledStatisticsEnabled",!0)},e.prototype.disableSampledStatistics=function(e){this.setAttribute(e,"SampledStatisticsEnabled",!1)},e.prototype.setAttribute=function(e,t,n){this.jolokia.setAttribute(e,t,n)},e.prototype.canExecuteOperation=function(e,t){return this.workspace.hasInvokeRightsForName(e,t)},e}();t.QuartzService=e}(Quartz||(Quartz={})),function(o){var e=function(){function e(e,t,n,i){this.$scope=e,this.$location=t,this.workspace=n,this.quartzService=i}return e.$inject=["$scope","$location","workspace","quartzService"],e.prototype.$onInit=function(){var e=this;this.$scope.$on("$routeChangeSuccess",function(){setTimeout(function(){return e.updateSelectionFromURL()},50)}),this.$scope.$on(Jmx.TreeEvent.Updated,function(){return e.reloadTree()}),this.reloadTree()},e.prototype.reloadTree=function(){var t=this;o.log.debug("Reloading Quartz tree");var e=this.quartzService.getQuartzMBean();if(e){o.log.debug("Quartz mbean found:",e);var n=this.createQuartzSchedulerFolder("Quartz Schedulers","quartz-folder","quartzSchedulers",""),i=[n];this.quartzService.searchSchedulers(function(e){e.forEach(function(e){return t.addChildScheduler(n,e)}),o.log.debug("Setting up Quartz tree with nid:",t.$location.search().nid),Jmx.enableTree(t.$scope,t.$location,t.workspace,$(o.treeElementId),i),setTimeout(function(){return t.updateSelectionFromURL()},50)})}else o.log.debug("Quartz mbean not found")},e.prototype.createQuartzSchedulerFolder=function(e,t,n,i){var r=new Jmx.Folder(e);return r.class=t,r.typeName=n,r.domain=o.jmxDomain,r.key=i,r},e.prototype.addChildScheduler=function(e,t){var n=this.quartzService.readSchedulerName(t),i=this.createQuartzSchedulerFolder(n,"quartz-scheduler","quartzScheduler",n);i.objectName=t,e.children.push(i)},e.prototype.updateSelectionFromURL=function(){Jmx.updateTreeSelectionFromURLAndAutoSelect(this.$location,$(o.treeElementId),function(e){var t=e.children;return t&&1===t.length?t[0]:null},!0),this.workspace.broadcastSelectionNode()},e}();o.TreeController=e,o.treeComponent={template:'\n      <div class="tree-nav-sidebar-content">\n        <div class="tree-nav-sidebar-header">\n          <h4>Quartz Schedulers</h4>\n        </div>\n        <div id="quartztree" class="treeview-pf-hover treeview-pf-select"></div>\n      </div>\n    ',controller:e}}(Quartz||(Quartz={})),function(e){e.treeModule=angular.module("hawtio-quartz-tree",[]).component("quartzTree",e.treeComponent).name,e.treeElementId="#quartztree"}(Quartz||(Quartz={})),function(i){var e=function(){function e(e,t,n){this.$scope=e,this.$location=t,this.quartzService=n,this.selectedSchedulerMBean=null,this.selectedScheduler=null,this.triggers=[],this.jobs=[]}return e.$inject=["$scope","$location","quartzService"],e.prototype.$onInit=function(){var n=this;this.$scope.$on(Jmx.TreeEvent.NodeSelected,function(e,t){return n.selectionChanged(t)})},e.prototype.clear=function(){this.selectedSchedulerMBean=null,this.selectedScheduler=null,this.triggers=[],this.jobs=[]},e.prototype.selectionChanged=function(e){var t=this,n=e?e.objectName:null;i.log.debug("Selection is now:",n),n?(this.selectedSchedulerMBean=n,this.$location.search("nid",e.key),this.quartzService.registerRead(this.$scope,this.selectedSchedulerMBean,function(e){return t.renderQuartz(e)})):(this.quartzService.unregister(this.$scope),this.clear())},e.prototype.renderQuartz=function(e){i.log.debug("Selected scheduler:",this.selectedScheduler);var t=e.value;t&&(this.selectedScheduler=t,this.updateSelectedScheduler()),Core.$apply(this.$scope)},e.prototype.updateSelectedScheduler=function(){var i=this,r=this.selectedScheduler;this.triggers=[],r.AllTriggers.forEach(function(e){i.updateTriggerState(e,r),i.triggers.push(e)}),this.onTriggersUpdated(),this.jobs=[],r.JobGroupNames.forEach(function(e){for(var t in r.AllJobDetails)if(r.AllJobDetails.hasOwnProperty(t)){var n=r.AllJobDetails[t];n&&(n=n[e])&&(n.id=n.name+"/"+n.group,i.jobs.push(n))}}),this.onJobsUpdated()},e.prototype.updateTriggerState=function(e,t){var n=this.quartzService.getTriggerState(this.selectedSchedulerMBean,[e.name,e.group]);e.state=n?n.value:"unknown",e.id=e.name+"/"+e.group;var i=t.AllJobDetails[e.jobName];if(i&&(i=i[e.group])){var r=void 0,o=void 0,a=i.jobDataMap||{};if(e.type=a.CamelQuartzTriggerType,e.type&&"cron"==e.type)e.expression=a.CamelQuartzTriggerCronExpression;else if(e.type&&"simple"==e.type)e.expression="every "+a.CamelQuartzTriggerSimpleRepeatInterval+" ms.",r=a.CamelQuartzTriggerSimpleRepeatCounter,o=a.CamelQuartzTriggerSimpleRepeatInterval,e.expression+=0<r?" ("+r+" times)":" (forever)",e.repeatCount=r,e.repeatInterval=o;else{var s=a.CamelQuartzEndpoint;if(s){var l=Core.getQueryParameterValue(s,"cron");l&&(e.type="cron",l=l.replace(/\++/g," "),e.expression=l),r=Core.getQueryParameterValue(s,"trigger.repeatCount"),o=Core.getQueryParameterValue(s,"trigger.repeatInterval"),(r||o)&&(e.type="simple",e.expression="every "+o+" ms.",e.expression+=r&&0<r?" ("+r+" times)":" (forever)",e.repeatCount=r,e.repeatInterval=o)}}}},e.prototype.onTriggersUpdated=function(){},e.prototype.onJobsUpdated=function(){},e}();i.QuartzController=e}(Quartz||(Quartz={})),function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.pauseScheduler=function(){var e=this;this.selectedSchedulerMBean&&this.quartzService.standby(this.selectedSchedulerMBean,function(){return Core.notification("success","Paused scheduler: "+e.selectedScheduler.SchedulerName)})},t.prototype.startScheduler=function(){var e=this;this.selectedSchedulerMBean&&this.quartzService.start(this.selectedSchedulerMBean,function(){return Core.notification("success","Started scheduler: "+e.selectedScheduler.SchedulerName)})},t.prototype.enableSampleStatistics=function(){this.selectedSchedulerMBean&&this.quartzService.enableSampledStatistics(this.selectedSchedulerMBean)},t.prototype.disableSampleStatistics=function(){this.selectedSchedulerMBean&&this.quartzService.disableSampledStatistics(this.selectedSchedulerMBean)},t}(e.QuartzController);e.SchedulerController=t,e.schedulerComponent={templateUrl:"plugins/quartz/scheduler/scheduler.html",controller:t}}(Quartz||(Quartz={})),function(e){e.schedulerModule=angular.module("hawtio-quartz-scheduler",[]).component("quartzScheduler",e.schedulerComponent).name}(Quartz||(Quartz={})),function(l){var e=function(e){function t(){var n=null!==e&&e.apply(this,arguments)||this;return n.filteredTriggers=[],n.filterFields=[{id:"state",title:"State",placeholder:"Filter by State...",filterType:"select",filterValues:["NORMAL","PAUSED"]},{id:"group",title:"Group",placeholder:"Filter by Group...",filterType:"text"},{id:"name",title:"Name",placeholder:"Filter by Name...",filterType:"text"},{id:"type",title:"Type",placeholder:"Filter by Type...",filterType:"select",filterValues:["cron","simple"]}],n.filterConfig={fields:n.filterFields,resultsCount:0,totalCount:0,appliedFilters:[],onFilterChange:function(e){return n.applyFilters(e)}},n.toolbarConfig={filterConfig:n.filterConfig,actionsConfig:{},isTableView:!0},n.tableConfig={selectionMatchProp:"name",showCheckboxes:!1},n.tableColumns=[{header:"State",itemField:"state",templateFn:function(e){return'\n          <div class="centered">\n            <span class="'+l.iconClass(e)+'"></span>\n          </div>\n        '}},{header:"Group",itemField:"group"},{header:"Name",itemField:"name"},{header:"Type",itemField:"type"},{header:"Expression",itemField:"expression"},{header:"Misfire Instruction",itemField:"misfireInstruction",templateFn:function(e){return l.misfireText(e)}},{header:"Previous Fire",itemField:"previousFireTime"},{header:"Next Fire",itemField:"nextFireTime"},{header:"Final Fire",itemField:"finalFireTime"}],n.resumePauseAction={name:"Resume/Pause",actionFn:function(e,t){switch(t.state){case"NORMAL":n.pauseTrigger(t);break;case"PAUSED":n.resumeTrigger(t);break;default:l.log.warn("Unknown trigger state:",t.state)}}},n.updateAction={name:"Update Trigger",actionFn:function(e,t){return n.beforeUpdateTrigger(t)}},n.manualTriggerAction={name:"Manually Trigger",actionFn:function(e,t){return n.beforeManualTrigger(t)}},n.actionButtons=[],n.menuActions=[],n.showUpdateTriggerDialog=!1,n.updateTriggerTitle=null,n.updateTriggerTemplate="plugins/quartz/triggers/triggers-update-dialog.html",n.updateTriggerForm=null,n.updateTriggerButtons=[{label:"Cancel",isCancel:!0},{label:"Update",class:"btn-primary",actionFn:function(){return n.onUpdateTrigger()}}],n.misfireInstructions=[{id:"-1",title:"Ignore"},{id:"0",title:"Smart"},{id:"1",title:"Fire once now"},{id:"2",title:"Do nothing"}],n.showManualTriggerDialog=!1,n.manualTriggerTitle="Manually fire trigger",n.manualTriggerTemplate="plugins/quartz/triggers/triggers-manual-dialog.html",n.manualTriggerForm=null,n.manualTriggerButtons=[{label:"Cancel",isCancel:!0},{label:"Fire now",class:"btn-danger",actionFn:function(){return n.onManualTrigger()}}],n}return __extends(t,e),t.prototype.$onInit=function(){e.prototype.$onInit.call(this),this.configureActions()},t.prototype.clear=function(){e.prototype.clear.call(this),this.updateTriggerForm=null,this.manualTriggerForm=null},t.prototype.onTriggersUpdated=function(){this.applyFilters(this.toolbarConfig.filterConfig.appliedFilters)},t.prototype.applyFilters=function(e){l.log.debug("Applying filters:",e);var i=this.triggers;e.forEach(function(t){switch(t.id){case"state":i=i.filter(function(e){return e.state===t.value});break;case"group":case"name":var n=new RegExp(t.value,"i");i=i.filter(function(e){return null!==e[t.id].match(n)});break;case"type":i=i.filter(function(e){return e.type===t.value});break;default:l.log.warn("Unknown filter:",t)}}),l.log.debug("Filtered triggers:",i),this.filteredTriggers=i,this.toolbarConfig.filterConfig.resultsCount=this.filteredTriggers.length,this.toolbarConfig.filterConfig.totalCount=this.triggers.length},t.prototype.configureActions=function(){(this.quartzService.canResumeTrigger(this.selectedSchedulerMBean)||this.quartzService.canPauseTrigger(this.selectedSchedulerMBean))&&this.actionButtons.push(this.resumePauseAction),this.quartzService.canUpdateTrigger(this.selectedSchedulerMBean)&&this.menuActions.push(this.updateAction),this.quartzService.canManualTrigger(this.selectedSchedulerMBean)&&this.menuActions.push(this.manualTriggerAction),l.log.debug("RBAC - Rendered triggers actions:",this.actionButtons.concat(this.menuActions).map(function(e){return e.name}))},t.prototype.pauseTrigger=function(e){var t=e.group,n=e.name,i=t+"/"+n;this.quartzService.pauseTrigger(this.selectedSchedulerMBean,[n,t],function(){return Core.notification("success","Paused trigger "+i)})},t.prototype.resumeTrigger=function(e){var t=e.group,n=e.name,i=t+"/"+n;this.quartzService.resumeTrigger(this.selectedSchedulerMBean,[n,t],function(){return Core.notification("success","Resumed trigger "+i)})},t.prototype.beforeUpdateTrigger=function(e){switch(this.updateTriggerTitle="Update trigger: "+e.group+"/"+e.name,e.type){case"cron":this.updateTriggerForm={group:e.group,name:e.name,type:"cron",cron:e.expression,repeatCount:null,repeatInterval:null,misfireInstruction:""+e.misfireInstruction,showCron:!0,showRepeatCount:!1,showRepeatInterval:!1,misfireInstructions:this.misfireInstructions},this.showUpdateTriggerDialog=!0;break;case"simple":this.updateTriggerForm={group:e.group,name:e.name,type:"simple",cron:null,repeatCount:e.repeatCount,repeatInterval:e.repeatInterval,misfireInstruction:""+e.misfireInstruction,showCron:!1,showRepeatCount:!0,showRepeatInterval:!0,misfireInstructions:this.misfireInstructions},this.showUpdateTriggerDialog=!0;break;default:this.updateTriggerForm=null,this.showUpdateTriggerDialog=!1}},t.prototype.onUpdateTrigger=function(){var e=this,t=this.updateTriggerForm.group,n=this.updateTriggerForm.name,i=this.updateTriggerForm.cron,r=parseInt(this.updateTriggerForm.misfireInstruction),o=this.updateTriggerForm.repeatCount,a=this.updateTriggerForm.repeatInterval;this.updateTriggerForm=null;var s=t+"/"+n;if(i)return l.log.info("Updating trigger:",s,"cron =",i,"misfireInstruction =",r),void this.quartzService.updateCronTrigger([this.selectedSchedulerMBean,n,t,r,i,null],function(){Core.notification("success","Updated trigger "+s),e.updateSelectedScheduler()},function(e){return Core.notification("danger","Could not update trigger "+s+" due to: "+e.error)});(o||a)&&(null==o&&(o=-1),null==a&&(a=1e3),l.log.info("Updating trigger:",s,"with interval",a,"ms. for",o,"times"),this.quartzService.updateSimpleTrigger([this.selectedSchedulerMBean,n,t,r,o,a],function(){Core.notification("success","Updated trigger "+s),e.updateSelectedScheduler()},function(e){return Core.notification("danger","Could not update trigger "+s+" due to: "+e.error)}))},t.prototype.beforeManualTrigger=function(e){this.manualTriggerForm={name:e.jobName,group:e.jobGroup,parameters:"{}"},this.showManualTriggerDialog=!0},t.prototype.onManualTrigger=function(){var e=this.manualTriggerForm.name,t=this.manualTriggerForm.group,n=JSON.parse(this.manualTriggerForm.parameters),i=t+"/"+e;this.manualTriggerForm=null,l.log.info("Mannually firing trigger",i,"with parameters",n),this.quartzService.triggerJob(this.selectedSchedulerMBean,[e,t,n],function(){return Core.notification("success","Manually fired trigger "+i)},function(e){return Core.notification("danger","Could not manually fire trigger "+i+" due to: "+e.error)})},t.prototype.onClose=function(){this.showUpdateTriggerDialog=!1,this.showManualTriggerDialog=!1},t}(l.QuartzController);l.TriggerController=e,l.triggersComponent={templateUrl:"plugins/quartz/triggers/triggers.html",controller:e}}(Quartz||(Quartz={})),function(e){e.triggersModule=angular.module("hawtio-quartz-triggers",[]).component("quartzTriggers",e.triggersComponent).name}(Quartz||(Quartz={})),function(r){var e=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.filteredJobs=[],t.filterFields=[{id:"group",title:"Group",placeholder:"Filter by Group...",filterType:"text"},{id:"name",title:"Name",placeholder:"Filter by Name...",filterType:"text"},{id:"durability",title:"Durable",placeholder:"Filter by Durable...",filterType:"select",filterValues:["true","false"]},{id:"shouldRecover",title:"Recover",placeholder:"Filter by Recover...",filterType:"select",filterValues:["true","false"]},{id:"jobClass",title:"Job ClassName",placeholder:"Filter by Job ClassName...",filterType:"text"},{id:"description",title:"Description",placeholder:"Filter by Description...",filterType:"text"}],t.filterConfig={fields:t.filterFields,resultsCount:0,totalCount:0,appliedFilters:[],onFilterChange:function(e){return t.applyFilters(e)}},t.toolbarConfig={filterConfig:t.filterConfig,isTableView:!0},t.tableConfig={selectionMatchProp:"name",showCheckboxes:!1},t.tableColumns=[{header:"Group",itemField:"group"},{header:"Name",itemField:"name"},{header:"Durable",itemField:"durability"},{header:"Recover",itemField:"shouldRecover"},{header:"Job ClassName",itemField:"jobClass"},{header:"Description",itemField:"description"}],t.showJobDetails=!1,t.jobDetailsTitle=null,t.jobDetailsTemplate="plugins/quartz/jobs/jobs-details-dialog.html",t.jobDetailsScope=null,t.jobDetailsButtons=[{label:"Close"}],t}return __extends(t,e),t.prototype.onJobsUpdated=function(){this.applyFilters(this.toolbarConfig.filterConfig.appliedFilters)},t.prototype.applyFilters=function(e){r.log.debug("Applying filters:",e);var i=this.jobs;e.forEach(function(t){switch(t.id){case"group":case"name":case"jobClass":case"description":var n=new RegExp(t.value,"i");i=i.filter(function(e){return null!==e[t.id].match(n)});break;case"durability":case"shouldRecover":i=i.filter(function(e){return e[t.id].toString()===t.value});break;default:r.log.warn("Unknown filter:",t)}}),r.log.debug("Filtered jobs:",i),this.filteredJobs=i,this.toolbarConfig.filterConfig.resultsCount=this.filteredJobs.length,this.toolbarConfig.filterConfig.totalCount=this.jobs.length},t.prototype.onClick=function(e){r.log.debug("Selected job:",e),this.jobDetailsTitle="Job DataMap details of "+e.group+"/"+e.name,this.jobDetailsScope={dataMap:e.jobDataMap,keys:Object.keys(e.jobDataMap).sort()},this.showJobDetails=!0},t.prototype.onClose=function(){this.jobDetailsScope=null,this.showJobDetails=!1},t}(r.QuartzController);r.JobsController=e,r.jobsComponent={templateUrl:"plugins/quartz/jobs/jobs.html",controller:e}}(Quartz||(Quartz={})),function(e){e.jobsModule=angular.module("hawtio-quartz-jobs",[]).component("quartzJobs",e.jobsComponent).name}(Quartz||(Quartz={})),function(e){e.quartzModule=angular.module("hawtio-quartz",[e.treeModule,e.schedulerModule,e.triggersModule,e.jobsModule]).config(e.configureRoutes).filter("quartzIconClass",function(){return e.iconClass}).filter("quartzMisfire",function(){return e.misfireText}).run(e.configureLayout).run(e.configureHelp).component("quartz",e.quartzComponent).service("quartzService",e.QuartzService).name}(Quartz||(Quartz={})),function(e){var t=function(e,t){this.global=e,this.details=t};(SpringBoot||(SpringBoot={})).Health=t}(),function(o){var e=function(){function e(e,t,n){this.jolokiaService=e,this.humanizeService=t,this.springBootService=n,this.sortByFirstValue=function(e,t){var n=e[0].toLowerCase(),i=t[0].toLowerCase();return"status"===n?-1:"status"===i?1:n<i?-1:i<n?1:0}}return e.$inject=["jolokiaService","humanizeService","springBootService"],e.prototype.getHealth=function(){var r=this;o.log.debug("Fetch health data");var e=this.springBootService.getEndpointMBean(["healthEndpoint","Health"],["getData","health"]);return this.jolokiaService.execute(e.objectName,e.operation).then(function(e){var t=e.details?e.details:e,n=r.getGlobalCard(e),i=r.getDetailCards(t);return new o.Health(n,i)})},e.prototype.getGlobalCard=function(e){return{title:"Overall status: "+e.status,iconClass:this.getIconClass(e.status)}},e.prototype.getDetailCards=function(e){var t=this;return _.toPairs(e).filter(function(e){return _.isObject(e[1])}).sort(this.sortByFirstValue).map(function(e){return{title:t.humanizeService.toSentenceCase(e[0]),iconClass:t.getIconClass(e[1].status),info:t.buildInfo(e[1])}})},e.prototype.buildInfo=function(e){var t=this;return _.toPairs(e).sort(this.sortByFirstValue).map(function(e){return _.isObject(e[1])?'<ul><span class="info-item-label">'+t.humanizeService.toSentenceCase(e[0])+"</span><li>"+t.buildInfo(e[1]).join("")+"</li></ul>":'<ul><li><span class="info-item-label">'+t.humanizeService.toSentenceCase(e[0])+": </span>"+e[1]+"</li></ul>"})},e.prototype.getIconClass=function(e){switch(e){case"UP":return"pficon pficon-ok";case"DOWN":return"pficon pficon-error-circle-o";case"OUT_OF_SERVICE":return"pficon pficon-warning-triangle-o";case"UNKNOWN":return"pficon pficon-help";default:return"pficon pficon-info"}},e}();o.HealthService=e}(SpringBoot||(SpringBoot={})),function(t){var e=function(){function e(e,t){this.$interval=e,this.healthService=t,this.reloadDelay=2e4}return e.$inject=["$interval","healthService"],e.prototype.$onInit=function(){this.loadDataPeriodically()},e.prototype.$onDestroy=function(){this.cancelReloadTask()},e.prototype.loadDataPeriodically=function(){var e=this;this.loadData(),this.reloadTask=this.$interval(function(){return e.loadData()},this.reloadDelay)},e.prototype.loadData=function(){var t=this;this.healthService.getHealth().then(function(e){return t.health=e})},e.prototype.cancelReloadTask=function(){this.$interval.cancel(this.reloadTask)||t.log.error("Failed to cancel Health data reload task")},e}();t.HealthController=e,t.healthComponent={template:'\n      <div class="spring-boot-health-main">\n        <h1>Health</h1>\n        <div class="cards-pf" ng-if="$ctrl.health">\n          <div class="container-fluid container-cards-pf">\n            <div class="row row-cards-pf">\n              <div class="col-lg-12">\n                <pf-info-status-card status="$ctrl.health.global" show-top-border="true"></pf-info-status-card>\n              </div>\n              <div class="col-lg-12" ng-repeat="item in $ctrl.health.details">\n                <pf-info-status-card status="item" html-content="true"></pf-info-status-card>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',controller:e}}(SpringBoot||(SpringBoot={})),function(e){e.healthModule=angular.module("spring-boot-health",[]).component("springBootHealth",e.healthComponent).service("healthService",e.HealthService).name}(SpringBoot||(SpringBoot={})),function(e){var t=function(e){this.timestamp=e.timestamp,e.info?(this.method=e.info.method,this.path=e.info.path,this.info=e.info,e.info.timeTaken&&(this.timeTaken=parseInt(e.info.timeTaken)),e.info.headers.response&&(this.httpStatusCode=parseInt(this.info.headers.response.status))):e.request&&(this.method=e.request.method,this.path=new URL(e.request.uri).pathname,(this.info=e).timeTaken&&(this.timeTaken=parseInt(e.timeTaken)),e.response&&e.response.status&&(this.httpStatusCode=parseInt(e.response.status)))};(SpringBoot||(SpringBoot={})).Trace=t}(),function(t){var e=function(){function e(e,t){this.jolokiaService=e,this.springBootService=t}return e.$inject=["jolokiaService","springBootService"],e.prototype.getTraces=function(){var e=this.springBootService.getEndpointMBean(["traceEndpoint","Httptrace"],["getData","traces"]);return this.jolokiaService.execute(e.objectName,e.operation).then(function(e){return(e.traces?e.traces:e).filter(function(e){var t=e.info?e.info.path:e.request.uri;return!1===/.*?\/jolokia\/?(?:\/.*(?=$))?$/.test(t)}).map(function(e){return new t.Trace(e)})})},e}();t.TraceService=e}(SpringBoot||(SpringBoot={})),function(e){var t=function(){function o(e,t,n,i,r,o){var a=this;this.traceService=e,this.$scope=t,this.$filter=n,this.$timeout=i,this.$interval=r,this.$uibModal=o,this.toolbarConfig={isTableView:!0,filterConfig:{fields:[{id:"timestamp",title:"Timestamp",placeholder:"Filter by timestamp...",filterType:"text"},{id:"status",title:"HTTP Status",placeholder:"Filter by HTTP status...",filterType:"text"},{id:"method",title:"HTTP Method",placeholder:"Filter by HTTP method...",filterType:"select",filterValues:["GET","DELETE","HEAD","OPTIONS","PATCH","POST","PUT","TRACE"]},{id:"path",title:"Path",placeholder:"Filter by path...",filterType:"text"},{id:"timeTaken",title:"Time Taken",placeholder:"Filter by time taken...",filterType:"number"}],onFilterChange:function(e){a.applyFilters(e)},appliedFilters:[],resultsCount:0}},this.loading=!0,this.traces=[],this.tableItems=[],this.dateFormat="yyyy-MM-dd HH:mm:ss.sss"}return o.$inject=["traceService","$scope","$filter","$timeout","$interval","$uibModal"],o.prototype.$onInit=function(){var e=this;this.loadTraces(),this.promise=this.$interval(function(){return e.loadTraces()},1e4)},o.prototype.$onDestroy=function(){this.$interval.cancel(this.promise)},o.prototype.loadTraces=function(){var r=this;this.loading=!0,this.traceService.getTraces().then(function(e){var t;if((t=r.traces).unshift.apply(t,r.aggregateTraces(e)),r.traces.length>o.CACHE_SIZE){var n=r.traces.length-(r.traces.length-o.CACHE_SIZE),i=r.traces.length-o.CACHE_SIZE;r.traces.splice(n,i)}r.applyFilters(r.toolbarConfig.filterConfig.appliedFilters),r.scrollIfRequired(),r.loading=!1})},o.prototype.applyFilters=function(e){var i=this,r=this.traces,o=this.$filter("date");e.forEach(function(t){var n=new RegExp(t.value,"i");switch(t.id){case"timestamp":r=r.filter(function(e){return n.test(o(e.timestamp,i.dateFormat))});break;case"status":r=r.filter(function(e){return parseInt(t.value)===e.httpStatusCode});break;case"method":r=r.filter(function(e){return n.test(e.method)});break;case"path":r=r.filter(function(e){return n.test(e.path)});break;case"timeTaken":r=r.filter(function(e){return parseInt(t.value)===e.timeTaken})}}),this.tableItems=r,this.toolbarConfig.filterConfig.resultsCount=r.length},o.prototype.getStatusClass=function(e){return e.httpStatusCode?e.httpStatusCode<400?"http-status-code-icon pficon pficon-ok":"http-status-code-icon pficon pficon-error-circle-o":""},o.prototype.openTraceModal=function(e){this.$scope.trace=e,this.$uibModal.open({templateUrl:"traceDetailsModal.html",scope:this.$scope,size:"lg",appendTo:$(document.querySelector(".spring-boot-trace-main"))})},o.prototype.aggregateTraces=function(e){var i=this,r=[];return e.forEach(function(t){var n=!1;i.traces.forEach(function(e){e.timestamp!==t.timestamp||e.method!==t.method||e.path!==t.path||(n=!0)}),n||r.push(t)}),r},o.prototype.scrollIfRequired=function(){var e=document.querySelector(".spring-boot-trace-scrollable-table");null!==e&&0===e.scrollTop&&this.$timeout(function(){return e.scrollTop=0},0)},o.CACHE_SIZE=500,o}();e.TraceController=t,e.traceComponent={templateUrl:"plugins/spring-boot/trace/trace.html",controller:t}}(SpringBoot||(SpringBoot={})),function(e){e.traceModule=angular.module("spring-boot-trace",[]).component("springBootTrace",e.traceComponent).service("traceService",e.TraceService).name}(SpringBoot||(SpringBoot={})),function(e){var t=function(){function e(e,t){this.jolokiaService=e,this.springBootService=t}return e.$inject=["jolokiaService","springBootService"],e.prototype.getLoggerConfiguration=function(){var e=this.springBootService.getEndpointMBean(["loggersEndpoint","Loggers"],["getLoggers","loggers"]);return this.jolokiaService.execute(e.objectName,e.operation).then(function(e){var i=[];return angular.forEach(e.loggers,function(e,t){var n={name:t,configuredLevel:null==e.configuredLevel?e.effectiveLevel:e.configuredLevel,effectiveLevel:e.effectiveLevel};i.push(n)}),{levels:e.levels,loggers:i}})},e.prototype.setLoggerLevel=function(e){var t=this.springBootService.getEndpointMBean(["loggersEndpoint","Loggers"],["setLogLevel","configureLogLevel"]);return this.jolokiaService.execute(t.objectName,t.operation,e.name,e.configuredLevel)},e}();e.LoggersService=t}(SpringBoot||(SpringBoot={})),function(e){var t=function(){function e(e){var t=this;this.loggersService=e,this.filterFields=[{id:"name",title:"Logger Name",placeholder:"Filter by logger name...",filterType:"text"},{id:"level",title:"Log Level",placeholder:"Filter by log level...",filterType:"select",filterValues:[]}],this.filterConfig={fields:this.filterFields,onFilterChange:function(e){t.applyFilters(e)},appliedFilters:[],resultsCount:0},this.toolbarConfig={filterConfig:this.filterConfig,isTableView:!1},this.pageSize=10,this.pageNumber=1,this.loading=!0,this.loggers=[],this.tableItems=[]}return e.$inject=["loggersService"],e.prototype.$onInit=function(){this.loadData()},e.prototype.loadData=function(){var t=this;this.loggersService.getLoggerConfiguration().then(function(e){t.loggers=e.loggers,t.loggerLevels=e.levels,t.tableItems=e.loggers,t.filterConfig.resultsCount=e.loggers.length,t.filterFields[1].filterValues=e.levels,t.numTotalItems=t.tableItems.length,0<t.filterConfig.appliedFilters.length&&t.applyFilters(t.filterConfig.appliedFilters),t.loading=!1}).catch(function(e){return Core.notification("danger",e)})},e.prototype.setLoggerLevel=function(e){var t=this;this.loggersService.setLoggerLevel(e).then(function(){t.loadData()}).catch(function(e){return Core.notification("danger",e)})},e.prototype.applyFilters=function(e){var n=this.loggers;e.forEach(function(e){var t=new RegExp(e.value,"i");switch(e.id){case"name":n=n.filter(function(e){return null!==e.name.match(t)});break;case"level":n=n.filter(function(e){return null!==e.effectiveLevel.match(t)})}}),this.tableItems=n,this.numTotalItems=n.length,this.toolbarConfig.filterConfig.resultsCount=n.length},e.prototype.orderLoggers=function(e){return"ROOT"===e.name?-1:e.name},e}();e.LoggersController=t,e.loggersComponent={template:'\n      <div class="spring-boot-loggers-main">\n        <h1>Loggers</h1>\n        <div class="blank-slate-pf no-border" ng-if="$ctrl.loading === false && $ctrl.loggers.length === 0">\n          <div class="blank-slate-pf-icon">\n            <span class="pficon pficon pficon-warning-triangle-o"></span>\n          </div>\n          <h1>No Spring Boot Loggers</h1>\n          <p>There are no loggers to display for this application.</p>\n          <p>Check your Spring Boot logging configuration.</p>\n        </div>\n        <div ng-show="$ctrl.loggers.length > 0">\n          <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n          <ul class="list-group spring-boot-loggers-list-group">\n            <li class="list-group-item"\n                ng-repeat="item in $ctrl.tableItems | orderBy : $ctrl.orderLoggers | startFrom:($ctrl.pageNumber - 1) * $ctrl.pageSize | limitTo: $ctrl.pageSize">\n                <div title="Logger Level">\n                  <select ng-model="item.configuredLevel"\n                          ng-options="level for level in $ctrl.loggerLevels"\n                          ng-change="$ctrl.setLoggerLevel(item)"\n                          ng-selected="item.effectiveLevel === level">\n                  </select>\n                </div>\n                <div class="list-group-item-heading">{{item.name}}</div>\n            </li>\n          </ul>\n          <pf-pagination\n            page-size="$ctrl.pageSize"\n            page-number="$ctrl.pageNumber"\n            num-total-items="$ctrl.numTotalItems">\n          </pf-pagination>\n        </div>\n      </div>\n    ',controller:t}}(SpringBoot||(SpringBoot={})),function(e){e.loggersModule=angular.module("spring-boot-loggers",[]).component("springBootLoggers",e.loggersComponent).service("loggersService",e.LoggersService).name}(SpringBoot||(SpringBoot={})),function(e){var t=function(){function e(e){this.workspace=e}return e.$inject=["workspace"],e.prototype.getTabs=function(){var e=[];return(this.hasEndpoint("healthEndpoint")||this.hasEndpoint("Health"))&&e.push(new Nav.HawtioTab("Health","/spring-boot/health")),(this.hasEndpoint("loggersEndpoint")||this.hasEndpoint("Loggers"))&&e.push(new Nav.HawtioTab("Loggers","/spring-boot/loggers")),(this.hasEndpoint("traceEndpoint")||this.hasEndpoint("Httptrace"))&&e.push(new Nav.HawtioTab("Trace","/spring-boot/trace")),e},e.prototype.getEndpointMBean=function(e,t){var n=this,i=e.map(function(e){return n.workspace.findMBeanWithProperties("org.springframework.boot",{type:"Endpoint",name:e})}).filter(function(e){return null!==e});if(0<i.length){var r=i[0],o=t.filter(function(e){return r.mbean.op[e]});if(0<o.length)return{objectName:r.objectName,operation:o[0]}}return null},e.prototype.isValid=function(){return 0<this.getTabs().length},e.prototype.hasEndpoint=function(e){return this.workspace.treeContainsDomainAndProperties("org.springframework.boot",{type:"Endpoint",name:e})},e}();e.SpringBootService=t}(SpringBoot||(SpringBoot={})),function(e){function t(e){e.when("/spring-boot/health",{template:"<spring-boot-health></spring-boot-health>"}).when("/spring-boot/trace",{template:"<spring-boot-trace></spring-boot-trace>"}).when("/spring-boot/loggers",{template:"<spring-boot-loggers></spring-boot-loggers>"})}function n(e,t,n){n.addItem({title:"Spring Boot",basePath:"/spring-boot",template:"<spring-boot></spring-boot>",isValid:function(){return t.isValid()}})}function i(e,t){e.addUserDoc("spring boot","plugins/spring-boot/doc/help.md",function(){return t.isValid()})}t.$inject=["$routeProvider"],n.$inject=["workspace","springBootService","mainNavService"],i.$inject=["helpRegistry","springBootService"],e.configureRoutes=t,e.configureLayout=n,e.configureHelp=i}(SpringBoot||(SpringBoot={})),function(e){var t=function(){function e(e){this.springBootService=e}return e.$inject=["springBootService"],e.prototype.$onInit=function(){this.tabs=this.springBootService.getTabs()},e}();e.SpringBootController=t,e.springBootComponent={template:'<hawtio-tabs-layout tabs="$ctrl.tabs"></hawtio-tabs-layout>',controller:t}}(SpringBoot||(SpringBoot={})),function(e){e.springBootModule=angular.module("hawtio-integration-spring-boot",[e.healthModule,e.loggersModule,e.traceModule]).config(e.configureRoutes).run(e.configureHelp).run(e.configureLayout).component("springBoot",e.springBootComponent).service("springBootService",e.SpringBootService).name,e.log=Logger.get(e.springBootModule)}(SpringBoot||(SpringBoot={})),function(e){e.integrationModule=angular.module("hawtio-integration",[ActiveMQ._module.name,Camel._module.name,Osgi._module.name,Quartz.quartzModule,SpringBoot.springBootModule]).run(e.configureAboutPage).name,hawtioPluginLoader.addModule(e.integrationModule)}(Integration||(Integration={})),function(C){C.BrowseQueueController=C._module.controller("ActiveMQ.BrowseQueueController",["$scope","workspace","jolokia","localStorage","$location","activeMQMessage","$timeout","$routeParams","$dialog","$templateCache",function(s,l,c,d,i,n,e,t,r,o){var a=d.activemqJmxDomain||"org.apache.activemq";s.queueNames=[],s.queueName=t.queueName,s.searchText="",s.workspace=l,s.allMessages=[],s.messages=[],s.headers={},s.mode="text",s.showButtons=!0,s.deleteDialog=!1,s.moveDialog=!1,s.gridOptions={selectedItems:[],data:"messages",displayFooter:!1,showFilter:!1,showColumnMenu:!0,enableColumnResize:!0,enableColumnReordering:!0,enableHighlighting:!0,filterOptions:{filterText:"",useExternalFilter:!0},selectWithCheckboxOnly:!0,showSelectionCheckbox:!0,maintainColumnRatios:!1,columnDefs:[{field:"JMSMessageID",displayName:"Message ID",cellTemplate:'<div class="ngCellText"><a href="" ng-click="row.entity.openMessageDialog(row)">{{row.entity.JMSMessageID}}</a></div>',width:"34%"},{field:"JMSType",displayName:"Type",width:"10%"},{field:"JMSPriority",displayName:"Priority",width:"7%"},{field:"JMSTimestamp",displayName:"Timestamp",width:"19%"},{field:"JMSExpiration",displayName:"Expires",width:"10%"},{field:"JMSReplyTo",displayName:"Reply To",width:"10%"},{field:"JMSCorrelationID",displayName:"Correlation ID",width:"10%"}],primaryKeyFn:function(e){return e.JMSMessageID}},s.showMessageDetails=!1;var u=["PropertiesText","BodyPreview","Text","openMessageDialog"],p=["BooleanProperties","ByteProperties","ShortProperties","IntProperties","LongProperties","FloatProperties","DoubleProperties","StringProperties"];function h(e){if(0===s.queueNames.length){var t=C.retrieveQueueNames(l,!0),n=l.selection.text;s.queueNames=t.filter(function(e){return e!==n})}var i=e.value;angular.isArray(i)?s.allMessages=i:(s.allMessages=[],angular.forEach(i,function(e,t){s.allMessages.push(e)})),angular.forEach(s.allMessages,function(e){e.openMessageDialog=s.openMessageDialog,e.headerHtml=function(e){var n=function(e){var n={};return angular.forEach(e,function(e,t){_.some(u,function(e){return e===t})||_.some(p,function(e){return e===t})||(n[_.escape(t)]=_.escape(e))}),n}(e),i=function(e){var i={};return angular.forEach(e,function(e,n){!_.some(u,function(e){return e===n})&&_.some(p,function(e){return e===n})&&angular.forEach(e,function(e,t){i['<span class="green">'+n.replace("Properties"," Property")+"</span> - "+_.escape(t)]=_.escape(e)})}),i}(e),t=_.keys(n);function r(e,t){return t<e?1:e<t?-1:0}var o=_.keys(i).sort(r),a=_.filter(t,function(e){return _.startsWith(e,"JMS")}).sort(r),s=_.difference(t,a.concat(o)).sort(r),l=[];function c(e){var t=n[e];null===t&&(t=""),l.push('<tr><td class="propertyName"><span class="green">Header</span> - '+e+'</td><td class="property-value">'+t+"</td></tr>")}return a.forEach(c),s.forEach(c),o.forEach(function(e){var t=i[e];null===t&&(t=""),l.push('<tr><td class="propertyName">'+e+'</td><td class="property-value">'+t+"</td></tr>")}),l.join("\n")}(e),e.bodyText=function(e){{if(e.Text){var t=e.Text,n=""+t.length;return e.textMode="text ("+n+" chars)",t}if(e.BodyPreview){var i=Core.parseIntValue(d.activemqBrowseBytesMessages||"1","browse bytes messages");if(e.textMode="bytes (turned off)",99!=i){var r=[],o=[];e.BodyPreview.forEach(function(e){if(1!==i&&2!==i||o.push(String.fromCharCode(e)),1===i||4===i){var t=e.toString(16);1===t.length&&(t="0"+t),r.push(t)}else{var t=e.toString(10);r.push(t)}});var a=r.join(" "),s=o.join("");if(1===i||2===i){var l=e.BodyPreview.length,n=""+o.length;t="bytes:\n"+a+"\n\ntext:\n"+s,e.textMode="bytes ("+l+" bytes) and text ("+n+" chars)"}else{var l=e.BodyPreview.length;t=a,e.textMode="bytes ("+l+" bytes)"}}return t}return e.textMode="unsupported","Unsupported message body type which cannot be displayed by hawtio"}}(e)}),y(s.gridOptions.filterOptions.filterText),Core.$apply(s)}function g(){var e;if(s.queueName){s.showButtons=!1,s.dlq=!1;var t=C.getBrokerMBean(l,c,a);c.request({type:"exec",mbean:t,operation:"browseQueue(java.lang.String)",arguments:[s.queueName]},Core.onSuccess(h,{error:function(e){s.queueName=null,s.showButtons=!0,g()}})),s.queueName=null}else{if(l.selection)e=l.selection.objectName;else{var n=i.search().nid;e=l.keyToNodeMap[n].objectName}e&&(s.dlq=!1,c.getAttribute(e,"DLQ",Core.onSuccess(m,{silent:!0})),c.request({type:"exec",mbean:e,operation:"browse()"},Core.onSuccess(h)))}}function m(e){s.dlq=e,Core.$apply(s)}function f(){}function b(){s.gridOptions.selectedItems=[],Core.notification("success",s.message),setTimeout(g,50)}function v(){b(),l.loadTree()}function y(e){!function(e){e&&0!==e.length?(C.log.debug("Filtering conditions:",e),s.messages=s.allMessages.filter(function(n){C.log.debug("Message:",n);var i=!0;return $.each(e,function(e,t){i=t.column?i&&n[t.column]&&t.regex.test(n[t.column])||n.StringProperties&&n.StringProperties[t.column]&&t.regex.test(n.StringProperties[t.column]):i&&function(e,t){for(var n=["JMSDestination","JMSDeliveryMode","JMSExpiration","JMSPriority","JMSMessageID","JMSTimestamp","JMSCorrelationID","JMSReplyTo","JMSType","JMSRedelivered"],i=0;i<n.length;i++){var r=n[i];if(e[r]&&t.test(e[r]))return!0}if(e.StringProperties)for(var o in e.StringProperties)if(t.test(e.StringProperties[o]))return!0;if(e.bodyText&&t.test(e.bodyText))return!0;return!1}(n,t.regex)}),i})):s.messages=s.allMessages}(function(e){var t,n=[];if(!(t=$.trim(e)))return;for(var i=t.split(";"),r=0;r<i.length;r++){var o=i[r].split(":");if(1<o.length){var a=$.trim(o[0]),s=$.trim(o[1]);a&&s&&n.push({column:a,columnDisplay:a.replace(/\s+/g,"").toLowerCase(),regex:w(s,"i")})}else{var l=$.trim(o[0]);l&&n.push({column:"",regex:w(l,"i")})}}return n}(e))}function w(t,e){try{return new RegExp(t,e)}catch(e){return new RegExp(t.replace(/(\^|\$|\(|\)|<|>|\[|\]|\{|\}|\\|\||\.|\*|\+|\?)/g,"\\$1"))}}s.$watch("gridOptions.filterOptions.filterText",function(e){y(e)}),s.openMessageDialog=function(e){C.selectCurrentMessage(e,"JMSMessageID",s),s.row&&(s.mode=CodeEditor.detectTextFormat(s.row.Text),s.showMessageDetails=!0)},s.refresh=g,C.decorate(s),s.moveMessages=function(){var e=l.selection,o=e.objectName;if(o&&e&&s.queueName){var a=s.gridOptions.selectedItems;s.message="Moved "+Core.maybePlural(a.length,"message")+" to "+s.queueName;angular.forEach(a,function(e,t){var n=e.JMSMessageID;if(n){var i=t+1<a.length?f:v,r=Core.unescapeHTML(s.queueName);c.execute(o,"moveMessageTo(java.lang.String, java.lang.String)",n,r,Core.onSuccess(i))}})}},s.resendMessage=function(){var e=l.selection;if(e.objectName&&e){var t=s.gridOptions.selectedItems;n.message=t[0],i.path("activemq/sendMessage")}},s.deleteMessages=function(){var e=l.selection,r=e.objectName;if(r&&e){var o=s.gridOptions.selectedItems;if(o&&0!==o.length){s.message="Deleted "+Core.maybePlural(o.length,"message");angular.forEach(o,function(e,t){var n=e.JMSMessageID;if(n){var i=t+1<o.length?f:b;c.execute(r,"removeMessage(java.lang.String)",n,Core.onSuccess(i))}})}}},s.retryMessages=function(){var e=l.selection,r=e.objectName;if(r&&e){var o=s.gridOptions.selectedItems;s.message="Retry "+Core.maybePlural(o.length,"message");angular.forEach(o,function(e,t){var n=e.JMSMessageID;if(n){var i=t+1<o.length?f:b;c.execute(r,"retryMessage(java.lang.String)",n,Core.onSuccess(i))}})}},s.refresh()}])}(ActiveMQ||(ActiveMQ={})),function(d){d._module.controller("ActiveMQ.QueuesController",["$scope","workspace","jolokia","localStorage",function(r,o,a,e){var s=e.activemqJmxDomain||"org.apache.activemq";r.workspace=o,r.destinationType;var n=[];r.destinations=[],r.totalServerItems=0;var t={name:"Refresh",actionFn:function(e){return r.loadTable()}};function l(){Core.notification("danger","The feature is not available in this broker version!"),r.workspace.selectParentNode()}function c(e){var t=JSON.parse(e.value);r.destinations=[],angular.forEach(t.data,function(e,t){r.destinations.push(e)}),r.totalServerItems=t.count,n=r.destinations,r.destinations=Pf.filter(n,r.toolbarConfig.filterConfig),Core.$apply(r)}r.toolbarConfig={filterConfig:{fields:[{id:"name",title:"Name",placeholder:"Filter by name...",filterType:"text"}],onFilterChange:function(e){r.destinations=Pf.filter(n,r.toolbarConfig.filterConfig)}},actionsConfig:{primaryActions:[t]},isTableView:!0},r.tableConfig={selectionMatchProp:"name",showCheckboxes:!1},r.pageConfig={pageSize:20,pageNumber:1},"topics"==r.destinationType?r.tableColumns=[{header:"Name",itemField:"name"},{header:"Producer Count",itemField:"producerCount"},{header:"Consumer Count",itemField:"consumerCount"},{header:"Enqueue Count",itemField:"enqueueCount"},{header:"Dequeue Count",itemField:"dequeueCount"}]:r.tableColumns=[{header:"Name",itemField:"name",templateFn:function(e){return'<a href="activemq/browseQueue?main-tab=activemq&queueName='+e+'">'+e+"</a>"}},{header:"Queue Size",itemField:"queueSize"},{header:"Producer Count",itemField:"producerCount"},{header:"Consumer Count",itemField:"consumerCount"},{header:"Enqueue Count",itemField:"enqueueCount"},{header:"Dequeue Count",itemField:"dequeueCount"},{header:"Dispatch Count",itemField:"dispatchCount"}],r.refresh=function(){r.loadTable()},r.loadTable=function(){var e=d.getBrokerMBean(o,a,s);if(e){var t="queryQueues(java.lang.String, int, int)";"topics"==r.destinationType&&(t="queryTopics(java.lang.String, int, int)");var n={name:"",filter:""},i=r.toolbarConfig.filterConfig.appliedFilters;i&&0<i.length&&(n.filter=r.toolbarConfig.filterConfig.appliedFilters[0].value),a.request({type:"exec",mbean:e,operation:t,arguments:[JSON.stringify(n),r.pageConfig.pageNumber,r.pageConfig.pageSize]},Core.onSuccess(c,{error:l}))}},r.loadTable()}])}(ActiveMQ||(ActiveMQ={})),function(u){u._module.controller("ActiveMQ.DurableSubscriberController",["$scope","$uibModal","workspace","jolokia",function(o,n,a,s){var l=localStorage.activemqJmxDomain||"org.apache.activemq",r=null;o.durableSubscribers=null,o.selectedSubscriber,o.createSubscriberDialog,o.deleteSubscriberDialog=new UI.Dialog,o.showSubscriberDialog,o.topicName="",o.clientId="",o.subscriberName="",o.subSelector="",o.model={allSelected:!1},o.uiModalInstance;var e={name:"Refresh",actionFn:function(e){return c()}},t={name:"Create",actionFn:function(e){o.createSubscriberDialog=n.open({templateUrl:"createSubscriberDialog.html",scope:o})}},i={name:"Delete",actionFn:function(e){return o.deleteSubscriberDialog.open()},isDisabled:!0};function c(){var e=u.getBrokerMBean(a,s,l);e&&(r=[],s.request({type:"read",mbean:e,attribute:["DurableTopicSubscribers"]},Core.onSuccess(function(e){return d(e,"DurableTopicSubscribers","Active")})),s.request({type:"read",mbean:e,attribute:["InactiveDurableTopicSubscribers"]},Core.onSuccess(function(e){return d(e,"InactiveDurableTopicSubscribers","Offline")})))}function d(e,t,i){var n=e.value;u.log.debug("Got data: ",n),r.push.apply(r,n[t].map(function(e){var t=e.objectName,n=Core.objectNameProperties(t);return"objectName"in e||("canonicalName"in e&&(t=e.canonicalName),n=_.cloneDeep(e.keyPropertyList)),n._id=t,n.status=i,n})),o.durableSubscribers=Pf.filter(r,o.toolbarConfig.filterConfig),o.model.allSelected=!1,Core.$apply(o)}o.toolbarConfig={filterConfig:{fields:[{id:"destinationName",title:"Topic",placeholder:"Filter by topic...",filterType:"text"},{id:"clientId",title:"Client ID",placeholder:"Filter by client id...",filterType:"text"},{id:"consumerId",title:"Consumer ID",placeholder:"Filter by consumer id...",filterType:"text"},{id:"status",title:"Status",placeholder:"Filter by status...",filterType:"select",filterValues:["Active","Offline"]}],onFilterChange:function(e){o.durableSubscribers=Pf.filter(r,o.toolbarConfig.filterConfig)}},actionsConfig:{primaryActions:[e,t,i]},isTableView:!0},o.selectAll=function(){o.durableSubscribers.forEach(function(e){return e.selected=o.model.allSelected}),i.isDisabled=!o.model.allSelected},o.toggleDeleteActionDisabled=function(){i.isDisabled=!o.durableSubscribers.some(function(e){return e.selected})},o.doCreateSubscriber=function(e,t,n,i){o.createSubscriberDialog.close(),o.clientId=e,o.subscriberName=t,o.topicName=n,o.subSelector=i,Core.isBlank(o.subSelector)&&(o.subSelector=null);var r=u.getBrokerMBean(a,s,l);r?s.execute(r,"createDurableSubscriber(java.lang.String, java.lang.String, java.lang.String, java.lang.String)",o.clientId,o.subscriberName,o.topicName,o.subSelector,Core.onSuccess(function(){Core.notification("success","Created durable subscriber "+e),o.clientId="",o.subscriberName="",o.topicName="",o.subSelector="",c()})):Core.notification("danger","Could not find the Broker MBean!")},o.deleteSubscribers=function(){var e=o.durableSubscribers.filter(function(e){return e.selected}).map(function(e){return{type:"exec",operation:"destroy()",mbean:e._id}});s.request(e,Core.onSuccess(function(){Core.notification("success","Operation successful"),c()}))},o.openSubscriberDialog=function(t){s.request({type:"read",mbean:t._id},Core.onSuccess(function(e){o.selectedSubscriber=e.value,o.selectedSubscriber.Status=t.status,o.showSubscriberDialog=n.open({templateUrl:"showSubscriberDialog.html",scope:o})}))},o.topicNames=function(e){return u.retrieveTopicNames(a,!1)},c()}])}(ActiveMQ||(ActiveMQ={})),(ActiveMQ||(ActiveMQ={}))._module.controller("ActiveMQ.JobSchedulerController",["$scope","workspace","jolokia",function(n,i,a){function e(){var e=i.selection;if(e){var t=e.objectName;t&&a.request({type:"read",mbean:t,attribute:"AllJobs"},Core.onSuccess(r))}Core.$apply(n)}function r(e){var t=e.value;angular.isArray(t)?n.jobs=t:(n.jobs=[],angular.forEach(t,function(e,t){n.jobs.push(e)})),Core.$apply(n)}function s(){}function l(){n.gridOptions.selectedItems.splice(0),Core.notification("success",n.message),setTimeout(e,50)}n.refresh=e,n.jobs=[],n.deleteJobsDialog=new UI.Dialog,n.gridOptions={selectedItems:[],data:"jobs",displayFooter:!1,showFilter:!1,showColumnMenu:!0,enableColumnResize:!0,enableColumnReordering:!0,filterOptions:{filterText:""},selectWithCheckboxOnly:!0,showSelectionCheckbox:!0,maintainColumnRatios:!1,columnDefs:[{field:"jobId",displayName:"Job ID",width:"25%"},{field:"cronEntry",displayName:"Cron Entry",width:"10%"},{field:"delay",displayName:"Delay",width:"5%"},{field:"repeat",displayName:"repeat",width:"5%"},{field:"period",displayName:"period",width:"5%"},{field:"start",displayName:"Start",width:"25%"},{field:"next",displayName:"Next",width:"25%"}],primaryKeyFn:function(e){return e.jobId}},n.deleteJobs=function(){var e=i.selection,r=e.objectName;if(r&&e){var o=n.gridOptions.selectedItems;n.message="Deleted "+Core.maybePlural(o.length,"job"),angular.forEach(o,function(e,t){var n=e.jobId;if(n){var i=t+1<o.length?s:l;a.execute(r,"removeJob(java.lang.String)",n,Core.onSuccess(i))}})}}}]),(ActiveMQ||(ActiveMQ={}))._module.controller("ActiveMQ.PreferencesController",["$scope","localStorage","userDetails","$rootScope",function(e,t,n,i){e.messageBodyDisplayOptions={"Hex and text":1,"Decimal and text":2,Hex:4,Decimal:8,Off:99},Core.initPreferenceScope(e,t,{activemqUserName:{value:n.username?n.username:""},activemqPassword:{value:n.password?n.password:""},activemqBrowseBytesMessages:{value:1,converter:parseInt},activemqFilterAdvisoryTopics:{value:!1,converter:Core.parseBooleanValue,post:function(e){i.$broadcast("jmxTreeUpdated")}}})}]),function(h){h.BrowseEndpointController=h._module.controller("Camel.BrowseEndpointController",["$scope","$routeParams","workspace","jolokia","$uibModal",function(l,e,i,c,n){var t={name:"Forward",actionFn:function(e){n.open({templateUrl:"camelBrowseEndpointForwardMessage.html",scope:l})},isDisabled:!0},r={name:"Refresh",actionFn:function(e){return o()}},a=null;function d(){}function u(){Core.notification("success",l.message),setTimeout(o,50)}function p(e){Core.notification("danger","Error forwarding messages to endpoint"),h.log.error(e.error)}function o(){var e=null;if(l.contextId&&l.endpointPath){var t=i.findMBeanWithProperties(h.jmxDomain,{context:l.contextId,type:"endpoints",name:l.endpointPath});t&&(e=t.objectName)}e||(e=i.getSelectedMBeanName()),e&&(h.log.debug("MBean:",e),c.execute(e,"browseAllMessagesAsXml(java.lang.Boolean)",!0,Core.onSuccess(s)))}function s(e){var t=[];if(angular.isString(e)){var n=$.parseXML(e),i=$(n).find("message"),r=i.length;t.length=r;for(var o=0;o<r;o++)t[r-1-o]=h.createMessageFromXml(i[o])}a=t,l.messages=Pf.filter(a,l.toolbarConfig.filterConfig),l.model.allSelected=!1,Core.$apply(l)}l.messages=null,l.camelContextMBean=h.getSelectionCamelContextMBean(i),l.mode="text",l.endpointUri=null,l.contextId=e.contextId,l.endpointPath=e.endpointPath,l.isJmxTab=!e.contextId||!e.endpointPath,l.model={allSelected:!1},l.toolbarConfig={filterConfig:{fields:[{id:"id",title:"Message ID",placeholder:"Filter by message ID...",filterType:"text"}],onFilterChange:function(e){l.messages=Pf.filter(a,l.toolbarConfig.filterConfig)}},actionsConfig:{primaryActions:[t,r]},isTableView:!0},l.refreshForwardActionDisabledProperty=function(){t.isDisabled=!l.messages.some(function(e){return e.selected})},l.tableConfig={selectionMatchProp:"id",showCheckboxes:!0},l.tableDtOptions={order:[[1,"desc"]]},l.tableColumns=[{itemField:"id",header:"Message ID"}],l.selectAll=function(){l.messages.forEach(function(e){return e.selected=l.model.allSelected}),t.isDisabled=!l.model.allSelected},l.selectRowIndex=function(e){l.rowIndex=e,l.row=l.messages[e]},l.openMessageDialog=function(e,t){l.row=e,l.rowIndex=t,l.mode=CodeEditor.detectTextFormat(e.body),n.open({templateUrl:"camelBrowseEndpointMessageDetails.html",scope:l,size:"lg"})},l.forwardMessages=function(o){var a=h.getSelectionCamelContextMBean(i),s=l.messages.filter(function(e){return e.selected});a&&o&&s&&s.length&&(c.execute(a,"createEndpoint(java.lang.String)",o,Core.onSuccess(d)),l.message="Forwarded "+Core.maybePlural(s.length,"message to "+o),angular.forEach(s,function(e,t){var n=t+1<s.length?d:u,i=e.body,r=e.headers;c.execute(a,"sendBodyAndHeaders(java.lang.String, java.lang.Object, java.util.Map)",o,i,r,Core.onSuccess(n,{error:p}))})),l.endpointUri=null},l.forwardMessage=function(e,t){var n=h.getSelectionCamelContextMBean(i);n&&e&&t&&c.execute(n,"createEndpoint(java.lang.String)",t,Core.onSuccess(function(){c.execute(n,"sendBodyAndHeaders(java.lang.String, java.lang.Object, java.util.Map)",t,e.body,e.headers,Core.onSuccess(function(){Core.notification("success","Forwarded message to "+t),setTimeout(o,50)}))}))},l.endpointUris=function(){var e=h.getSelectionCamelContextEndpoints(i);return e?e.children.map(function(e){return e.text}):[]},o()}])}(Camel||(Camel={})),(Camel||(Camel={})).camelHeaderSchema={definitions:{headers:{properties:{CamelAuthentication:{type:"java.lang.String"},CamelAuthenticationFailurePolicyId:{type:"java.lang.String"},CamelAcceptContentType:{type:"java.lang.String"},CamelAggregatedSize:{type:"java.lang.String"},CamelAggregatedTimeout:{type:"java.lang.String"},CamelAggregatedCompletedBy:{type:"java.lang.String"},CamelAggregatedCorrelationKey:{type:"java.lang.String"},CamelAggregationStrategy:{type:"java.lang.String"},CamelAggregationCompleteAllGroups:{type:"java.lang.String"},CamelAggregationCompleteAllGroupsInclusive:{type:"java.lang.String"},CamelAsyncWait:{type:"java.lang.String"},CamelBatchIndex:{type:"java.lang.String"},CamelBatchSize:{type:"java.lang.String"},CamelBatchComplete:{type:"java.lang.String"},CamelBeanMethodName:{type:"java.lang.String"},CamelBeanMultiParameterArray:{type:"java.lang.String"},CamelBinding:{type:"java.lang.String"},breadcrumbId:{type:"java.lang.String"},CamelCharsetName:{type:"java.lang.String"},CamelCreatedTimestamp:{type:"java.lang.String"},"Content-Encoding":{type:"java.lang.String"},"Content-Length":{type:"java.lang.String"},"Content-Type":{type:"java.lang.String"},CamelCorrelationId:{type:"java.lang.String"},CamelDataSetIndex:{type:"java.lang.String"},"org.apache.camel.default.charset":{type:"java.lang.String"},CamelDestinationOverrideUrl:{type:"java.lang.String"},CamelDisableHttpStreamCache:{type:"java.lang.String"},CamelDuplicateMessage:{type:"java.lang.String"},CamelExceptionCaught:{type:"java.lang.String"},CamelExceptionHandled:{type:"java.lang.String"},CamelEvaluateExpressionResult:{type:"java.lang.String"},CamelErrorHandlerHandled:{type:"java.lang.String"},CamelExternalRedelivered:{type:"java.lang.String"},CamelFailureHandled:{type:"java.lang.String"},CamelFailureEndpoint:{type:"java.lang.String"},CamelFailureRouteId:{type:"java.lang.String"},CamelFilterNonXmlChars:{type:"java.lang.String"},CamelFileLocalWorkPath:{type:"java.lang.String"},CamelFileName:{type:"java.lang.String"},CamelFileNameOnly:{type:"java.lang.String"},CamelFileNameProduced:{type:"java.lang.String"},CamelFileNameConsumed:{type:"java.lang.String"},CamelFilePath:{type:"java.lang.String"},CamelFileParent:{type:"java.lang.String"},CamelFileLastModified:{type:"java.lang.String"},CamelFileLength:{type:"java.lang.String"},CamelFilterMatched:{type:"java.lang.String"},CamelFileLockFileAcquired:{type:"java.lang.String"},CamelFileLockFileName:{type:"java.lang.String"},CamelGroupedExchange:{type:"java.lang.String"},CamelHttpBaseUri:{type:"java.lang.String"},CamelHttpCharacterEncoding:{type:"java.lang.String"},CamelHttpMethod:{type:"java.lang.String"},CamelHttpPath:{type:"java.lang.String"},CamelHttpProtocolVersion:{type:"java.lang.String"},CamelHttpQuery:{type:"java.lang.String"},CamelHttpResponseCode:{type:"java.lang.String"},CamelHttpUri:{type:"java.lang.String"},CamelHttpUrl:{type:"java.lang.String"},CamelHttpChunked:{type:"java.lang.String"},CamelHttpServletRequest:{type:"java.lang.String"},CamelHttpServletResponse:{type:"java.lang.String"},CamelInterceptedEndpoint:{type:"java.lang.String"},CamelInterceptSendToEndpointWhenMatched:{type:"java.lang.String"},CamelLanguageScript:{type:"java.lang.String"},CamelLogDebugBodyMaxChars:{type:"java.lang.String"},CamelLogDebugStreams:{type:"java.lang.String"},CamelLoopIndex:{type:"java.lang.String"},CamelLoopSize:{type:"java.lang.String"},CamelMaximumCachePoolSize:{type:"java.lang.String"},CamelMaximumEndpointCacheSize:{type:"java.lang.String"},CamelMessageHistory:{type:"java.lang.String"},CamelMulticastIndex:{type:"java.lang.String"},CamelMulticastComplete:{type:"java.lang.String"},CamelNotifyEvent:{type:"java.lang.String"},CamelOnCompletion:{type:"java.lang.String"},CamelOverruleFileName:{type:"java.lang.String"},CamelParentUnitOfWork:{type:"java.lang.String"},CamelRecipientListEndpoint:{type:"java.lang.String"},CamelReceivedTimestamp:{type:"java.lang.String"},CamelRedelivered:{type:"java.lang.String"},CamelRedeliveryCounter:{type:"java.lang.String"},CamelRedeliveryMaxCounter:{type:"java.lang.String"},CamelRedeliveryExhausted:{type:"java.lang.String"},CamelRedeliveryDelay:{type:"java.lang.String"},CamelRollbackOnly:{type:"java.lang.String"},CamelRollbackOnlyLast:{type:"java.lang.String"},CamelRouteStop:{type:"java.lang.String"},CamelSoapAction:{type:"java.lang.String"},CamelSkipGzipEncoding:{type:"java.lang.String"},CamelSlipEndpoint:{type:"java.lang.String"},CamelSplitIndex:{type:"java.lang.String"},CamelSplitComplete:{type:"java.lang.String"},CamelSplitSize:{type:"java.lang.String"},CamelTimerCounter:{type:"java.lang.String"},CamelTimerFiredTime:{type:"java.lang.String"},CamelTimerName:{type:"java.lang.String"},CamelTimerPeriod:{type:"java.lang.String"},CamelTimerTime:{type:"java.lang.String"},CamelToEndpoint:{type:"java.lang.String"},CamelTraceEvent:{type:"java.lang.String"},CamelTraceEventNodeId:{type:"java.lang.String"},CamelTraceEventTimestamp:{type:"java.lang.String"},CamelTraceEventExchange:{type:"java.lang.String"},"Transfer-Encoding":{type:"java.lang.String"},CamelUnitOfWorkExhausted:{type:"java.lang.String"},CamelUnitOfWorkProcessSync:{type:"java.lang.String"},CamelXsltFileName:{type:"java.lang.String"}}}}},function(o){o._module.controller("Camel.EndpointController",["$scope","$location","localStorage","workspace","jolokia","jolokiaService",function(i,e,t,s,n,r){function l(){if(s.selection){var e=Core.pathGet(s,["selection","parent"]);e&&i.workspace.updateSelectionNode(e)}i.workspace.operationCounter+=1,Core.$apply(i),Core.notification("success","Endpoint deleted")}o.initEndpointChooserScope(i,e,t,s,n),i.loadEndpointNames(),i.workspace=s,i.cancel=function(){return e.path("/camel/endpoints")},i.createEndpoint=function(e){if(s.jolokia){var t=o.getSelectionCamelContextMBean(s);if(t){r.execute(t,"createEndpoint(java.lang.String)",e).then(function(e){e?(i.endpointName="",i.workspace.operationCounter+=1,Core.$apply(i),Core.notification("success","Creating endpoint",3e3)):Core.notification("danger","Invalid URI")}).catch(function(e){e=e.replace("org.apache.camel.ResolveEndpointFailedException : ",""),Core.notification("danger",e)})}else Core.notification("danger","Could not find the CamelContext MBean!")}},i.createEndpointFromData=function(){if(i.selectedComponentName&&i.endpointPath){var e=i.selectedComponentName+"://"+i.endpointPath;o.log.debug("Have endpoint data "+JSON.stringify(i.endpointParameters));var n="";angular.forEach(i.endpointParameters,function(e,t){n+=(n?"&":"")+t+"="+e}),n&&(e+="?"+n),i.createEndpoint(e)}},i.deleteEndpoint=function(){var e=s.jolokia,t=s.selection,n=t.entries;if(t&&e&&n){var i=t.domain,r=n.BrokerName,o=n.Destination;if(i&&r){var a=i+":BrokerName="+r+",Type=Broker";e.execute(a,"removeEndpoint(java.lang.String)",o,Core.onSuccess(l))}}}}])}(Camel||(Camel={})),(Camel||(Camel={})).jmsHeaderSchema={definitions:{headers:{properties:{JMSCorrelationID:{type:"java.lang.String"},JMSDeliveryMode:{type:"string",enum:["PERSISTENT","NON_PERSISTENT"]},JMSDestination:{type:"javax.jms.Destination"},JMSExpiration:{type:"long"},JMSPriority:{type:"int"},JMSReplyTo:{type:"javax.jms.Destination"},JMSType:{type:"java.lang.String"},JMSXGroupId:{type:"java.lang.String"},AMQ_SCHEDULED_CRON:{type:"java.lang.String"},AMQ_SCHEDULED_DELAY:{type:"java.lang.String"},AMQ_SCHEDULED_PERIOD:{type:"java.lang.String"},AMQ_SCHEDULED_REPEAT:{type:"java.lang.String"}}},"javax.jms.Destination":{type:"java.lang.String"}}},function(n){n._module.controller("Camel.PreferencesController",["$scope","localStorage",function(t,e){Core.initPreferenceScope(t,e,{camelIgnoreIdForLabel:{value:!1,converter:Core.parseBooleanValue,post:function(e){t.$emit("ignoreIdForLabel",e)}},camelShowInflightCounter:{value:!0,converter:Core.parseBooleanValue},camelMaximumLabelWidth:{value:n.defaultMaximumLabelWidth,converter:parseInt},camelMaximumTraceOrDebugBodyLength:{value:n.defaultCamelMaximumTraceOrDebugBodyLength,converter:parseInt},camelTraceOrDebugIncludeStreams:{value:n.defaultCamelTraceOrDebugIncludeStreams,converter:Core.parseBooleanValue},camelRouteMetricMaxSeconds:{value:n.defaultCamelRouteMetricMaxSeconds,converter:parseInt},camelHideOptionDocumentation:{value:n.defaultHideOptionDocumentation,converter:Core.parseBooleanValue,post:function(e){t.$emit("hideOptionDocumentation",e)}},camelHideOptionDefaultValue:{value:n.defaultHideOptionDefaultValue,converter:Core.parseBooleanValue,post:function(e){t.$emit("hideOptionDefaultValue",e)}},camelHideOptionUnusedValue:{value:n.defaultHideOptionUnusedValue,converter:Core.parseBooleanValue,post:function(e){t.$emit("hideOptionUnusedValue",e)}}}),setTimeout(function(){$("[data-toggle=tooltip]").tooltip()},1e3)}])}(Camel||(Camel={})),function(k){function S(e){return e.counter||""}function x(e){return e.inflight||""}k._module.controller("Camel.RouteController",["$scope","$routeParams","$element","$timeout","workspace","$location","jolokia","localStorage",function(u,e,p,t,l,h,g,n){u.routes=[],u.routeNodes={},null!=e&&(u.contextId=e.contextId,u.routeId=Core.trimQuotes(e.routeId),u.isJmxTab=!e.contextId||!e.routeId),u.camelIgnoreIdForLabel=k.ignoreIdForLabel(n),u.camelMaximumLabelWidth=k.maximumLabelWidth(n),u.camelShowInflightCounter=k.showInflightCounter(n);var i=_.debounce(function(){var e=null;if(!u.ignoreRouteXmlNode&&((e=k.getSelectedRouteNode(l))||(e=u.nodeXmlNode),e&&"route"!==e.localName)){var t=document.createElement("route");t.appendChild(e.cloneNode(!0)),e=t}u.mbean=k.getSelectionCamelContextMBean(l),!u.mbean&&u.contextId&&(u.mbean=k.getCamelContextMBean(l,u.contextId));if(e){u.nodes={};var n=[],i=[];k.addRouteXmlChildren(u,e,n,i,null,0,0),a(n,i)}else u.mbean?g.request({type:"exec",mbean:u.mbean,operation:"dumpRoutesAsXml()"},Core.onSuccess(r)):k.log.info("No camel context bean! Selection:",l.selection)},300,{trailing:!0});u.$on("jmxTreeUpdated",function(){i()}),u.$watch("nodeXmlNode",function(){u.isJmxTab&&l.moveIfViewInvalid()||i()});var r=function(e){var t=e.value;u.routes=t,u.nodes={},u.routeNodes={};var n=[],i=[],r=u.routeId;if(r||(r=k.getSelectedRouteId(l)),t){var o=$.parseXML(t);k.loadRouteXmlNodes(u,o,r,n,i,p.width()),a(n,i)}else k.log.info("No data from route XML!");Core.$apply(u)},m=" selected";function f(e,t){var n=!1;if(e){var i=e.getAttribute("class");if(i&&_.endsWith(i,m))i=i.substring(0,i.length-m.length);else{if(!t)return n;i+=m,n=!0}e.setAttribute("class",i)}return n}function b(e){k.log.debug("Clicked on Camel Route Diagram node:",e.cid),l.isRoutesFolder()?function(t){var e=t.cid,n=u.routes;if(n){var i=null,r=$.parseXML(n);if((i=$(r).find("#"+e).parents("route")||$(r).find("[uri='"+e+"']").parents("route"))&&i.length||!t.rid||(i=$(r).find("[id='"+t.rid+"']")),i&&i.length){var o=null;if(angular.forEach(l.selection.children,function(e){e.text===i[0].id&&(o=e)}),o)if(o.children&&o.children.length)c(t,o);else{var a=Jmx.findLazyLoadingFunction(l,o);if(a){var s=$("#cameltree").treeview(!0);a(l,o,function(e){s.addNode(e,o,{silent:!0}),c(t,o)})}o.lazyLoad=!1}}else k.log.debug("No route found for",e)}}(e):c(e,l.selection)}function c(n,e){var t=n.cid,i=e.findDescendant(function(e){var t=n.uri;return t&&0<t.indexOf("?")&&(t=t.substring(0,t.indexOf("?"))),e.text===n.cid||e.routeXmlNode&&e.routeXmlNode.nodeName===n.type&&e.text===t});i&&(t=i.key),function(e){h.path("/camel/propertiesRoute").search({"main-tab":"camel",nid:e}),Core.$apply(u)}(t)}function a(e,t){var n=p,i=n.children("svg")[0],r=h.path(),o=function(e,t,n,i,r){var o=this;void 0===i&&(i=!1);void 0===r&&(r=null);var a=[],s=function(e,t,r){var o={};e.forEach(function(e){var t=e.id;void 0===t?k.log.debug("No node found for node "+JSON.stringify(e)):(void 0===e.edges&&(e.edges=[]),e.label||(e.label="node "+t),o[t]=e)});var n=d3.values(o);return t.forEach(function(e){var t=o[e.source],n=o[e.target];if(void 0===t||void 0===n)k.log.debug("Bad link!  "+t+" target "+n+" for "+e);else{var i={source:t,target:n};r.push(i),t.edges.push(i),n.edges.push(i)}}),n}(e,t,a);function l(e,t,n){e.points.forEach(function(e){e.x=Math.max(0,Math.min(y.width,e.x+t)),e.y=Math.max(0,Math.min(y.height,e.y+n))})}var c=n?d3.select(n):d3.select("svg.camel-diagram");n&&$(n).children("g").remove();$(c).children("g").remove();var d=c.append("g");(e=d.selectAll("g .node").data(s).enter().append("g").attr("class","node").attr("data-cid",function(e){return e.cid}).attr("id",function(e){return"node-"+e.label})).append("title").text(function(e){return e.tooltip||""}),null!=r&&e.on("click",r);var u=d.selectAll("path .edge").data(a).enter().append("path").attr("class","edge").attr("marker-end","url(#arrowhead)"),p=e.append("rect").attr("rx","4").attr("ry","4").attr("class",function(e){return e.type}),h=e.append("image").attr("xlink:href",function(e){return e.imageUrl}).attr("x",-12).attr("y",-20).attr("height",24).attr("width",24),g=e.append("text").attr("text-anchor","end").attr("class","counter").attr("x",0).attr("dy",0).text(S),m=(e.append("text").attr("text-anchor","middle").attr("class","inflight").attr("x",10).attr("dy",-32).text(x),e.append("text").attr("text-anchor","middle").attr("x",0));m.append("tspan").attr("x",0).attr("dy",28).text(function(e){return e.label});m.each(function(e){var t=_.pick(this.getBBox(),"width","height");(e.bbox=t).width<80&&(t.width=80),e.width=t.width+20,e.height=t.height+20+12}),p.attr("x",function(e){return-(e.bbox.width/2+10)}).attr("y",function(e){return-(e.bbox.height/2+10+6)}).attr("width",function(e){return e.width}).attr("height",function(e){return e.height}),h.attr("x",function(e){return-e.bbox.width/3}),m.attr("x",function(e){return-e.bbox.width/2}).attr("y",function(e){return-e.bbox.height/2}),g.attr("x",function(e){return e.bbox.width/2});var f=new dagre.graphlib.Graph({multigraph:!1,compound:!1}).setGraph({ranker:"longest-path"});s.forEach(function(e){return f.setNode(e.id,e)}),a.forEach(function(e){return f.setEdge(e.source.id,e.target.id,e)}),dagre.layout(f),e.attr("transform",function(e){return"translate("+e.x+","+e.y+")"});var b=d3.svg.line().x(function(e){return e.x}).y(function(e){return e.y}).interpolate("linear");u.attr("id",function(e){return e.id}).attr("d",function(e){return b(e.points)});var v=c.node();if(v)var y=v.getBBox();if(i){var w=d3.behavior.drag().origin(function(e){return e.pos?{x:e.pos.x,y:e.pos.y}:{x:e.x,y:e.y}}).on("drag",function(e,t){var n=e.x,i=e.y;e.x=Math.max(e.width/2,Math.min(y.width-e.width/2,d3.event.x)),e.y=Math.max(e.height/2,Math.min(y.height-e.height/2,d3.event.y)),d3.select(this).attr("transform","translate("+e.x+","+e.y+")");var r=e.x-n,o=e.y-i;e.edges.forEach(function(e){l(e,r,o),d3.select("#"+e.id).attr("d",b(e))})}),C=d3.behavior.drag().on("drag",function(e,t){l(e,d3.event.dx,d3.event.dy),d3.select(o).attr("d",b(e))});e.call(w),u.call(C)}return{nodes:s,graph:f}}(e,t,i,!1,_.startsWith(r,"/camel/debugRoute")||_.startsWith(r,"/camel/traceRoute")?null:b).graph,a=d3.select(i),s=d3.behavior.zoom().on("zoom",function(){return a.select("g").attr("transform","translate("+d3.event.translate+") scale("+d3.event.scale+")")});function l(){var e=o.graph();e.width>n.width()||e.height>n.height()?(a.attr("viewBox","0 0 "+e.width+" "+e.height),s.scaleExtent([1,1/Math.min(n.width()/e.width,n.height()/e.height)])):(a.attr("viewBox",(e.width-n.width())/2+" "+(e.height-n.height())/2+" "+n.width()+" "+n.height()),s.scale(1),s.scaleExtent([1,1]),a.call(s.event))}a.call(s);var c=_.debounce(l,10,{leading:!0,trailing:!0});if(window.addEventListener("resize",c),u.$on("$destroy",function(){return window.removeEventListener("resize",c)}),l(),_.startsWith(r,"/camel/debugRoute")||_.startsWith(r,"/camel/traceRoute")){var d=n.find("g.node");d.click(function(){var e=function(e){if(e){var t=e.getAttribute("class");return t&&_.endsWith(t,m)}return!1}(this);d.each(function(e,t){f(t,!1)});var t=null;e||(t=this.getAttribute("data-cid"),f(this,!0)),u.$emit("camel.diagram.selectedNodeId",t),Core.$apply(u)})}u.mbean&&Core.register(g,u,{type:"exec",mbean:u.mbean,operation:"dumpRoutesStatsAsXml",arguments:[!0,!0]},Core.onSuccess(v,{silent:!0,error:function(){}})),u.$emit("camel.diagram.layoutComplete")}function v(e){var t=e.value;if(t){var n=$.parseXML(t);$(n).find("routeStat").each(function(e,t){i(!0,t)}),$(n).find("processorStat").each(function(e,t){i(!1,t)}),function(){var e=d3.select("svg.camel-diagram");e.selectAll("text.counter").text(S),e.selectAll("text.inflight").text(x),e.selectAll("g .node title").text(function(e){return e.tooltip||""})}()}function i(e,t){var n=t.getAttribute("id"),i=t.getAttribute("exchangesCompleted"),r=t.hasAttribute("exchangesInflight")?t.getAttribute("exchangesInflight"):0,o="";if(n&&i){var a=e?u.routeNodes:u.nodes,s=a[n];if(s||angular.forEach(a,function(e,t){s||n!==e.elementId||(s=e)}),s){var l=_.toInteger(i)+_.toInteger(r),c=t.getAttribute("exchangesFailed");c&&(l+=_.toInteger(c)),o="total: "+l+"\ninflight:"+r+"\nlast: "+t.getAttribute("lastProcessingTime")+" (ms)\nmean: "+t.getAttribute("meanProcessingTime")+" (ms)\nmin: "+t.getAttribute("minProcessingTime")+" (ms)\nmax: "+t.getAttribute("maxProcessingTime")+" (ms)",s.counter=l,u.camelShowInflightCounter&&(s.inflight=r);var d=s.labelSummary;d&&(o=d+"\n\n"+o),s.tooltip=o}}}}}])}(Camel||(Camel={})),function(b){b._module.controller("Camel.RouteMetricsController",["$scope","$location","workspace","jolokia","metricsWatcher",function(m,e,i,r,f){function o(e){var t=e.value;if(t){var n=JSON.parse(t);if(!m.initDone){var i=n.timers,r=0;if(null!=i){for(var o in i){var a=o,s=a.indexOf("."),l=a.lastIndexOf("."),c=a.substring(s+1,l),d=a.substr(0,l),u=a.substr(l+1),p=a.indexOf(":"),h=a.substr(p+1);0<(l=h.lastIndexOf("."))&&(h=h.substr(0,l));i[o];var g="timer-"+r;m.metricDivs.push({id:g,routeId:h}),r++,b.log.info("Added timer:",g,"("+d+"."+u+") for route:",h,"with max seconds:",m.maxSeconds),f.addTimer(g,d,u,m.maxSeconds,c,"Histogram",1e3*m.maxSeconds)}b.log.info("Pre-init graphs"),Core.$apply(m)}b.log.info("Init graphs"),f.initGraphs()}m.initDone=!0,b.log.debug("Updating graphs:",n),f.updateGraphs(n)}m.initDone=!0,Core.$apply(m)}function t(){b.log.info("Loading RouteMetrics data...");var e=b.getSelectedRouteId(i);null!=e&&(m.filterText=e);var t=b.getSelectionCamelRouteMetrics(i);if(t){var n={type:"exec",mbean:t,operation:"dumpStatisticsAsJson"};Core.scopeStoreJolokiaHandle(m,r,r.register(o,n))}else m.initDone=!0,Core.$apply(m)}m.maxSeconds=b.routeMetricMaxSeconds(localStorage),m.filterText=null,m.initDone=!1,m.metricDivs=[],m.metricVisible=function(e){return b.log.debug("Filter by route",e),Core.matchFilterIgnoreCase(e.routeId,m.filterText)},m.onResponse=function(e){t()},m.$watch("workspace.tree",function(){setTimeout(t,50)})}])}(Camel||(Camel={})),function(f){f._module.controller("Camel.SendMessageController",["$route","$scope","$element","$timeout","workspace","jolokia","localStorage","$location","activeMQMessage",function(e,p,t,n,h,g,m,i,r){if(p.noCredentials=!1,p.container={},p.message="",p.headers=[],Core.bindModelToSearchParam(p,i,"tab","subtab","compose"),Core.bindModelToSearchParam(p,i,"searchText","q",""),Core.reloadWhenParametersChange(e,p,i),p.checkCredentials=function(){p.noCredentials=Core.isBlank(m.activemqUserName)||Core.isBlank(m.activemqPassword)},-1<i.path().indexOf("activemq")){if(p.localStorage=m,p.$watch("localStorage.activemqUserName",p.checkCredentials),p.$watch("localStorage.activemqPassword",p.checkCredentials),null!==r.message&&(p.message=r.message.bodyText,null!==r.message.PropertiesText))for(var o in r.message.StringProperties)p.headers.push({name:o,value:r.message.StringProperties[o]});r.message=null}p.openPrefs=function(){i.path("/preferences").search({pref:"ActiveMQ"})};var a="defaultLanguageFormat",s=h.getLocalStorage(a)||"javascript";p.codeMirrorOptions=CodeEditor.createEditorSettings({mode:{name:s}}),p.$on("hawtioEditor_default_instance",function(e,t){p.codeMirror=t}),p.addHeader=function(){p.headers.push({name:"",value:""})},p.removeHeader=function(e){var t=p.headers.indexOf(e);p.headers.splice(t,1)},p.defaultHeaderNames=function(){var n=[];function e(e){angular.forEach(e.definitions.headers.properties,function(e,t){n.push(t)})}return e(f.jmsHeaderSchema),e(f.camelHeaderSchema),n},p.$watch("codeMirrorOptions.mode.name",function(e,t){h.setLocalStorage(a,e)});var l=function(){p.message="",Core.notification("success","Message sent!")};p.formatMessage=function(){CodeEditor.autoFormatEditor(p.codeMirror)},p.sendMessage=function(){!function(e,t){var n=h.selection;if(n){var i=n.objectName;if(i){var r=null;p.headers.length&&(r={},angular.forEach(p.headers,function(e){var t=e.name;t&&(r[t]=e.value)}),f.log.info("About to send headers:",JSON.stringify(r)));var o=Core.onSuccess(t);if("org.apache.camel"===n.domain){var a=f.getContextAndTargetEndpoint(h),s=a.uri;if((i=a.mbean)&&s){var l=!0;if(f.isCamelVersionEQGT(2,14,h,g)){var c=g.execute(i,"canSendToEndpoint(java.lang.String)",s);c||(Core.notification("warning","Camel does not support sending to this endpoint."),l=!1)}l&&(r?g.execute(i,"sendBodyAndHeaders(java.lang.String, java.lang.Object, java.util.Map)",s,e,r,o):g.execute(i,"sendStringBody(java.lang.String, java.lang.String)",s,e,o))}else i?Core.notification("danger","Failed to determine endpoint name!"):Core.notification("danger","Could not find CamelContext MBean!"),f.log.debug("Parsed context and endpoint:",a)}else{var d=m.activemqUserName,u=m.activemqPassword;r||(r={}),r.JMSDeliveryMode||(r.JMSDeliveryMode="2"),g.execute(i,"sendTextMessage(java.util.Map, java.lang.String, java.lang.String, java.lang.String)",r,e,d,u,o)}}}}(p.message,l)}}])}(Camel||(Camel={})),function(u){u._module.controller("Camel.SourceController",["$scope","workspace",function(l,c){function d(e){function t(e,t){var n=t.getAttribute("customId");"route"===t.nodeName&&(n="true"),n&&"true"===n||t.removeAttribute("id"),t.removeAttribute("customId"),t.removeAttribute("_cid"),t.removeAttribute("group")}var n=$(e).clone();n.each(t),n.find("*").each(t);var i=n&&n.length?n[0]:e;return Core.xmlNodeToString(i)}l.camelContextMBean=u.getSelectionCamelContextMBean(c),l.showUpdateButton=!0;var n=function(e){var t=e.value,n=u.getSelectedRouteId(c);if(t&&n){var i=$.parseXML(t),r=$(i).find('route[id="'+n+'"]');if(r&&r.length){var o=r[0],a=o.parentNode;a&&"routes"===a.nodeName&&a.attributes&&angular.forEach(a.attributes,function(e){if(_.startsWith(e.name,"xmlns")){var t=i.createAttribute(e.name);t.value=e.value,o.attributes.setNamedItem(t)}});var s=d(o);s&&(t=s)}}l.source=t,Core.$apply(l)},r=function(){Core.notification("success","Route updated!"),c.loadTree()};l.saveRouteXml=function(){var e=l.source;if(e){var t=decodeURIComponent(e);u.log.debug("addOrUpdateRoutesFromXml xml decoded: "+t);var n=c.jolokia,i=u.getSelectionCamelContextMBean(c);i?n.execute(i,"addOrUpdateRoutesFromXml(java.lang.String)",t,Core.onSuccess(r)):Core.notification("danger","Could not find CamelContext MBean!")}},function(){var e=u.getSelectedRouteNode(c);if(e)l.source=d(e),l.showUpdateButton="route"===e.nodeName,Core.$apply(l);else{if(l.mbean=u.getSelectionCamelContextMBean(c),!l.mbean){var t=Core.pathGet(c,["selection","parent"]);t&&"context"===t.title&&(l.mbean=t.children[0].objectName)}l.mbean&&c.jolokia.request({type:"exec",mbean:l.mbean,operation:"dumpRoutesAsXml()"},Core.onSuccess(n))}}()}])}(Camel||(Camel={})),function(h){var g=Logger.get("hawtio-integration-camel-tracer");h._module.controller("Camel.TraceRouteController",["$scope","$timeout","workspace","jolokia","localStorage","tracerStatus",function(a,s,l,o,c,d){var u=500;function n(e){var t=d3.select("svg.camel-diagram").selectAll("g .node");h.highlightSelectedNode(t,e)}function t(){a.tracing=!1,null!=a.jolokiaHandle&&(g.debug("Unregistering jolokia handle"),o.unregister(a.jolokiaHandle),a.jolokiaHandle=null);var e=h.getSelectionCamelTraceMBean(l);if(e)if(a.tracing=o.getAttribute(e,"Enabled",Core.onSuccess(null)),a.tracing){var t=e;t&&null===a.jolokiaHandle&&(g.debug("Registering jolokia handle"),Core.scopeStoreJolokiaHandle(a,o,o.register(i,{type:"exec",mbean:t,operation:"dumpAllTracedMessagesAsXml()",ignoreErrors:!0,arguments:[]})))}else d.messages=[],a.messages=[]}function i(e){g.debug("Populating response",e);var r=h.getSelectedRouteId(l),t=e.value;if(angular.isString(t)){var n=$.parseXML(t),i=$(n).find("fabricTracerEventMessage");i&&i.length||(i=$(n).find("backlogTracerEventMessage"));var o=function(){var e=document.querySelector(".camel-trace-messages-table-body-container");return e.scrollHeight-e.scrollTop===e.clientHeight}();i.each(function(e,t){if($(t).find("routeId").text()===r){var n=h.createMessageFromXml(t),i=$(t).find("toNode").text();i&&(n.toNode=i),g.debug("Adding new message to trace table with id",n.id),a.messages.push(n)}}),a.messages.length>u&&null===a.message&&a.messages.splice(0,a.messages.length-u),d.messages=a.messages,o&&function(){var e=document.querySelector(".camel-trace-messages-table-body-container");s(function(){return e.scrollTop=e.scrollHeight-e.clientHeight},0)}(),Core.$apply(a)}}function e(){angular.forEach(a.gridOptions.selectedItems,function(e){if(e){var t=e.toNode;if(t){var n=d3.select("svg.camel-diagram").selectAll("g .node");h.highlightSelectedNode(n,t)}}})}function p(e){t(),Core.$apply(a)}function r(e){var t=h.getSelectionCamelTraceMBean(l);if(t){if(_.endsWith(t.toString(),"BacklogTracer")){var n=h.maximumTraceOrDebugBodyLength(c),i=h.traceOrDebugIncludeStreams(c),r=Core.onSuccess(null);o.setAttribute(t,"BodyMaxChars",n,r),o.setAttribute(t,"BodyIncludeStreams",i,r),o.setAttribute(t,"BodyIncludeFiles",i,r)}o.setAttribute(t,"Enabled",e,Core.onSuccess(p))}}a.tracing=!1,a.messages=[],a.message=null,a.messageIndex=-1,a.graphView="plugins/camel/html/routeDiagram.html",a.camelTraceMBean=h.getSelectionCamelTraceMBean(l),a.jolokiaHandle=null,a.gridOptions=h.createBrowseGridOptions(),a.gridOptions.selectWithCheckboxOnly=!1,a.gridOptions.showSelectionCheckbox=!1,a.gridOptions.multiSelect=!1,a.gridOptions.afterSelectionChange=e,a.gridOptions.columnDefs.push({field:"toNode",displayName:"To Node"}),a.startTracing=function(){g.info("Start tracing"),r(!0)},a.stopTracing=function(){g.info("Stop tracing"),r(!1)},a.clear=function(){g.debug("Clear messages"),d.messages=[],a.messages=[],a.message&&a.messageDialog.close(),Core.$apply(a)},a.openMessageDialog=function(e,t){a.message=e,a.messageIndex=t,n(e.toNode)},a.closeMessageDetails=function(){a.message=null,a.messageIndex=-1,n(null)},a.changeMessage=function(e){0<=e&&e<=a.messages.length-1&&e!==a.messageIndex&&(a.messageIndex=e,a.message=a.messages[a.messageIndex],n(a.message.toNode))},ActiveMQ.decorate(a,e),g.info("Re-activating tracer with",d.messages.length,"existing messages"),a.messages=d.messages,a.tracing=null!=a.jolokiaHandle,t()}])}(Camel||(Camel={})),function(e){var t=function(){};(Camel||(Camel={})).ConditionalBreakpoint=t}(),function(e){e.pluginName="hawtio-ui-datatable",e.log=Logger.get(e.pluginName),e._module=angular.module(e.pluginName,[]),hawtioPluginLoader.addModule(e.pluginName)}(DataTable||(DataTable={})),function(f){function b(n,e,t){var i=t,r=!1;return angular.forEach(e,function(e){var t=n[e];!r&&angular.isDefined(t)&&(i=t,r=!0)}),i}function v(e,t){if(t.columnDefs)for(var n=0,i=t.columnDefs;n<i.length;n++){var r=i[n];if(r.field===e&&void 0!==r.ascending)return r.ascending}return!0}f._module.directive("hawtioSimpleTable",["$compile","$timeout",function(c,d){return{restrict:"A",scope:{config:"=hawtioSimpleTable"},link:function(u,s,e){s.addClass("hawtio-simple-table");var p=u.config,h=p.data||"data",g=p.primaryKeyFn||function(e){var t=e.id||e._id||e._key||e.name;if(void 0===t)throw new Error("Missing primary key. Please add a property called 'id', '_id', '_key', or 'name' to your entities. Alternatively, set the 'primaryKeyFn' configuration option.");return t};u.rows=[];var m=u.$parent||u,t=function(){var e,t=Core.pathGet(m,h);if(t&&!angular.isArray(t)&&(t=[t],Core.pathSet(m,h,t)),!("sortInfo"in p)&&"columnDefs"in p){var n,i=_.first(p.columnDefs).defaultSort;n=angular.isUndefined(i)||!0===i?_.first(p.columnDefs).field:_.first(p.columnDefs.slice(1)).field,p.sortInfo={sortBy:n,ascending:v(n,p)}}var r=_.find(p.columnDefs,function(e){if(e.field===p.sortInfo.sortBy)return e});angular.isDefined(r)&&(r=r.customSortField);var o=u.config.sortInfo||{sortBy:"",ascending:!0},a=0<t.filter(function(e){return!Core.isBlank(e[o.sortBy])&&!angular.isNumber(e[o.sortBy])}).length,s=_.sortBy(t||[],r||function(e){return!0==a?((e[o.sortBy]||"")+"").toLowerCase():e[o.sortBy]});o.ascending||s.reverse();var l=-1,c=_.map(s,function(t){return{entity:t,index:++l,getProperty:function(e){return t[e]}}}),d=[];c.forEach(function(e,t){var n=g(e.entity);_.some(p.selectedItems,function(e){var t=g(e);return angular.equals(n,t)})&&(e.entity.index=e.index,d.push(e.entity),e.selected=!0,f.log.debug("Data changed so keep selecting row at index "+e.index))}),p.selectedItems.length=0,(e=p.selectedItems).push.apply(e,d),Core.pathSet(m,["hawtioSimpleTable",h,"rows"],c),u.rows=c};function r(){var e=p.selectedItems;if(e||(e=[],p.selectedItems=e),angular.isString(e)){var t=e;(e=Core.pathGet(m,t))||(e=[],m[t]=e)}return e}function l(){var e=u.config.multiSelect;return angular.isUndefined(e)&&(e=!0),e}m.$watchCollection(h,t),m.$on("hawtio.datatable."+h,t),u.toggleAllSelections=function(){var t=u.config.allRowsSelected,n=t,i=r();i.splice(0,i.length),angular.forEach(u.rows,function(e){e.selected=n,t&&u.showRow(e)&&i.push(e.entity)})},u.toggleRowSelection=function(t){if(t){var e=r();l()||(e.splice(0,e.length),angular.forEach(u.rows,function(e){e!==t&&(e.selected=!1)}));var n=t.entity;if(n){var i=e.indexOf(n);t.selected?i<0&&e.push(n):(u.config.allRowsSelected=!1,0<=i&&e.splice(i,1))}}},u.sortBy=function(e){u.config.sortInfo.sortBy===e?u.config.sortInfo.ascending=!u.config.sortInfo.ascending:(u.config.sortInfo.sortBy=e,u.config.sortInfo.ascending=v(e,u.config)),m.$broadcast("hawtio.datatable."+h)},u.getClass=function(e){return"sortInfo"in u.config&&u.config.sortInfo.sortBy===e?u.config.sortInfo.ascending?"sorting_asc":"sorting_desc":""},u.showRow=function(e){var t=Core.pathGet(u,["config","filterOptions","filterText"]);if(Core.isBlank(t))return!0;var n=null;try{n=e.entity.title}catch(e){}return n||(n=e.entity),FilterHelpers.search(n,t)},u.isSelected=function(e){return e&&_.some(p.selectedItems,e.entity)},u.onRowClicked=function(e){var t=u.config.gridKey;if(t){var n=u.config.onClickRowHandlers[t];n&&n(e)}},u.onRowSelected=function(e){var t=p.selectedItems.indexOf(e.entity);0<=t?(f.log.debug("De-selecting row at index "+e.index),p.selectedItems.splice(t,1),delete e.selected):(p.multiSelect||(p.selectedItems.length=0),f.log.debug("Selecting row at index "+e.index),e.entity.index=e.index,p.selectedItems.push(e.entity),angular.isDefined(e.selected)&&e.selected||(e.selected=!0))},u.$watchCollection("rows",function(){var e=s;e.empty(),e.addClass("dataTable");var t=b(p,["showSelectionCheckbox","displaySelectionCheckbox"],!0),n=b(p,["enableRowClickSelection"],!1),i=void 0!==p.maxBodyHeight,r=function(e,t,n,i){var r="<thead><tr>";t&&(r+="\n<th class='simple-table-checkbox'>",n&&(r+="<input type='checkbox' ng-show='rows.length' ng-model='config.allRowsSelected' ng-change='toggleAllSelections()'>"),r+="</th>");for(var o=0,a=e.length;o<a;o++){var s=e[o],l="";(void 0===s.sortable||s.sortable)&&(l="class='sorting' ng-click=\"sortBy('"+s.field+"')\" "),r+="\n<th "+l+" ng-class=\"getClass('"+s.field+"')\">{{config.columnDefs["+o+"].displayName}}</th>"}i&&(r+="\n<th></th>");return r+="\n</tr></thead>\n"}(p.columnDefs,t,l(),i),o=function(e,t,n){var i="<tbody><tr ng-repeat='row in rows track by $index' ng-show='showRow(row)' ng-class=\"{'active': isSelected(row)}\" >";t&&(i+="\n<td class='simple-table-checkbox'><input type='checkbox' ng-model='row.selected' ng-change='toggleRowSelection(row)'></td>");for(var r=n?"ng-click='onRowSelected(row)' ":"",o=0,a=e.length;o<a;o++){var s=e[o],l=s.cellTemplate||'<div class="ngCellText" title="{{row.entity.'+s.field+'}}">{{row.entity.'+s.field+"}}</div>";i+="\n<td + "+r+">"+l+"</td>"}return i+="\n</tr></tbody>"}(p.columnDefs,t,n);if(i){!function(e,t,n,i,r){if(e.html(n),e.addClass("scroll-body-table"),e.parent().hasClass("scroll-body-table-wrapper"))e.parent().scrollTop(0);else{var o=e.clone();o.html(t),o.removeClass("scroll-body-table"),o.addClass("scroll-header-table"),e.wrap('<div class="scroll-body-table-wrapper"></div>');var a=e.parent();a.css("max-height",r),a.wrap("<div></div>");var s=a.parent();s.addClass("table"),s.addClass("table-bordered");var l=a.width()-e.width();o.find("th:last-child").width(l),o.insertBefore(a),i(function(){$(window).resize(function(){var n=e.find("tr:first-child td").map(function(){return $(this).width()}).get();o.find("th").each(function(e,t){$(t).width(n[e])}),e.find("tr").each(function(e,t){$(t).find("td").each(function(e,t){$(t).width(n[e])})})}).resize()})}}(e,c(r)(u),c(o)(u),d,p.maxBodyHeight)}else{var a=c(r+o)(u);e.html(a)}})}}}])}(DataTable||(DataTable={})),function(a){a.GlobalCodeMirrorOptions={theme:"default",tabSize:4,lineNumbers:!0,indentWithTabs:!0,lineWrapping:!0,autoCloseTags:!0},a.detectTextFormat=function(e){var t="text";if(e){t="javascript";var n=_.trim(e);n&&_.startsWith(n,"<")&&_.endsWith(n,">")&&(t="xml")}return t},a.autoFormatEditor=function(e){if(e){var t=e.getValue();switch(e.getOption("mode")){case"xml":t=window.html_beautify(t,{indent_size:2});break;case"javascript":t=window.js_beautify(t,{indent_size:2})}e.setValue(t)}},a.createEditorSettings=function(e){var t,n,r,o,i;return void 0===e&&(e={}),e.extraKeys=e.extraKeys||{},"object"!=typeof(t=(t=e.mode)||{name:"text"})&&(t={name:t}),"javascript"===t.name&&angular.extend(t,{json:!0}),n=e,r=CodeMirror.newFoldFunction(CodeMirror.braceRangeFinder),o=CodeMirror.newFoldFunction(CodeMirror.tagRangeFinder),i=function(e,t){var n=e.getOption("mode"),i=n.name;n&&i&&("javascript"===i?r(e,t):("xml"===i||_.startsWith(i,"html"))&&o(e,t))},n.onGutterClick=i,n.extraKeys=angular.extend(n.extraKeys,{"Ctrl-Q":function(e){i(e,e.getCursor().line)}}),e.readOnly||(e.matchBrackets=!0),angular.extend(e,a.GlobalCodeMirrorOptions),e}}(CodeEditor||(CodeEditor={})),function(e){e.pluginName="hawtio-ui-editor",e.templatePath="plugins/components/editor/html",e.log=Logger.get(e.pluginName)}(HawtioEditor||(HawtioEditor={})),function(e){e._module=angular.module(e.pluginName,[]),e._module.run(function(){e.log.debug("loaded")}),hawtioPluginLoader.addModule(e.pluginName)}(HawtioEditor||(HawtioEditor={})),function(t){t._module.directive("hawtioEditor",["$parse",function(e){return t.Editor(e)}]),t.Editor=function(i){return{restrict:"A",replace:!0,templateUrl:UrlHelpers.join(t.templatePath,"editor.html"),scope:{text:"=hawtioEditor",mode:"=",readOnly:"=?",outputEditor:"@",name:"@"},controller:["$scope","$element","$attrs",function(t,e,n){t.codeMirror=null,t.doc=null,t.options=[],UI.observe(t,n,"name","editor"),t.applyOptions=function(){t.codeMirror&&_.forEach(t.options,function(e){try{t.codeMirror.setOption(e.key,e.value)}catch(e){}})},t.$watch(_.debounce(function(){t.codeMirror&&t.codeMirror.refresh()},100,{trailing:!0})),t.$watch("codeMirror",function(){t.codeMirror&&(t.doc=t.codeMirror.getDoc(),t.codeMirror.on("change",function(e){t.text=t.doc.getValue(),t.dirty=!t.doc.isClean(),Core.$apply(t)}))})}],link:function(r,o,e){"dirty"in e&&(r.dirtyTarget=e.dirty,r.$watch("$parent['"+r.dirtyTarget+"']",function(e,t){e!==t&&(r.dirty=e)}));var t=_.cloneDeep(e);if(delete t.$$observers,delete t.$$element,delete t.$attr,delete t.class,delete t.hawtioEditor,delete t.mode,delete t.dirty,delete t.outputEditor,"onChange"in e){var n=e.onChange;delete t.onChange,r.options.push({onChange:function(e){var t=i(n);t&&t(r.$parent,{codeMirror:e})}})}function a(e){return"hawtioEditor_"+(r.name||"default")+"_"+e}angular.forEach(t,function(e,t){r.options.push({key:t,value:e})}),r.$watch("mode",function(){r.mode&&(r.codeMirror?r.codeMirror.setOption("mode",r.mode):r.options.push({key:"mode",value:r.mode}))}),r.$watch("readOnly",function(e){var t=Core.parseBooleanValue(e,!1);r.codeMirror?r.codeMirror.setOption("readOnly",t):r.options.push({key:"readOnly",value:t})}),r.$watch("dirty",function(e){"dirtyTarget"in r&&(r.$parent[r.dirtyTarget]=e),r.$emit(a("dirty"),e)}),r.$watch("text",function(e){if(r.codeMirror)r.doc&&!r.codeMirror.hasFocus()&&(e=r.text||"",(angular.isArray(e)||angular.isObject(e))&&(e=JSON.stringify(e,null,"  "),r.mode="javascript",r.codeMirror.setOption("mode","javascript")),r.doc.setValue(e),r.doc.markClean(),r.dirty=!1);else{var t={value:e};t=CodeEditor.createEditorSettings(t),r.codeMirror=CodeMirror.fromTextArea(o.find("textarea").get(0),t);var n=r.outputEditor;if(n){var i=r.$parent||r;Core.pathSet(i,n,r.codeMirror)}r.applyOptions(),r.$emit(a("instance"),r.codeMirror)}})}}}}(HawtioEditor||(HawtioEditor={})),function(r){function i(e,t){if(e&&t){var n=a(e,t);if(n){var i=n.type;i&&(e=i)}}return e}function a(e,i){if(i){var t=i.definitions;if(t){var n=t[e];if(n){var r=n.fullSchema;if(r)return r;var o=Core.pathGet(n,["extends","type"]);if(o)return(r=angular.copy(n)).properties=r.properties||{},angular.isArray(o)||(o=[o]),angular.forEach(o,function(e){if(angular.isString(e)){var t=a(e,i),n=Core.pathGet(t,["properties"]);n&&angular.forEach(n,function(e,t){r.properties[t]=e})}}),n.fullSchema=r}return n}}return null}r.defaultValues=function(i,e){i&&e&&angular.forEach(e.properties,function(e,t){var n=e.default;n&&!i[t]&&(r.log.debug("===== defaulting value",n,"into entity["+t+"]"),i[t]=n)})},r.resolveTypeNameAlias=i,r.isJsonType=function(e,t,n){for(var i=a(e,t);i;){var r=Core.pathGet(i,["extends","type"]);if(!r)return!1;if(n===r)return!0;i=a(r,t)}return!1},r.safeIdentifier=function(e){return e?e.replace(/-/g,"_"):e},r.lookupDefinition=a,r.findArrayItemsSchema=function(e,t){var n=null;if(e&&t){if(n=e.items){var i=n.type;if(i){var r=a(i,t);if(r)return r}}var o=e.additionalProperties;if(o&&"#"===o.$ref)return t}return n},r.isObjectType=function(e){var t=Core.pathGet(e,"type");return t&&"object"===t},r.isArrayOrNestedObject=function(e,t){if(e){var n=i(e.type,t);if(n&&("object"===n||"array"===n))return!0}return!1},r.configure=function(e,t,n){return angular.isDefined(t)&&(e=angular.extend(e,t)),angular.extend(e,n)},r.getControlGroup=function(e,t,n){var i=angular.element('<div class="'+e.controlgroupclass+'"></div>');if(angular.isDefined(t.description)&&i.attr("title",t.description),e.properties&&e.properties[n]){var r=e.properties[n];r&&"control-attributes"in r&&angular.forEach(r["control-attributes"],function(e,t){i.attr(t,e)})}return i},r.getLabel=function(e,t,n,i){return void 0===i&&(i=!1),i?angular.element('<label class="strong '+e.labelclass+'">'+n+"</label>"):angular.element('<label class="'+e.labelclass+'">'+n+"</label>")},r.getControlDiv=function(e){return angular.element('<div class="'+e.controlclass+'"></div>')},r.getHelpSpan=function(e,t,n,i){void 0===i&&(i=null);var r=Core.pathGet(e.data,["properties",n,"help"]);Core.isBlank(r)&&(r=Core.pathGet(e.data,["properties",n,"description"])),Core.isBlank(r)&&angular.isDefined(i)&&(r=Core.pathGet(i,["help"]),Core.isBlank(r)&&(r=Core.pathGet(i,["description"])));var o=e.showhelp||"true";return Core.isBlank(r)?angular.element('<span class="help-block"></span>'):angular.element('<span class="help-block" ng-show="'+o+'">'+r+"</span>")}}(Forms||(Forms={})),function(N){function P(e,r,t,n,i,o){var a=N.resolveTypeNameAlias(e,t);if(!a)return'<input type="text"/>';if(Core.pathGet(r,["formTemplate"]))return null;var s=Core.pathGet(r,["input-element"]);if(s)return"<"+s+"></"+s+">";var l=Core.pathGet(r,["enum"]);if(l){var c=null,d="";if(l){var u=n.scope,p=n.data;if(p&&u){var h=u[n.schemaName],g=angular.isString(p)?u[p]:p,m=o.split(".");r=null;angular.forEach(m,function(e){r=Core.pathGet(g,["properties",e]);var t=Core.pathGet(r,["type"]),n=N.lookupDefinition(t,h);n&&(g=n)});var f=Core.pathGet(r,["enum"]);angular.isUndefined(f)&&(f=l),u[c="$values_"+o.replace(/\./g,"_")]=f}}c&&(d+=' ng-options="value for value in '+c+'"');return"<select"+d+"></select>"}if(angular.isArray(a))return null;if(!angular.isString(a))return null;var b=null,v=r.default||r.defaultValue;function y(e,t){var n=Core.pathGet(e,t);if(!n){var i=r.default||r.defaultValue;i&&(n=i,Core.pathSet(e,t,n))}return n}switch(v&&(b=function(e,t){Core.pathGet(e,t)||Core.pathSet(e,t,v)},i.valueConverter=b),a.toLowerCase()){case"int":case"integer":case"long":case"short":case"java.lang.integer":case"java.lang.long":case"float":case"double":case"java.lang.float":case"java.lang.double":return i.valueConverter=function(e,t){var n=y(e,t);if(n&&angular.isString(n)){var i=Number(n);Core.pathSet(e,t,i)}},'<input type="number" class="form-control"/>';case"array":case"java.lang.array":case"java.lang.iterable":case"java.util.list":case"java.util.collection":case"java.util.iterator":case"java.util.set":case"object[]":return null;case"boolean":case"bool":case"java.lang.boolean":return i.valueConverter=function(e,t){var n=y(e,t);n&&"true"===n&&Core.pathSet(e,t,!0)},'<input type="checkbox" class="form-input"/>';case"password":return'<input type="password" class="form-control"/>';case"hidden":return'<input type="hidden" class="form-input"/>';case"map":return null;default:return'<input type="text" class="form-control"/>'}}N.createWidget=function(e,i,t,n,r,o,a,s,l){void 0===s&&(s=!0),void 0===l&&(l=!1);var c=null,d=null;function u(n,e){var t=i[e];t&&angular.forEach(t,function(e,t){angular.isString(e)&&n.attr(t,e)})}function p(){u(c,"input-attributes"),angular.forEach(i,function(e,t){if(angular.isString(e)&&t.indexOf("$")<0&&"type"!==t){var n=Core.escapeHtml(e);c.attr(t,n)}})}var h={valueConverter:null},g=N.safeIdentifier(r),m=i.required||!1,f=P(e,i,t,n,h,g);if(f){c=angular.element(f),p(),r=g;var b=n.model||Core.pathGet(i,["input-attributes","ng-model"]);b||(b=n.getEntity()+"."+r),c.attr("ng-model",b),c.attr("name",r);var v=i.title||i.tooltip||i.label;v&&c.attr("title",v);var y=i.tooltip||i.description;y&&c.attr("tooltip",y);var w=l||i.disableHumanizeLabel,C=r;if(o||i.ignorePrefixInLabel){var k=r.lastIndexOf(".");0<k&&(C=r.substring(k+1))}if("hidden"!==c.attr("type")&&s){d=this.getControlGroup(n,n,r);var S=i.title||i.label||(w?C:Core.humanizeValue(C)),x=N.getLabel(n,n,S,m);y?x.attr("title",y):v&&x.attr("title",v),d.append(x),u(x,"label-attributes");var T=N.getControlDiv(n);T.append(c),T.append(N.getHelpSpan(n,n,r,i)),d.append(T);var I=n.showempty;if(angular.isDefined(I)){var j="true";"true"===I||"false"===I?j=I:angular.isString(r)&&(j=I+"('"+r+"')"),d.attr("ng-show",j)}u(T,"control-attributes"),u(d,"control-group-attributes");var M=n.scope;if(M&&b){var A=function(e){M.$emit("hawtio.form.modelChange",b,e)},E=A,R=h.valueConverter;R&&(E=function(){R(M,b);var e=Core.pathGet(M,b);A(e)}),M.$watch(b,E)}}}else{(c=angular.element("<div></div>")).attr(N.normalize(e,i,t),""),p(),c.attr("entity",n.getEntity()),c.attr("mode",n.getMode());var q=n.schemaName;q&&c.attr("schema",q),a&&c.attr("data",a),(o||i.ignorePrefixInLabel)&&c.attr("ignore-prefix-in-label","true"),(l||i.disableHumanizeLabel)&&c.attr("disable-humanize-label","true"),c.attr("name",r)}var $=i.label;$&&c.attr("title",$);try{n.isReadOnly()&&(c.attr("readonly","true"),("select"===c[0].localName||"input"===c[0].localName&&"checkbox"===c.attr("type"))&&c.attr("disabled","true"))}catch(e){}return m&&("select"===c[0].localName||"input"===c[0].localName&&"checkbox"===c.attr("type")?c.removeAttr("required"):c.attr("required","true")),d||c},N.createStandardWidgetMarkup=P,N.mapType=function(e){switch(e.toLowerCase()){case"int":case"integer":case"long":case"short":case"java.lang.integer":case"java.lang.long":case"float":case"double":case"java.lang.float":case"java.lang.double":return"number";case"array":case"java.lang.array":case"java.lang.iterable":case"java.util.list":case"java.util.collection":case"java.util.iterator":case"java.util.set":case"object[]":return"text";case"boolean":case"bool":case"java.lang.boolean":return"checkbox";case"password":return"password";case"hidden":return"hidden";default:return"text"}},N.normalize=function(t,e,n){if(!(t=N.resolveTypeNameAlias(t,n)))return"hawtio-form-text";if(Core.pathGet(e,["formTemplate"]))return"hawtio-form-custom";if(Core.pathGet(e,["enum"]))return"hawtio-form-select";if(angular.isArray(t))return null;if(!angular.isString(t)){try{console.log("Unsupported JSON schema type value "+JSON.stringify(t))}catch(e){console.log("Unsupported JSON schema type value "+t)}return null}switch(t.toLowerCase()){case"int":case"integer":case"long":case"short":case"java.lang.integer":case"java.lang.long":case"float":case"double":case"java.lang.float":case"java.lang.double":return"hawtio-form-number";case"array":case"java.lang.array":case"java.lang.iterable":case"java.util.list":case"java.util.collection":case"java.util.iterator":case"java.util.set":case"object[]":var i=e.items;if(!i)return"hawtio-form-string-array";var r=i.type;return r&&"string"===r?"hawtio-form-string-array":(N.log.debug("Returning hawtio-form-array for : ",e),"hawtio-form-array");case"boolean":case"bool":case"java.lang.boolean":return"hawtio-form-checkbox";case"password":return"hawtio-form-password";case"hidden":return"hawtio-form-hidden";case"map":return"hawtio-form-map";default:return"hawtio-form-text"}}}(Forms||(Forms={})),function(C){var h=function(){function e(){this.name="input",this.type="",this.description="",this._default="",this.scope=null,this.mode="edit",this.schemaName="schema",this.controlgroupclass="form-group",this.controlclass="col-sm-10",this.labelclass="col-sm-2 control-label",this.showtypes="false",this.formtemplate=null,this.entity="entity",this.model=void 0}return e.prototype.getEntity=function(){return this.entity||"entity"},e.prototype.getMode=function(){return this.mode||"edit"},e.prototype.isReadOnly=function(){return"view"===this.getMode()},e}();C.InputBaseConfig=h;var e=function(){function e(e){var i=this;this.$compile=e,this.restrict="A",this.scope=!0,this.replace=!1,this.transclude=!1,this.attributeName="",this.link=function(e,t,n){return i.doLink(e,t,n)}}return e.prototype.doLink=function(t,e,n){var i=new h;(i=C.configure(i,null,n)).scope=t,i.schemaName=n.schema||"schema";var r=C.safeIdentifier(i.name),o=this.getControlGroup(i,i,r),a=i.model;angular.isDefined(a)||(a=i.getEntity()+"."+r);var s=r;if("true"===n.ignorePrefixInLabel){var l=r.lastIndexOf(".");0<l&&(s=r.substring(l+1))}var c="true"===n.disableHumanizeLabel,d=n.title||(c?s:Core.humanizeValue(s));o.append(C.getLabel(i,i,d));var u=C.getControlDiv(i);u.append(this.getInput(i,i,r,a)),u.append(C.getHelpSpan(i,i,r)),o.append(u),$(e).append(this.$compile(o)(t)),t&&a&&t.$watch(a,function(e){t.$emit("hawtio.form.modelChange",a,e)})},e.prototype.getControlGroup=function(e,t,n){return C.getControlGroup(e,t,n)},e.prototype.getInput=function(e,t,n,i){var r=$('<span class="form-data"></span>');return i&&(r.attr("ng-model",i),r.append("{{"+i+"}}")),r},e}(),t=function(a){function e(e){var t=a.call(this,e)||this;return t.$compile=e,t.type="text",t}return __extends(e,a),e.prototype.getInput=function(e,t,n,i){if(e.isReadOnly())return a.prototype.getInput.call(this,e,t,n,i);var r=$('<input type="'+this.type+'">');r.attr("name",n),i&&r.attr("ng-model",i),e.isReadOnly()&&r.attr("readonly","true");var o=e.$attr.required;return o&&"false"!==o&&r.attr("required","true"),r},e}(C.InputBase=e),n=function(o){function e(e){var t=o.call(this,e)||this;return t.$compile=e,t.type="hidden",t}return __extends(e,o),e.prototype.getControlGroup=function(e,t,n){var i=o.prototype.getControlGroup.call(this,e,t,n);return i.css({display:"none"}),i},e.prototype.getInput=function(e,t,n,i){var r=o.prototype.getInput.call(this,e,t,n,i);return r.attr("readonly","true"),r},e}(C.TextInput=t);C.HiddenText=n;var i=function(n){function e(e){var t=n.call(this,e)||this;return t.$compile=e,t.type="password",t}return __extends(e,n),e}(t);C.PasswordInput=i;var r=function(n){function e(e){var t=n.call(this,e)||this;return t.$compile=e,t}return __extends(e,n),e.prototype.getInput=function(e,t,n,i){var r=t.formtemplate;r=Core.unescapeHtml(r);var o=$(r);return o.attr("name")||o.attr("name",n),i&&o.attr("ng-model",i),e.isReadOnly()&&o.attr("readonly","true"),o},e}(e);C.CustomInput=r;var o=function(p){function e(e){var t=p.call(this,e)||this;return t.$compile=e,t}return __extends(e,p),e.prototype.getInput=function(e,t,n,i){if(e.isReadOnly())return p.prototype.getInput.call(this,e,t,n,i);var r=$("<select></select>");r.attr("name",n);var o=e.scope,a=e.data;if(a&&o){var s=o[e.schemaName],l=o[a],c=n.split("."),d=null;angular.forEach(c,function(e){d=Core.pathGet(l,["properties",e]);var t=Core.pathGet(d,["type"]),n=C.lookupDefinition(t,s);n&&(l=n)});var u=Core.pathGet(d,["enum"]);o.$selectValues=u,r.attr("ng-options","value for value in $selectValues")}return i&&r.attr("ng-model",i),e.isReadOnly()&&r.attr("readonly","true"),r},e}(e);C.SelectInput=o;var a=function(a){function e(e){var t=a.call(this,e)||this;return t.$compile=e,t}return __extends(e,a),e.prototype.getInput=function(e,t,n,i){if(e.isReadOnly())return a.prototype.getInput.call(this,e,t,n,i);var r=$('<input type="number">');r.attr("name",n),angular.isDefined(t.def)&&r.attr("value",t.def),angular.isDefined(t.minimum)&&r.attr("min",t.minimum),angular.isDefined(t.maximum)&&r.attr("max",t.maximum),i&&r.attr("ng-model",i),e.isReadOnly()&&r.attr("readonly","true");var o=e.scope;return o&&(o.$watch(i,this.onModelChange),this.onModelChange(o,i)),r},e.prototype.onModelChange=function(e,t){var n=Core.pathGet(e,t);if(n&&angular.isString(n)){var i=Number(n);Core.pathSet(e,t,i)}},e}(e);C.NumberInput=a;var s=function(n){function e(e){var t=n.call(this,e)||this;return t.$compile=e,t}return __extends(e,n),e.prototype.getInput=function(e,t,n,i){var r=this,o="_"+n,a="{{"+o+"}}";if(e.isReadOnly())return angular.element('<ul><li ng-repeat="'+o+" in "+i+'">'+a+"</li></ul>");var s=e.scope,l=(t.$attr||{}).schema||"schema",c=s[e.schemaName]||s[l]||{},d=((c.properties||{})[n]||{}).items||{},u=d.type,p=d.disableHumanizeLabel;Core.pathGet(s,i)||Core.pathSet(s,i,[]);var h="_form_stringArray"+o+"_",g=h+"keys",m=h+"add",f=h+"remove";this.updateKeys(s,i,g),s[m]=function(){var e=Core.pathGet(s,i)||[];e.push(""),Core.pathSet(s,i,e),r.updateKeys(s,i,g)},s[f]=function(e){var t=Core.pathGet(s,i)||[];e<t.length&&t.splice(e,1),Core.pathSet(s,i,t),r.updateKeys(s,i,g)};var b=i+"["+o+"]",v={model:b},y=C.createWidget(u,d,c,v,b,!0,null,!1,p);y||(y=angular.element(a));var w=angular.element('<div class="controls" style="white-space: nowrap" ng-repeat="'+o+" in "+g+'"></div>');return w.append(y),w.append(angular.element('<a ng-click="'+f+"("+o+')" title="Remove this value"><i class="red icon-remove"></i></a>')),w.after(angular.element('<a ng-click="'+m+'()" title="Add a new value"><i class="icon-plus"></i></a>')),w},e.prototype.updateKeys=function(e,t,n){var i=Core.pathGet(e,t);e[n]=i?Object.keys(i):[],e.$emit("hawtio.form.modelChange",t,i)},e}(e);C.StringArrayInput=s;var l=function(n){function e(e){var t=n.call(this,e)||this;return t.$compile=e,t}return __extends(e,n),e.prototype.doLink=function(e,t,n){var i=new h,r=(i=C.configure(i,null,n)).name,o=n.data||"",a=n.entity||i.entity,s=n.schema||i.schemaName;var l=["properties",r,"inputTable"],c=null;if(Core.pathGet(e,l),!c){var d=l.join("."),u="true"===n.disableHumanizeLabel?r:Core.humanizeValue(r);c={formConfig:i,title:u,data:i.entity+"."+r,displayFooter:!1,showFilter:!1,columnDefs:[{field:"_id",displayName:u,render:function(e,t,n){if(n){var i=n.description;return i||angular.forEach(n,function(e,t){e&&!i&&(i=e)}),i}return null}}]},Core.pathSet(e,l,c)}var p=$('<div hawtio-input-table="'+d+'" data="'+o+'" property="'+r+'" entity="'+a+'" schema="'+s+'"></div>');i.isReadOnly()&&p.attr("readonly","true"),$(t).append(this.$compile(p)(e))},e}(e);C.ArrayInput=l;var c=function(n){function e(e){var t=n.call(this,e)||this;return t.$compile=e,t}return __extends(e,n),e.prototype.getInput=function(e,t,n,i){var r=$('<input class="hawtio-checkbox" type="checkbox">');r.attr("name",n),e.isReadOnly()&&r.attr("disabled","true"),i&&r.attr("ng-model",i),e.isReadOnly()&&r.attr("readonly","true");var o=e.scope;return o&&(o.$watch(i,this.onModelChange),this.onModelChange(o,i)),r},e.prototype.onModelChange=function(e,t){var n=Core.pathGet(e,t);n&&"true"===n&&Core.pathSet(e,t,!0)},e}(e);C.BooleanInput=c}(Forms||(Forms={})),function(e){e.pluginName="hawtio-forms",e.templateUrl="plugins/components/forms/html/",e.log=Logger.get(e.pluginName)}(Forms||(Forms={})),function(E){var t=function(){function e(){this.name="form",this.method="post",this.entity="entity",this.schemaName="schema",this.mode="edit",this.data={},this.json=void 0,this.scope=null,this.scopeName=null,this.properties=[],this.action="",this.formclass="hawtio-form form-horizontal",this.controlgroupclass="form-group",this.controlclass="col-sm-10",this.labelclass="col-sm-2 control-label",this.showtypes="false",this.showhelp="true",this.showempty="true",this.onsubmit="onSubmit"}return e.prototype.getMode=function(){return this.mode||"edit"},e.prototype.getEntity=function(){return this.entity||"entity"},e.prototype.isReadOnly=function(){return"view"===this.getMode()},e}();E.SimpleFormConfig=t;var e=function(){function e(e){var i=this;this.$compile=e,this.restrict="A",this.scope=!0,this.replace=!0,this.transclude=!0,this.attributeName="simpleForm",this.link=function(e,t,n){return i.doLink(e,t,n)}}return e.prototype.isReadOnly=function(){return!1},e.prototype.doLink=function(m,f,b){var v=new t,y=b.schema,w=y?m[y]:null,C=null,k=null,S=null,x=null,T=null,I=b[this.attributeName]||b.data,j=null,M=this;function A(n,i,e){void 0===e&&(e=i.ignorePrefixInLabel);var t=i.type;"java.lang.String"===t&&(t="string");var r=E.lookupDefinition(t,T);r||(r=E.lookupDefinition(t,w));var o=!!T&&T.disableHumanizeLabel;if(!i.hidden){if("expression"===i.kind){r=E.lookupDefinition("expression",w);var a=n+".language",s=n+".expression",l=jQuery.extend(!0,{},r.properties.expression);l.description=i.description,l.title=i.title,l.required=i.required;var c=E.createWidget(t,r.properties.language,T,v,a,e,I,!0,o),d=E.createWidget(t,l,T,v,s,e,I,!0,o),u=c.find("select"),p=d.find("input");return u&&p&&(u.attr("style","width: 120px; margin-right: 10px"),p.attr("style","width: 470px"),p.before(u)),void x.append(d)}var h=null;if(!r&&"object"===t&&i.properties?h=i.properties:r&&E.isObjectType(r)&&(h=r.properties),h)angular.forEach(h,function(e,t){A(n+"."+t,e,i.ignorePrefixInLabel)});else{c=E.createWidget(t,i,T,v,n,e,I,!0,o);if(S.use){var g=function(n){var i=S.locations[n];return i||angular.forEach(S.locations,function(e,t){!i&&"*"!==t&&n.match(t)&&(i=e)}),i||(i=S.locations["*"]),i}(n);S.elements[g].append(c)}else x.append(c);j||(j=c)}}}m.$watch(I,function(e){e&&function(e){(v=E.configure(v,e,b)).schemaName=y,v.scopeName=I,v.scope=m;var t=v.getEntity();angular.isDefined(v.json)?v.data=$.parseJSON(v.json):v.data=e;var n=M.createForm(v);x=n.find("fieldset"),T=v.data,S={elements:{},locations:{},use:!1},T&&angular.isDefined(T.tabs)&&(S.use=!0,S.div=$('<div class="tabbable hawtio-form-tabs"></div>'),angular.forEach(T.tabs,function(e,t){S.elements[t]=$('<div class="tab-pane" title="'+t+'"></div>'),S.div.append(S.elements[t]),e.forEach(function(e){S.locations[e]=t})}),S.locations["*"]||(S.locations["*"]=_.keys(T.tabs)[0]));S.use||x.append('<div class="spacer"></div>');if(T)if(S.use){var r={};angular.forEach(T.properties,function(e,t){var n=function(n){var i=null;angular.forEach(T.tabs,function(e,t){e.forEach(function(e){!i&&"*"!==e&&n.match(e)&&(i=e)})}),i||(i="*");return i}(t),i=r[n];i||(i=[],r[n]=i),i.push({id:t,property:e})}),angular.forEach(T.tabs,function(e,t){e.forEach(function(e){var t=r[e];t&&angular.forEach(t,function(e){var t=e.id,n=e.property;t&&n&&A(t,n)})})})}else angular.forEach(T.properties,function(e,t){A(t,e)});if(S.use){var i=S.div,o=Object.keys(S.elements).length;o<2?angular.forEach(i.children().children(),function(e){x.append(e)}):x.append(i)}var a=function(e,t){return angular.isDefined(e[t])&&angular.isFunction(e[t])?e:angular.isDefined(e.$parent)&&null!==e.$parent?a(e.$parent,t):null},s=v.onsubmit.replace("(","").replace(")",""),l=function(e,t){return null===e?null:e[t]}(a(m,s),s);null===l&&(l=function(e,t){E.log.info("No submit handler defined for form:",t.get(0).name)});angular.isDefined(l)&&n.submit(function(){if(E.log.debug("child scope: ",k),E.log.debug("form name: ",v),k[v.name].$invalid)return!1;var e=m[t];return l(e,n),!1});x.append('<input type="submit" style="position: absolute; left: -9999px; width: 1px; height: 1px;">');var c=n.find("*[autofocus]");if((!c||!c.length)&&j){console.log("No autofocus element, so lets add one!");var d=j.find("input").first()||j.find("select").first();d&&d.attr("autofocus","true")}C&&$(C).remove();k&&k.$destroy();k=m.$new(!1),C=M.$compile(n)(k);var u=m.forms;u||(u={},m.forms=u);var p=v.name;if(p){var h=k[p];h&&(u[p]=h);var g=p+="$scope";u[g]=k}$(f).append(C)}(e)})},e.prototype.createForm=function(e){var t=$('<form class="'+e.formclass+'" novalidate><fieldset></fieldset></form>');return t.attr("name",e.name),t.attr("action",e.action),t.attr("method",e.method),t.find("fieldset").append(this.getLegend(e)),t},e.prototype.getLegend=function(e){var t=Core.pathGet(e,"data.description");return t?"<legend>"+t+"</legend>":""},e}();E.SimpleForm=e}(Forms||(Forms={})),function(O){var L=function(){function e(){this.name="form",this.method="post",this.entity="entity",this.tableConfig="tableConfig",this.mode="edit",this.data={},this.json=void 0,this.properties=[],this.action="",this.tableclass="table table-striped inputTable",this.controlgroupclass="control-group",this.controlclass="controls pull-right",this.labelclass="control-label",this.showtypes="true",this.removeicon="icon-remove",this.editicon="icon-edit",this.addicon="icon-plus",this.removetext="Remove",this.edittext="Edit",this.addtext="Add",this.onadd="onadd",this.onedit="onedit",this.onremove="onRemove",this.primaryKeyProperty=void 0}return e.prototype.getTableConfig=function(){return this.tableConfig||"tableConfig"},e}();O.InputTableConfig=L;var e=function(){function e(e){var i=this;this.$compile=e,this.restrict="A",this.scope=!0,this.replace=!0,this.transclude=!0,this.attributeName="hawtioInputTable",this.link=function(e,t,n){return i.doLink(e,t,n)}}return e.prototype.doLink=function(n,e,t){var i=this,r=new L,o=t[this.attributeName],a=Core.pathGet(n,o);r=O.configure(r,a,t);var s=t.entity||r.data||"entity",l=t.property||"arrayData",c=s+"."+l,d=r.primaryKeyProperty,u=r.title||s;angular.isDefined(r.json)?r.data=$.parseJSON(r.json):r.data=n[r.data];var p=$("<div></div>");(a=Core.pathGet(n,o))?(a.selectedItems=[],n.config=a):console.log("No table configuration for table "+u);var h=this.createTable(r,o),g=this.getControlGroup(r,{},""),m=this.getControlDiv(r);function f(e){var t=Core.pathGet(n,c);t||(t=[]),!angular.isArray(t)&&t&&(t=[t]),t=e(t),Core.pathSet(n,c,t),n.$emit("hawtio.datatable."+c,t),Core.$apply(n)}function b(r){return angular.forEach(n.config.selectedItems,function(n){var e=n._id;if(angular.isArray(r))r=r.filter(function(e){return!_.isEqual(e,n)}),delete n._id,r=r.filter(function(e){return!_.isEqual(e,n)});else if(delete n._id,e)delete r[e];else{var i=!1;angular.forEach(r,function(e,t){!i&&_.isEqual(e,n)&&(console.log("Found row to delete! "+t),delete r[t],i=!0)}),i||console.log("Could not find "+JSON.stringify(n)+" in "+JSON.stringify(r))}}),r}m.addClass("btn-group"),g.append(m);var v=null,y=null,w=null,C=null,k=null;if(!t.readonly){var S=null,x=t.data,T=x?Core.pathGet(n,x):null,I=t.schema||x,j=I?Core.pathGet(n,I):null;l&&T&&(S=Core.pathGet(T,["properties",l])),v=this.getAddButton(r),n.addDialogOptions={backdropFade:!0,dialogFade:!0},n.showAddDialog=!1,n.openAddDialog=function(){n.addEntity={},n.addFormConfig=O.findArrayItemsSchema(S,j);C||(C=$('<div modal="showAddDialog" close="closeAddDialog()" options="addDialogOptions">\n<div class="modal-header"><h4>'+("Add "+u)+'</h4></div>\n<div class="modal-body"><div simple-form="addFormConfig" entity="addEntity" data="addFormConfig" schema="'+I+'"></div></div>\n<div class="modal-footer"><button class="btn btn-primary add" type="button" ng-click="addAndCloseDialog()">Add</button><button class="btn btn-warning cancel" type="button" ng-click="closeAddDialog()">Cancel</button></div></div>'),p.append(C),i.$compile(C)(n));n.showAddDialog=!0,Core.$apply(n)},n.closeAddDialog=function(){n.showAddDialog=!1,n.addEntity={}},n.addAndCloseDialog=function(){var t=n.addEntity;O.log.info("About to add the new entity "+JSON.stringify(t)),t&&f(function(e){return d&&e.remove(function(e){return e[d]===t[d]}),e.push(t),e}),n.closeAddDialog()},y=this.getEditButton(r),n.editDialogOptions={backdropFade:!0,dialogFade:!0},n.showEditDialog=!1,n.openEditDialog=function(){var e=n.config.selectedItems,t={};(e&&e.length&&angular.copy(e[0],t),n.editEntity=t,n.editFormConfig=O.findArrayItemsSchema(S,j),k)||(k=$('<div modal="showEditDialog" close="closeEditDialog()" options="editDialogOptions">\n<div class="modal-header"><h4>'+("Edit "+u)+'</h4></div>\n<div class="modal-body"><div simple-form="editFormConfig" entity="editEntity"></div></div>\n<div class="modal-footer"><button class="btn btn-primary save" type="button" ng-click="editAndCloseDialog()">Save</button><button class="btn btn-warning cancel" type="button" ng-click="closeEditDialog()">Cancel</button></div></div>'),p.append(k),i.$compile(k)(n));n.showEditDialog=!0,Core.$apply(n)},n.closeEditDialog=function(){n.showEditDialog=!1,n.editEntity={}},n.editAndCloseDialog=function(){var t=n.editEntity;console.log("About to edit the new entity "+JSON.stringify(t)),t&&f(function(e){return(e=b(e)).push(t),e}),n.closeEditDialog()},w=this.getRemoveButton(r)}var M=function(e,t){return angular.isDefined(e[t])&&angular.isFunction(e[t])?e:angular.isDefined(e.$parent)&&null!==e.$parent?M(e.$parent,t):null};function A(e,t){return null!==e?e[t]:null}var E=r.onremove.replace("(","").replace(")",""),R=r.onedit.replace("(","").replace(")",""),q=r.onadd.replace("(","").replace(")",""),N=A(M(n,E),E),P=A(M(n,R),R),D=A(M(n,q),q);null===N&&(N=function(){f(function(e){return b(e)})}),null===P&&(P=function(){n.openEditDialog()}),null===D&&(D=function(e){n.openAddDialog()}),v&&(v.click(function(e){return D(),!1}),m.append(v)),y&&(y.click(function(e){return P(),!1}),m.append(y)),w&&(w.click(function(e){return N(),!1}),m.append(w)),$(p).append(g),$(p).append(h),$(e).append(p),this.$compile(p)(n)},e.prototype.getAddButton=function(e){return $('<button type="button" class="btn add"><i class="'+e.addicon+'"></i> '+e.addtext+"</button>")},e.prototype.getEditButton=function(e){return $('<button type="button" class="btn edit" ng-disabled="!config.selectedItems.length"><i class="'+e.editicon+'"></i> '+e.edittext+"</button>")},e.prototype.getRemoveButton=function(e){return $('<button type="remove" class="btn remove" ng-disabled="!config.selectedItems.length"><i class="'+e.removeicon+'"></i> '+e.removetext+"</button>")},e.prototype.createTable=function(e,t){return $('<table class="'+e.tableclass+'" hawtio-simple-table="'+t+'"></table>')},e.prototype.getLegend=function(e){return Core.pathGet(e,"data.description")?"<legend>"+e.data.description+"</legend>":""},e.prototype.getControlGroup=function(e,t,n){var i=$('<div class="'+e.controlgroupclass+'"></div>');return angular.isDefined(t.description)&&i.attr("title",t.description),i},e.prototype.getControlDiv=function(e){return $('<div class="'+e.controlclass+'"></div>')},e.prototype.getHelpSpan=function(e,t,n){var i=$('<span class="help-block"></span>');return angular.isDefined(t.type)&&"false"!==e.showtypes&&i.append("Type: "+t.type),i},e}();O.InputTable=e}(Forms||(Forms={})),function(e){var t=function(){function e(){var i=this;this.restrict="A",this.scope=!0,this.link=function(e,t,n){return i.doLink(e,t,n)}}return e.prototype.doLink=function(e,t,n){var i=$(t),r="form[name="+n.hawtioSubmit+"]";i.click(function(){return $(r).submit(),!1})},e}();e.SubmitForm=t}(Forms||(Forms={})),function(e){var t=function(){function e(){var i=this;this.restrict="A",this.scope=!0,this.link=function(e,t,n){return i.doLink(e,t,n)}}return e.prototype.doLink=function(e,t,n){var i=$(t),r="form[name="+n.hawtioReset+"]";i.click(function(){for(var e=$(r),t=0;t<e.length;t++)e[t].reset();return!1})},e}();e.ResetForm=t}(Forms||(Forms={})),function(t){t._module=angular.module(t.pluginName,[]),t._module.directive("simpleForm",["$compile",function(e){return new t.SimpleForm(e)}]),t._module.directive("hawtioForm",["$compile",function(e){return new t.SimpleForm(e)}]),t._module.directive("hawtioInputTable",["$compile",function(e){return new t.InputTable(e)}]),t._module.directive("hawtioFormText",["$compile",function(e){return new t.TextInput(e)}]),t._module.directive("hawtioFormPassword",["$compile",function(e){return new t.PasswordInput(e)}]),t._module.directive("hawtioFormHidden",["$compile",function(e){return new t.HiddenText(e)}]),t._module.directive("hawtioFormNumber",["$compile",function(e){return new t.NumberInput(e)}]),t._module.directive("hawtioFormSelect",["$compile",function(e){return new t.SelectInput(e)}]),t._module.directive("hawtioFormArray",["$compile",function(e){return new t.ArrayInput(e)}]),t._module.directive("hawtioFormStringArray",["$compile",function(e){return new t.StringArrayInput(e)}]),t._module.directive("hawtioFormCheckbox",["$compile",function(e){return new t.BooleanInput(e)}]),t._module.directive("hawtioFormCustom",["$compile",function(e){return new t.CustomInput(e)}]),t._module.directive("hawtioSubmit",function(){return new t.SubmitForm}),t._module.directive("hawtioReset",function(){return new t.ResetForm}),t._module.run(function(){t.log.debug("loaded")}),t._module.run(["$rootScope",function(e){e._||(e._=_)}]),hawtioPluginLoader.addModule(t.pluginName)}(Forms||(Forms={})),function(e){e.createFormElement=function(){return{type:void 0}},e.createFormTabs=function(){return{}},e.createFormConfiguration=function(){return{properties:{}}},e.createFormGridConfiguration=function(){return{rowSchema:{},rows:[]}}}(Forms||(Forms={})),function(p){p._module.directive("hawtioFormGrid",["$templateCache","$interpolate","$compile",function(c,d,u){return{restrict:"A",replace:!0,scope:{configuration:"=hawtioFormGrid"},templateUrl:p.templateUrl+"formGrid.html",link:function(o,a,e){function s(){var n=[];angular.isDefined(o.configuration.rowSchema.columnOrder)&&o.configuration.rowSchema.columnOrder.forEach(function(e){var t=Core.pathGet(o.configuration.rowSchema.properties,[e]);Core.pathSet(t,["key"],e),n.push(t)});return angular.forEach(o.configuration.rowSchema.properties,function(e,t){n.some(function(e){return e.key===t})||(e.key=t,n.push(e))}),n}function n(e){var r=function(){var e=a.find("thead");return e.empty(),e.append(c.get("rowTemplate.html")).find("tr")}();e.forEach(function(e){var t=e.label||e.key;o.configuration.rowSchema.disableHumanizeLabel||(t=_.startCase(t));var n=e.headerTemplate||c.get("headerCellTemplate.html"),i=d(n);r.append(i({label:t}))}),r.append(c.get("emptyHeaderCellTemplate.html"))}function l(n,i){o.configuration.rows.forEach(function(e,o){var a=angular.element(c.get("rowTemplate.html"));n.forEach(function(e){var t=p.mapType(e.type);if("number"===t&&"input-attributes"in e){var n=e.template||c.get("cellNumberTemplate.html"),i=d(n),r={row:"configuration.rows["+o+"]",type:t,key:e.key,min:Core.pathGet(e,["input-attributes","min"]),max:Core.pathGet(e,["input-attributes","max"])};a.append(i(r))}else{n=e.template||c.get("cellTemplate.html"),i=d(n);a.append(i({row:"configuration.rows["+o+"]",type:t,key:e.key}))}});var t=d(c.get("deleteRowTemplate.html"));a.append(t({index:o})),i.append(a)})}o.removeThing=function(e){o.configuration.rows.slice(e,e+1)},o.addThing=function(){o.configuration.rows.push(o.configuration.onAdd())},o.getHeading=function(){return Core.isBlank(o.configuration.rowName)?"Items":_.startCase(o.configuration.rowName+"s")},o.$watch("configuration.noDataTemplate",function(e,t){var n=o.configuration.noDataTemplate||c.get("heroUnitTemplate.html");a.find(".nodata").html(u(n)(o))}),o.$watch("configuration.rowSchema",function(e,t){e!==t&&n(s())},!0),o.$watchCollection("configuration.rows",function(e,t){if(e!==t){var n=function(){var e=a.find("tbody");return e.empty(),e}(),i=s(),r=angular.element("<div></div>");l(i,r),n.append(u(r.children())(o))}})}}}])}(Forms||(Forms={})),function(i){i._module.directive("hawtioFormMap",[function(){return{restrict:"A",replace:!0,templateUrl:UrlHelpers.join(i.templateUrl,"formMapDirective.html"),scope:{description:"@",entity:"=",mode:"=",data:"=",name:"@"},link:function(n,e,t){n.deleteKey=function(t){try{delete n.entity[n.name][""+t]}catch(e){i.log.debug("failed to delete key: ",t," from entity: ",n.entity)}},n.addItem=function(e){n.entity||(n.entity={}),Core.pathSet(n.entity,[n.name,e.key],e.value),n.showForm=!1},n.$watch("showForm",function(e){e&&(n.newItem={key:void 0,value:void 0})})}}}])}(Forms||(Forms={})),function(e){var n,t,i,r;(t=n=e.FormMode||(e.FormMode={}))[t.VIEW=0]="VIEW",t[t.EDIT=1]="EDIT",(r=i=e.FormStyle||(e.FormStyle={}))[r.STANDARD=0]="STANDARD",r[r.INLINE=1]="INLINE",r[r.HORIZONTAL=2]="HORIZONTAL",r[r.UNWRAPPED=3]="UNWRAPPED",e.createFormConfiguration=function(e){var t=e||{properties:{}};return _.defaults(t,{style:i.HORIZONTAL,mode:n.EDIT}),t}}(HawtioForms||(HawtioForms={})),function(l){l.pluginName="hawtio-forms2",l.templatePath="plugins/components/forms2/html",l.log=Logger.get(l.pluginName);var c=function(){function e(){}return Object.defineProperty(e,"FORM_STANDARD",{get:function(){return UrlHelpers.join(l.templatePath,"form-standard.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"FORM_INLINE",{get:function(){return UrlHelpers.join(l.templatePath,"form-inline.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"FORM_UNWRAPPED",{get:function(){return UrlHelpers.join(l.templatePath,"form-unwrapped.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"FORM_HORIZONTAL",{get:function(){return UrlHelpers.join(l.templatePath,"form-horizontal.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"STANDARD_HORIZONTAL_INPUT",{get:function(){return UrlHelpers.join(l.templatePath,"standard-horizontal-input.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"STANDARD_INPUT",{get:function(){return UrlHelpers.join(l.templatePath,"standard-input.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"STATIC_HORIZONTAL_TEXT",{get:function(){return UrlHelpers.join(l.templatePath,"static-horizontal-text.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"STATIC_TEXT",{get:function(){return UrlHelpers.join(l.templatePath,"static-text.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"SELECT_HORIZONTAL",{get:function(){return UrlHelpers.join(l.templatePath,"select-horizontal.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"SELECT",{get:function(){return UrlHelpers.join(l.templatePath,"select.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"OPTION_ARRAY",{get:function(){return UrlHelpers.join(l.templatePath,"optionArray.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"OPTION_OBJECT",{get:function(){return UrlHelpers.join(l.templatePath,"optionObject.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"OPTION_CONFIG_OBJECT",{get:function(){return UrlHelpers.join(l.templatePath,"optionConfigObject.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"CHECKBOX_HORIZONTAL",{get:function(){return UrlHelpers.join(l.templatePath,"checkbox-horizontal.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"CHECKBOX",{get:function(){return UrlHelpers.join(l.templatePath,"checkbox.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"OBJECT",{get:function(){return UrlHelpers.join(l.templatePath,"object.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"ARRAY",{get:function(){return UrlHelpers.join(l.templatePath,"array.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"MAP",{get:function(){return UrlHelpers.join(l.templatePath,"map.html")},enumerable:!0,configurable:!0}),Object.defineProperty(e,"HIDDEN",{get:function(){return UrlHelpers.join(l.templatePath,"hidden.html")},enumerable:!0,configurable:!0}),e}();function d(e,t,n){t in e.postInterpolateActions||(e.postInterpolateActions[t]=[]),e.postInterpolateActions[t].push(n)}function s(e,t,n,i){var r=void 0;switch(t.style){case l.FormStyle.HORIZONTAL:r=e.$templateCache.get(c.STANDARD_HORIZONTAL_INPUT);break;default:r=e.$templateCache.get(c.STANDARD_INPUT)}return u(e,t,n,r,i)}function u(e,t,n,i,r){var o=angular.element(i);"tooltip"in n&&o.attr({title:n.tooltip}),"control-group-attributes"in n&&o.attr(n["control-group-attributes"]),"label-attributes"in n&&o.find("label").attr(n["label-attributes"]);var a=o.find("input");return r&&a.attr({type:r}),"input-attributes"in n&&a.attr(n["input-attributes"]),"selectors"in n&&_.forIn(n.selectors,function(e,t){l.log.debug("Found selector: ",t," for control: ",n," applying"),e("el"===t?o:$(o.find(t)))}),o.prop("outerHTML")}function p(e,t){switch(t.style){case l.FormStyle.HORIZONTAL:return e.$templateCache.get(c.STATIC_HORIZONTAL_TEXT);default:return e.$templateCache.get(c.STATIC_TEXT)}}function h(a,e,t,s){var n=void 0;switch(e.style){case l.FormStyle.HORIZONTAL:n=a.$templateCache.get(c.SELECT_HORIZONTAL);break;default:n=a.$templateCache.get(c.SELECT)}return d(a,t,function(e){var n=e.find("select"),t=_.isArray(s.enum),i=_.isFunction(s.enum);if(t)if(_.isObject(_.first(s.enum))){var r=a.$templateCache.get(c.OPTION_CONFIG_OBJECT),o=a.$interpolate(r);_.forEach(s.enum,function(e){var t=angular.element(o(e));e.attributes&&t.attr(e.attributes),n.append(t)})}else{r=a.$templateCache.get(c.OPTION_ARRAY),o=a.$interpolate(r);_.forEach(s.enum,function(e){n.append(o({value:e}))})}else if(i)a.scope.enum=s.enum,n.attr("ng-options","item.value as item.label for item in enum()"),n.removeAttr("hawtio-combobox");else{r=a.$templateCache.get(c.OPTION_OBJECT),o=a.$interpolate(r);_.forIn(s.enum,function(e,t){n.append(o({key:t,value:e}))})}}),u(0,0,s,n)}function g(e,t,n){switch(t.style){case l.FormStyle.HORIZONTAL:return e.$templateCache.get(c.CHECKBOX_HORIZONTAL);default:return e.$templateCache.get(c.CHECKBOX)}}function m(i,r,o,a){var s="config.properties."+o;return"javaType"in a&&(s=a.javaType),d(i,o,function(e){var t={"hawtio-form-2":s,entity:"entity."+o,"no-wrap":"true",mode:r.mode,style:r.style,label:a.label||i.maybeHumanize(o)},n={};"control-group-attributes"in a&&_.forIn(a["control-group-attributes"],function(e,t){n[t]=e}),e.attr(n),e.find(".inline-object").attr(t)}),i.$templateCache.get(c.OBJECT)}function f(e,t,n,i){return d(e,n,function(e){e.find(".inline-map").attr({"hawtio-forms-2-map":"config.properties."+n,entity:"entity."+n,mode:t.mode})}),e.$templateCache.get(c.MAP)}function b(e,t,n,i){return d(e,n,function(e){e.find(".inline-array").attr({"hawtio-forms-2-array":"config.properties."+n,entity:"entity."+n,mode:t.mode})}),e.$templateCache.get(c.ARRAY)}function r(e,t,n,i){var r=e.mappings.getMapping(i.type);if("enum"in i&&(r="select"),"properties"in i&&(r="object"),i.hidden&&(r="hidden"),"object"===i.type&&i.javaType&&_.startsWith(i.javaType,"java.util.Map")&&(r="map"),r)switch(r){case"array":return b(e,t,n);case"number":return s(e,t,i,"number");case"password":return s(e,t,i,"password");case"text":return s(e,t,i,"text");case"static":return p(e,t);case"object":return m(e,t,n,i);case"map":return f(e,t,n);case"hidden":return i.hidden=!0,u(0,0,i,e.$templateCache.get(c.HIDDEN));case"select":return h(e,t,n,i);case"checkbox":return g(e,t)}var o=i.javaType||i.type,a=e.schemas.getSchema(o);if(a)return m(e,t,n,_.extend(i,a))}l.Constants=c,l.addPostInterpolateAction=d,l.addPreCompileAction=function(e,t,n){t in e.preCompileActions||(e.preCompileActions[t]=[]),e.preCompileActions[t].push(n)},l.getFormMain=function(e,t){switch(t.style){case l.FormStyle.STANDARD:return e.$templateCache.get(c.FORM_STANDARD);case l.FormStyle.INLINE:return e.$templateCache.get(c.FORM_INLINE);case l.FormStyle.UNWRAPPED:return e.$templateCache.get(c.FORM_UNWRAPPED);default:return e.$templateCache.get(c.FORM_HORIZONTAL)}},l.getStandardTemplate=s,l.applyElementConfig=u,l.getStaticTextTemplate=p,l.setSelectOptions=function(e,t,n){},l.getSelectTemplate=h,l.getCheckboxTemplate=g,l.getObjectTemplate=m,l.getMapTemplate=f,l.getArrayTemplate=b,l.lookupTemplate=r,l.getTemplate=function(e,t,n,i){return"formTemplate"in i?i.formTemplate:r(e,t,n,i)},l.interpolateTemplate=function(e,t,n,i,r,o){if(i.formTemplate)return i.formTemplate;var a=e.$interpolate(r)({maybeHumanize:e.maybeHumanize,control:i,name:n,model:o});if(e.postInterpolateActions[n]){var s=angular.element(a);e.postInterpolateActions[n].forEach(function(e){e(s)}),a=s.prop("outerHTML")}return a},l.createMaybeHumanize=function(n){return function(e){var t=n.config;return!t||t&&!t.disableHumanizeLabel?Core.humanizeValue(e):e}},l.initConfig=function(e,t,n){void 0===n&&(n=!0);var i=t;if(!i&&n){var r=e.attrs[e.directiveName];r&&((i=e.schemas.cloneSchema(r))||(i={}))}return i&&("label"in e.attrs&&(i.label=e.attrs.label),"mode"in e.attrs&&(i.mode=Number(e.attrs.mode)),"style"in e.attrs&&(i.style=Number(e.attrs.style)),"noWrap"in e.attrs&&e.attrs.noWrap&&(i.style=l.FormStyle.UNWRAPPED)),l.createFormConfiguration(i)}}(HawtioForms||(HawtioForms={})),function(e){e._module=angular.module(e.pluginName,[]),e._module.run(function(){e.log.debug("loaded")}),hawtioPluginLoader.addModule(e.pluginName)}(HawtioForms||(HawtioForms={})),(HawtioForms||(HawtioForms={}))._module.directive("hawtioCombobox",[function(){return{restrict:"A",link:function(e,t,n){}}}]),function(y){var w="hawtioForms2Array";function C(c,t,e,n){_.forEach(e,function(a,s){var l=function(e){return angular.element(e.$templateCache.get("arrayRowTemplate.html"))}(c);t.properties.$items?l.append("<td>"+a+"</td>"):_.forIn(t.properties,function(i,r){var e={style:y.FormStyle.UNWRAPPED,mode:y.FormMode.VIEW,properties:{}};e.properties[r]=i;var t=y.getTemplate(c,e,r,i);if(t){var n=angular.element(t);n.attr({class:""}),n.find("label").text(""),["input","select"].forEach(function(e){n.find(e).attr({"ng-disabled":"true",style:"width: auto"}).removeClass("form-control").addClass("table-control")}),i.enum&&y.addPostInterpolateAction(c,r,function(e){var t=e.find("select"),n="config.columnSchema.properties['"+r+"'].enum";y.setSelectOptions(_.isArray(i.enum),n,t)}),("properties"in i||"javaType"in i)&&y.addPostInterpolateAction(c,r,function(e){e.find("h4").remove(),e.find(".inline-object").attr({entity:"entity["+s+"]."+r,label:!1})}),t=y.interpolateTemplate(c,e,r,i,n.prop("outerHTML"),"entity["+s+"]."+r);var o=angular.element("<td></td>");o.append(t),l.append(o)}else l.append("<td>"+a[r]+"</td>")});var e=angular.element(c.$templateCache.get("deleteRow.html"));e.find(".deleteRow").attr({"ng-click":"deleteRow("+s+")"}),e.find(".editRow").attr({"ng-click":"editRow("+s+")"}),l.append(e),n.append(l)})}y._module.directive(w,["$compile","$templateCache","$interpolate","SchemaRegistry","ControlMappingRegistry","$uibModal",function(h,g,m,f,b,v){return{restrict:"A",replace:!0,templateUrl:UrlHelpers.join(y.templatePath,"forms2Array.html"),scope:{config:"="+w,entity:"=?"},link:function(d,u,p){d.$watch("config",function(e){var r={postInterpolateActions:{},maybeHumanize:void 0,config:void 0,element:u,attrs:p,mappings:b,schemas:f,$templateCache:g,$interpolate:m,$compile:h,directiveName:w},t=y.initConfig(r,_.cloneDeep(e),!1);if(r.config=t,r.maybeHumanize=y.createMaybeHumanize(r),d.entity||(d.entity=[]),t&&t.items){var n=t.items.type||t.items.javaType,i=d.entity,o={properties:{}};if(b.hasMapping(n)){var a={};_.merge(a,t,{type:b.getMapping(n)}),"items"in a&&delete a.items,a.label||(a.label="Entries"),o.properties.$items=a}else o=f.getSchema(n);var s=angular.element(g.get("table.html")),l=(function(i,e,t){var r=function(e,t){var n=t.find("thead");return n.empty(),n.append(e.$templateCache.get("arrayRowTemplate.html")).find("tr")}(i,e);_.forIn(t.properties,function(e,t){var n=i.$interpolate(e.headerTemplate||i.$templateCache.get("header.html"));r.append(n({control:e,name:i.maybeHumanize(t)}))}),r.append(i.$templateCache.get("newItemHeader.html"))}(r,s,o),d.$new());t.columnSchema=o,l.config=t,l.entity=i,l.deleteRow=function(n){v.open({templateUrl:UrlHelpers.join(y.templatePath,"arrayItemModal.html"),controller:["$scope","$uibModalInstance",function(e,t){e.schema=c(o),e.schema.mode=y.FormMode.VIEW,e.header="Delete Entry?",e.description="<p>Are you sure you want to delete the following entry?</p><p><strong>This operation cannot be undone!</strong></p>",o.properties.$items?e.newEntity={$items:i[n]}:e.newEntity=_.clone(i[n]),e.ok=function(){t.close(),i.splice(n,1)},e.cancel=function(){t.dismiss()}}]})},l.editRow=function(n){v.open({templateUrl:UrlHelpers.join(y.templatePath,"arrayItemModal.html"),controller:["$scope","$uibModalInstance",function(e,t){e.schema=c(o),e.header="Edit Entry",o.properties.$items?e.newEntity={$items:i[n]}:e.newEntity=_.clone(i[n]),e.ok=function(){t.close(),"$items"in e.newEntity?i[n]=e.newEntity.$items:i[n]=e.newEntity},e.cancel=function(){t.dismiss()}}]})},l.createNewRow=function(){v.open({templateUrl:UrlHelpers.join(y.templatePath,"arrayItemModal.html"),controller:["$scope","$uibModalInstance",function(e,t){e.schema=c(o),e.newEntity=void 0,e.header="Add New Entry",e.ok=function(){t.close(),"$items"in e.newEntity?i.push(e.newEntity.$items):i.push(e.newEntity)},e.cancel=function(){t.dismiss()}}]})},l.watch=l.$watchCollection("entity",function(e,t){d.entity=e;var n=function(e,t){var n=t.find("tbody");return n.empty(),n}(0,s),i=angular.element("<div></div>");C(r,o,e,i),n.append(h(i.children())(l))}),u.append(h(s)(l))}function c(e){var t=_.cloneDeep(e);return t.style=y.FormStyle.STANDARD,"$items"in t.properties&&(t.properties.$items["label-attributes"]={style:"display: none"}),t}},!0)}}}])}(HawtioForms||(HawtioForms={})),function(S){var x="hawtioForm2";S._module.directive(x,["$compile","$templateCache","$interpolate","SchemaRegistry","ControlMappingRegistry",function(v,y,w,C,k){return{restrict:"A",replace:!0,templateUrl:UrlHelpers.join(S.templatePath,"forms2Directive.html"),scope:{config:"="+x,entity:"=?",name:"@?"},link:function(g,m,f){var n="",b=0;g.$watch("config",function(e){var t=angular.toJson(e,!0);t!==n&&(g.diff=diffString(n||"",t||""),n=t,function(a){b+=1,g.configChanges=b,m.empty();var s={postInterpolateActions:{},preCompileActions:{},maybeHumanize:void 0,config:void 0,scope:void 0,element:m,attrs:f,mappings:k,schemas:C,$templateCache:y,$interpolate:w,$compile:v,directiveName:x};a=S.initConfig(s,_.cloneDeep(a)),s.config=a,s.maybeHumanize=S.createMaybeHumanize(s),g.entity||(g.entity={});var l=g.entity;if(!("properties"in a))return;var r=s.scope=g.$new();r.config=a,r.name=g.name||"hawtio-form",r.maybeHumanize=s.maybeHumanize;var o={},c={},e=angular.element(S.getFormMain(s,a));e.find("form").attr({name:a.id||"form"});var n=e.find("fieldset");0===n.length&&(n=e);var i=!1;if("wizard"in a&&a.wizard.pages){var t=a.wizard,d=y.get("wizardParent.html");n.append(d),r.pageIds=[],n=n.find(".wizardParent"),r.onFinish=function(){S.log.warn("No onFinish() function supplied to form wizard")},r.buttons={next:"Next",back:"Back",finish:"Finish"},r.isValid=function(){return S.log.debug("scope: ",g),!0},r.isDisabled=function(e){return e.$invalid},r.isBackDisabled=function(e){return!1},_.forIn(t,function(e,t){r[t]=e}),_.forIn(t.pages,function(n,i){"title"in n||(n.title=i),n.el=angular.element(y.get("wizardPage.html")),n.el.attr({"ng-switch-when":i}),n.el.find("h3").text(i),"template"in n&&n.el.append(v(n.template)(g)),n.parent=n.el.find(".wizardPageBody"),n.parent.attr({"ng-form":_.camelCase(i)}),S.addPreCompileAction(s,_.camelCase(i),function(){var e=angular.element(y.get("wizardButtons.html")),t={"ng-disabled":"isDisabled("+_.camelCase(i)+")"};e.find(".next").attr(t),e.find(".finish").attr(t),e.find(".back").attr({"ng-disabled":"isBackDisabled("+_.camelCase(i)+")"}),n.parent.append(e)}),o[i]=n,r.pageIds.push(i)}),r.currentPageIndex=0,r.gotoPage=function(e,t){if(e<0||e>r.pageIds.length)e<0&&r.onCancel&&r.onCancel();else{if(r.onChange){var n=r.onChange(t,e,r.pageIds);if(n)return void(r.currentPageIndex=n)}r.currentPageIndex=e}},r.getCurrentPageId=function(){return r.pageIds[r.currentPageIndex]},r.atFront=function(){return 0===r.currentPageIndex&&!r.onCancel},r.atBack=function(){return r.currentPageIndex===r.pageIds.length-1},r.next=function(){r.gotoPage(r.currentPageIndex+1,r.currentPageIndex)},r.back=function(){r.gotoPage(r.currentPageIndex-1,r.currentPageIndex)}}else if("tabs"in a){n.append(y.get("tabElement.html")),n=n.find(".tabbable");var u=a.tabs;_.forIn(u,function(e,t){var n=angular.element(y.get("tabPage.html"));n.attr({title:t});var i={controls:e,el:n,parent:n};o[t]=i})}else i=(o.$main="controls"in a?{controls:a.controls,el:e,parent:n}:{controls:["*"],el:e,parent:n},!0);_.forIn(a.properties,function(e,t){var n=Core.pathGet(e,["typeaheadData"]);n&&!Core.pathGet(e,["input-attributes","typeahead"])&&Core.pathSet(e,["input-attributes","typeahead"],"item for item in config.properties."+t+".typeaheadData");var i=Core.pathGet(e,["input-attributes","value"]);i&&(l[t]=i);var r=Core.pathGet(e,["default"]);r&&(l[t]=r),"checkbox"===k.getMapping(e.type)&&(l[t]=Core.parseBooleanValue(r));var o=S.getTemplate(s,a,t,e);o&&(o=S.interpolateTemplate(s,a,t,e,o,"entity."+t),c[t]=o)});var p=_.keys(o),h=void 0;p.forEach(function(t){var n=o[t];n.controls&&n.controls.forEach(function(e){"*"===e?i?_.forIn(c,function(e,t){_.some(n.controls,function(e){return e===t})||(n.parent.append(e),delete c[t])}):h=t:e in c?(n.parent.append(c[e]),delete c[e]):S.log.debug("Control with name ",e," not found")})}),0<_.keys(c).length&&(h||(h=_.last(p)),_.forIn(c,function(e,t){o[h].parent.append(e),delete c[t]}));_.forIn(o,function(e,t){"$main"!==t&&n.append(e.el)}),_.forIn(s.preCompileActions,function(e,t){_.forEach(e,function(e){e()})}),a.debug&&(e.append("<div><h4>Config Update Count</h4><pre>{{configChanges}}</pre></div>"),e.append("<div><h4>Entity</h4><pre>{{entity | json}}</pre></div>"),e.append("<div><h4>Config</h4><pre>{{config | json}}</pre></div>"),e.append('<div><h4>Last Change</h4><pre ng-bind-html="diff"></pre></div>'));m.append(v(e)(r)),r.$emit("hawtio-form2-form",{name:r.name,form:r.$eval(r.name)})}(e))},!0)}}}])}(HawtioForms||(HawtioForms={})),function(y){var w="hawtioForms2Map";y._module.directive(w,["$compile","$templateCache","$interpolate","SchemaRegistry","ControlMappingRegistry","$uibModal",function(p,h,g,m,f,b){function v(e,t,n){var i={properties:{},control:n};return"items"in n?i.properties[e]={noLabel:!0,type:t,items:{type:n.items.type}}:f.hasMapping(t)?i.properties[e]={noLabel:!0,type:f.getMapping(t)}:i=m.getSchema(t),angular.isObject(i)&&(i.control=n),i}return{restrict:"A",replace:!0,templateUrl:UrlHelpers.join(y.templatePath,"forms2Map.html"),scope:{config:"="+w,entity:"=?"},link:function(u,n,i){u.$watch("config",function(e){var r={postInterpolateActions:{},maybeHumanize:void 0,config:void 0,s:void 0,element:n,attrs:i,mappings:f,schemas:m,$templateCache:h,$interpolate:g,$compile:p,directiveName:w},t=y.initConfig(r,_.cloneDeep(e),!1);if(r.config=t,r.maybeHumanize=y.createMaybeHumanize(r),u.entity||(u.entity={}),t&&t.items)if(t.items.key)if(t.items.value){var o=u.entity,a=u.$new();r.s=a;var s=v("key",t.items.key.type,t.items.key),l=v("value",t.items.value.type,t.items.value),c=angular.element(h.get("table.html"));c.find("tbody");a.config=t,a.entity=o,a.keySchema=_.cloneDeep(s),a.valueSchema=_.cloneDeep(l),a.keySchema&&(a.keySchema.mode=y.FormMode.VIEW,a.keySchema.style=y.FormStyle.UNWRAPPED,a.keySchema.hideLegend=!0),a.valueSchema&&(a.valueSchema.mode=y.FormMode.VIEW,a.valueSchema.style=y.FormStyle.UNWRAPPED,a.valueSchema.hideLegend=!0),a.editRow=function(e){y.log.debug("Edit row: ",e)},a.deleteRow=function(e){y.log.debug("Delete row: ",e)},a.createRow=function(){y.log.debug("create row"),b.open({templateUrl:"mapItemModal.html",controller:["$scope","$uibModalInstance",function(n,i){n.header="Create Entry",n.description="<p>Add a new entry to the map by filling in the details for the key and value</p>",n.keySchema=d(s),n.valueSchema=d(l),n.ok=function(){i.close();var e=n.newKeyEntity.key,t=n.newValueEntity;(l.control.items||f.hasMapping(l.control.type))&&(t=n.newValueEntity.value),y.log.debug("New key: ",e),y.log.debug("New value: ",t),o[e]=t},n.cancel=function(){i.dismiss()}}]})},a.$watch("entity",function(e,t){u.entity=e;var n=function(e,t){var n=t.find("tbody");return n.empty(),n}(0,c),i=angular.element("<div></div>");!function(i,e,t,r,o){var a=i.s;a.keys={},a.values={},_.forIn(e,function(e,t){a.keys[t]={key:t},r.control.items||f.hasMapping(r.control.type)?a.values[t]={value:e}:a.values[t]=e;var n=i.$templateCache.get("mapRowTemplate.html");n=g(n)({key:t}),o.append(n)})}(r,e,0,l,i),n.append(p(i.children())(a))},!0),n.append(p(c)(a))}else y.log.debug("Invalid map config, no 'value' attribute configured in 'items'");else y.log.debug("Invalid map config, no 'key' attribute configured in 'items'");else y.log.debug("Invalid map config, no 'items' configured");function d(e){var t=_.cloneDeep(e);return t.style=y.FormStyle.STANDARD,_.forIn(t.properties,function(e,t){"noLabel"in e&&delete e.noLabel}),y.log.debug("Schema: ",e),t}})}}}])}(HawtioForms||(HawtioForms={})),(HawtioForms||(HawtioForms={}))._module.factory("SchemaRegistry",["ControlMappingRegistry",function(t){var r={},o={};function i(n,i){r[n]=i,_.forIn(o,function(e,t){e(n,i)})}function a(e){return t.getMapping(e)===e?{type:"object",javaType:e}:{type:e}}var s={addListener:function(e,n){e&&n&&(_.forIn(r,function(e,t){n(t,e)}),o[e]=n)},removeListener:function(e){e in o&&delete o[e]},addSchema:function(e,t){var n=_.cloneDeep(t);_.forIn(n.properties,function(e,t){if(_.startsWith(e.javaType,"java.util.Map")){var n=e.javaType.replace("java.util.Map<","").replace(">","").split(",");if(2!==n.length)return;e.type="map",e.items={key:a(n[0]),value:a(n[1])}}}),i(e,n),t.javaType&&i(t.javaType,n),t.definitions&&_.forIn(t.definitions,function(e,t){s.addSchema(t,e)})},getSchema:function(e){return r[e]},cloneSchema:function(e){return _.cloneDeep(r[e])},removeSchema:function(e){var t=void 0;return e in r&&(t=r[e],delete r[e]),t},iterate:function(e){_.forIn(r,e)}};return s}]),(HawtioForms||(HawtioForms={}))._module.factory("ControlMappingRegistry",[function(){var n={},t={hasMapping:function(e){return!!e&&e.toLowerCase()in n},addMapping:function(e,t){n[e.toLowerCase()]=t},getMapping:function(e){if(e){var t=n[e.toLowerCase()];return t||e}},removeMapping:function(e){var t=void 0;return e.toLowerCase()in n&&(t=n[e.toLowerCase()],delete n[e.toLowerCase()]),t},iterate:function(e){_.forIn(n,e)}};return _.forEach(["int","number","integer","long","short","java.lang.integer","java.lang.long","float","double","java.lang.float","java.lang.double"],function(e){return t.addMapping(e,"number")}),_.forEach(["boolean","bool","java.lang.boolean"],function(e){return t.addMapping(e,"checkbox")}),t.addMapping("password","password"),t.addMapping("hidden","hidden"),t.addMapping("static","static"),t.addMapping("enum","select"),t.addMapping("choice","radio-group"),t.addMapping("multiple","multiple-select"),_.forEach(["string","text","java.lang.string"],function(e){return t.addMapping(e,"text")}),t}]),function(e){var t="hawtio-toastr";angular.module(t,[]);hawtioPluginLoader.addModule(t)}(Toastr||(Toastr={})),function(a){var s,l=null;a.notification=function(e,t,n){var i='\n      <div class="toast-pf alert alert-'+e+' alert-dismissable">\n        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">\n          <span class="pficon pficon-close"></span>\n        </button>\n        <span class="pficon pficon-'+function(e){switch(e){case"success":return"ok";case"warning":return"warning-triangle-o";case"danger":return"error-circle-o";default:return"info"}}(e)+'"></span>\n        '+a.escapeHtml(t)+"\n      </div>\n    ",r=document.createRange().createContextualFragment(i).querySelector("div"),o=document.querySelector("body");l&&l.parentNode&&(clearTimeout(s),o.removeChild(l)),l=o.appendChild(r),(n||"success"===e||"info"===e)&&(s=window.setTimeout(function(){r.parentNode&&o.removeChild(r)},n||8e3))},a.clearNotifications=function(){}}(Core||(Core={})),function(e){e.pluginName="hawtio-ui",e.log=Logger.get(e.pluginName),e.templatePath="plugins/components/ui/html/"}(UI||(UI={})),function(e){e._module=angular.module(e.pluginName,[]),e._module.factory("UI",function(){return e}),e._module.factory("marked",function(){return marked.setOptions({gfm:!0,tables:!0,breaks:!1,pedantic:!0,sanitize:!1,smartLists:!0,langPrefix:"language-"}),marked}),e._module.directive("compile",["$compile",function(r){return function(t,n,i){t.$watch(function(e){return e.$eval(i.compile)},function(e){n.html(e),r(n.contents())(t)})}}]),e._module.run([function(){e.log.debug("loaded")}]),hawtioPluginLoader.addModule(e.pluginName)}(UI||(UI={})),function(c){c._module.directive("hawtioAutoDropdown",["$timeout",function(i){return{restrict:"A",link:function(e,l,t){function n(e){var t=l.get(0);if(!(e&&e.relatedNode!==t&&e.type&&e&&"resize"!==e.type)){var n=$(l.find(".dropdown.overflow")),i=$(n.find("ul.dropdown-menu")),r=0;try{n.addClass("pull-right"),n.outerWidth()-n.innerWidth(),r=n.position().left-l.position().left-50,n.removeClass("pull-right")}catch(e){c.log.debug("caught "+e)}i.children().insertBefore(n);var o=[];l.children(":not(.overflow):not(:hidden)").each(function(){var e=$(this);(r-=e.outerWidth(!0))<0&&o.push(e)});for(var a=o.length-1;-1<a;a--)o[a].prependTo(i);if(0<i.children().length&&n.css("visibility","visible"),130<r){var s=!1;i.children(":not(.overflow)").filter(function(){return"none"!==$(this).css("display")}).each(function(){if(!s){var e=$(this);r>e.outerWidth()?(r-=e.outerWidth(),e.insertBefore(n)):s=!0}})}0===i.children().length&&n.css("visibility","hidden")}}$(window).resize(_.throttle(n,100)),e.$on("$routeChangeSuccess",function(){return i(n,0,!1)}),i(n,0,!1)}}}])}(UI||(UI={})),(UI||(UI={}))._module.directive("hawtioCardBg",["$timeout",function(i){return{restrict:"AC",link:function(e,t,n){i(function(){var e=$("body");e.addClass("cards-pf"),t.on("$destroy",function(){e.removeClass("cards-pf")})},10)}}}]),function(e){function t(r){return{restrict:"A",scope:{hawtioClipboard:"@"},link:function(e,t,n){var i=!1;t.attr("data-clipboard-target",e.hawtioClipboard),t.tooltip({placement:"bottom",title:"Copy to clipboard"}),new ClipboardJS(t.get(0)).on("success",function(){t.tooltip("destroy"),r(function(){t.tooltip({placement:"bottom",title:"Copied!"}),t.tooltip("show"),i=!0},200)}),t.on("mouseleave",function(){i&&(t.tooltip("destroy"),r(function(){t.tooltip({placement:"bottom",title:"Copy to clipboard"}),i=!1},200))})}}}t.$inject=["$timeout"],e._module.directive("hawtioClipboard",t)}(UI||(UI={})),function(e){var a=Logger.get("hawtio-ui-confirm-dialog");e._module.directive("hawtioConfirmDialog",function(){return new e.ConfirmDialog});var t=function(){this.restrict="A",this.replace=!0,this.transclude=!0,this.templateUrl=e.templatePath+"confirmDialog.html",this.scope={show:"=hawtioConfirmDialog",title:"@",okButtonText:"@",showOkButton:"@",cancelButtonText:"@",onCancel:"&?",onOk:"&?",onClose:"&?",size:"@",optionalSize:"@"},this.controller=["$scope","$element","$attrs","$transclude","$compile",function(t,e,n,i,r){function o(){setTimeout(function(){var e=$("div.modal-backdrop");e&&e.length&&(a.debug("Removing the backdrop div!",e),e.remove())},200)}t.clone=null,t.size=t.size||t.optionalSize,"sm"!==t.size&&"lg"!==t.size||(t.sizeClass="modal-"+t.size),i(function(e){t.clone=$(e).filter(".dialog-body")}),t.$watch("show",function(){t.show&&setTimeout(function(){t.body=$(".hawtio-ui-confirm-dialog .modal-body"),t.body.html(r(t.clone.html())(t.$parent)),Core.$apply(t)},50)}),n.$observe("okButtonText",function(e){angular.isDefined(e)||(t.okButtonText="OK")}),n.$observe("cancelButtonText",function(e){angular.isDefined(e)||(t.cancelButtonText="Cancel")}),n.$observe("title",function(e){angular.isDefined(e)||(t.title="Are you sure?")}),t.cancel=function(){t.show=!1,t.$parent.$eval(t.onCancel),o()},t.submit=function(){t.show=!1,t.$parent.$eval(t.onOk),o()},t.close=function(){t.$parent.$eval(t.onClose),o()}}]};e.ConfirmDialog=t}(UI||(UI={})),function(n){n._module.controller("UI.DeveloperPageController",["$scope","$http",function(e,t){e.getContents=function(r,o){var e=UrlHelpers.join(n.templatePath,"test",r);t({method:"GET",url:e}).success(function(e,t,n,i){o(e)}).error(function(e,t,n,i){o("Failed to fetch "+r+": "+e)})}}])}(UI||(UI={})),function(t){var e=function(){function e(){this.show=!1,this.options={backdropFade:!0,dialogFade:!0}}return e.prototype.open=function(){this.show=!0},e.prototype.close=function(){this.show=!1,this.removeBackdropFadeDiv(),setTimeout(this.removeBackdropFadeDiv,100)},e.prototype.removeBackdropFadeDiv=function(){$("div.modal-backdrop").remove()},e}();t.Dialog=e,t.multiItemConfirmActionDialog=function(e){return HawtioCore.injector.get("$dialog").dialog({resolve:{options:function(){return e}},templateUrl:UrlHelpers.join(t.templatePath,"multiItemConfirmActionDialog.html"),controller:["$scope","dialog","options",function(e,t,n){e.options=n,e.close=function(e){t.close(),n.onClose(e)},e.getName=function(e){return Core.pathGet(e,n.index.split("."))}}]})}}(UI||(UI={})),function(e){e.hawtioDrag=e._module.directive("hawtioDrag",[function(){return{replace:!1,transclude:!0,restrict:"A",template:"<span ng-transclude></span>",scope:{data:"=hawtioDrag"},link:function(t,n,e){n.attr({draggable:"true"});var i=n[0];i.draggable=!0,i.addEventListener("dragstart",function(e){return e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("data",t.data),n.addClass("drag-started"),!1},!1),i.addEventListener("dragend",function(e){n.removeClass("drag-started")},!1)}}}]),e.hawtioDrop=e._module.directive("hawtioDrop",[function(){return{replace:!1,transclude:!0,restrict:"A",template:"<span ng-transclude></span>",scope:{onDrop:"&?hawtioDrop",ngModel:"=",property:"@",prefix:"@"},link:function(i,r,e){var t=function(e){return e.preventDefault&&e.preventDefault(),r.addClass("drag-over"),!1},n=r[0];n.addEventListener("dragenter",t,!1),n.addEventListener("dragover",t,!1),n.addEventListener("dragleave",function(e){return r.removeClass("drag-over"),!1},!1),n.addEventListener("drop",function(e){e.stopPropagation&&e.stopPropagation(),r.removeClass("drag-over");var t=e.dataTransfer.getData("data");i.onDrop&&i.$eval(i.onDrop,{data:t,model:i.ngModel,property:i.property});var n="hawtio-drop";return Core.isBlank(i.prefix)||(n=i.prefix+"-"+n),i.$emit(n,{data:t,model:i.ngModel,property:i.property}),Core.$apply(i),!1},!1)}}}])}(UI||(UI={})),function(n){n._module.directive("editableProperty",["$parse",function(e){return new n.EditableProperty(e)}]);var e=function(t){this.$parse=t,this.restrict="E",this.scope=!0,this.templateUrl=n.templatePath+"editableProperty.html",this.require="ngModel",this.link=null,this.link=function(n,i,r,o){function a(){return"input[type="+n.inputType+"]"}n.inputType=r.type||"text",n.min=r.min,n.max=r.max,n.getText=function(){return n.text?"password"===n.inputType?StringHelpers.obfusicate(n.text):n.text:""},n.editing=!1,$(i.find(".fa fa-pencil")[0]).hide(),n.getPropertyName=function(){var e=t(r.property)(n);return e||0===e||(e=r.property),e},o.$render=function(){o.$viewValue&&(n.text=o.$viewValue[n.getPropertyName()])},n.getInputStyle=function(){if(!n.text)return{};var e=(n.text+"").length/1.2;return e<5&&(e=5),{width:e+"em"}},n.showEdit=function(){$(i.find(".fa fa-pencil")[0]).show()},n.hideEdit=function(){$(i.find(".fa fa-pencil")[0]).hide()},n.$watch("editing",function(e,t){e!==t&&e&&setTimeout(function(){$(i.find(a())).focus().select()},50)}),n.doEdit=function(){n.editing=!0},n.stopEdit=function(){$(i.find(a())[0]).val(o.$viewValue[n.getPropertyName()]),n.editing=!1},n.saveEdit=function(){var e=$(i.find(a())[0]).val(),t=o.$viewValue;t[n.getPropertyName()]=e,o.$setViewValue(t),o.$render(),n.editing=!1,n.$parent.$eval(r.onSave)}}};n.EditableProperty=e}(UI||(UI={})),function(s){s._module.directive("hawtioFileDrop",[function(){return{restrict:"A",replace:!1,link:function(e,t,n){var i=n.hawtioFileDrop,r=n.downloadUrl,o=n.mimeType||"application/octet-stream";if(!Core.isBlank(i)&&!Core.isBlank(r)){if(!_.startsWith(r,"http"))r=(new URI).path(r).toString();var a=o+":"+i+":"+r;t.attr({draggable:!0}),t[0].addEventListener("dragstart",function(e){e.dataTransfer?(s.log.debug("Drag started, event: ",e,"File details: ",a),e.dataTransfer.setData("DownloadURL",a)):s.log.debug("Drag event object doesn't contain data transfer: ",e)}),n.$observe("downloadUrl",function(e){a=o+":"+i+":"+e})}}}}])}(UI||(UI={})),function(e){e.hawtioFilter=e._module.directive("hawtioFilter",[function(){return{restrict:"E",replace:!0,transclude:!0,templateUrl:e.templatePath+"filter.html",scope:{placeholder:"@",cssClass:"@",saveAs:"@?",ngModel:"="},controller:["$scope","localStorage","$location","$element",function(t,e,n,i){if(t.getClass=function(){var e=[];return Core.isBlank(t.cssClass)||e.push(t.cssClass),Core.isBlank(t.ngModel)||e.push("has-text"),e.join(" ")},!Core.isBlank(t.saveAs)){if(t.saveAs in e){var r=e[t.saveAs];Core.isBlank(r)?t.ngModel="":t.ngModel=r}else t.ngModel="";t.$watch("ngModel",function(){e[t.saveAs]=t.ngModel})}}]}}])}(UI||(UI={})),function(e){e._module.directive("gridster",function(){return new e.GridsterDirective});var t=function(){this.restrict="A",this.replace=!0,this.controller=["$scope","$element","$attrs",function(e,t,n){}],this.link=function(e,t,n){var i=10,r=6;angular.isDefined(n.extraRows)&&(i=n.extraRows.toNumber()),angular.isDefined(n.extraCols)&&(r=n.extraCols.toNumber());var o=$('<ul style="margin: 0"></ul>'),a=(a='<style type="text/css">')+"</style>";t.append($(a)),t.append(o),e.gridster=o.gridster({widget_margins:[6,6],grid_size:[150,150],extra_rows:i,extra_cols:r}).data("gridster")}};e.GridsterDirective=t}(UI||(UI={})),function(e){e.groupBy=function(){return function(r,o){if(!r||0===r.length)return r;if(Core.isBlank(o))return r;var a="endGroup",s=void 0;return r.forEach(function(e,t){var n=e[o]!==s;if(angular.isArray(e[o]))if(void 0===s)n=!0;else{var i=e[o];i.length!==s.length?n=!0:(n=!1,i.forEach(function(t){n||_.some(s,function(e){return e===t})||(n=!0)}))}n?function(e,t,n){t.newGroup=!0,t[a]=!1,s=t[o],0<n&&(e[n-1][a]=!0)}(r,e,t):function(e){e.newGroup=!1,e[a]=!1}(e)}),r}},e._module.filter("hawtioGroupBy",e.groupBy)}(UI||(UI={})),(UI||(UI={}))._module.directive("httpSrc",["$http",function(o){return{scope:{httpSrcChanged:"="},link:function(n,i,r){function t(){n.objectURL&&URL.revokeObjectURL(n.objectURL)}n.$watch("objectURL",function(e,t){e!==t&&(i.attr("src",e),void 0!==n.httpSrcChanged&&(n.httpSrcChanged=e))}),n.$on("$destroy",t),r.$observe("httpSrc",function(e){t(),e&&0===e.indexOf("data:")?n.objectURL=e:e&&o.get(e,{responseType:"arraybuffer"}).then(function(e){var t=new Blob([e.data],{type:r.mediaType?r.mediaType:"application/octet-stream"});n.objectURL=URL.createObjectURL(t)})})}}}]),function(p){p.hawtioList=function(d,u){return{restrict:"",replace:!0,templateUrl:p.templatePath+"list.html",scope:{config:"=hawtioList"},link:function(o,e,t){o.rows=[],o.name="hawtioListScope",o.config.selectedItems||(o.config.selectedItems=[]),o.$watch("rows",function(e,t){e!==t&&(o.config.selectedItems.length=0,_.filter(o.rows,function(e){return e.selected}).forEach(function(e){o.config.selectedItems.push(e.entity)}))},!0),o.cellTemplate=d.get("cellTemplate.html"),o.rowTemplate=d.get("rowTemplate.html");var n=o.config.columnDefs,a="name",i="Name";if(n&&0<n.length){var r=_.first(n);a=r.field||a,i=r.displayName||i,r.cellTemplate&&(o.cellTemplate=r.cellTemplate)}var s=t.hawtioList,l=o.config.data;if(!Core.isBlank(s)&&!Core.isBlank(l)){o.listRoot=function(){return e.find(".hawtio-list-root")},o.getContents=function(e){var t=o.$new();t.row=e;var n=u(o.rowTemplate)(t),i=o.parentScope.$new();i.row=e,i.col={field:a};var r=u(o.cellTemplate)(i);return $(n).find(".hawtio-list-row-contents").append(r),n},o.setRows=function(e){o.rows=[];var n=o.listRoot();n.empty(),e&&e.forEach(function(t){var e={entity:t,getProperty:function(e){return angular.isDefined(e)?t[e]:null}};n.append(o.getContents(e)),o.rows.push(e)})};var c=p.findParentWith(o,s);c&&(o.parentScope=c).$watch(l,o.setRows,!0)}}}},p._module.directive("hawtioList",["$templateCache","$compile",p.hawtioList])}(UI||(UI={})),function(e){e._module.directive("hawtioObject",["$templateCache","$interpolate","$compile",function(f,o,b){return{restrict:"A",replace:!0,templateUrl:e.templatePath+"object.html",scope:{entity:"=?hawtioObject",config:"=?",path:"=?",row:"=?"},link:function(s,t,e){function h(e,t,n,i){var r=o(e);return r(n?{key:_.startCase(n),data:i,path:t}:{data:i,path:t})}function l(n,e){var i=void 0,t=Core.pathGet(e,["properties"]);return!i&&t&&angular.forEach(t,function(e,t){new RegExp(t).test(n)&&(i=!i||i.override||e.override?_.cloneDeep(e):_.merge(i,e))}),i}function c(e,t,n){var i=n;return(t=l(e,t))&&t.template&&(i=t.template),i}function d(e,t,n,i,r){if(!(r=l(t,r))||!r.hidden){var o=null;o=r&&r.template?r.template:h(e,t,n,i);var a=s.$new();return a.row=s.row,a.entityConfig=r,a.data=i,a.path=t,b(o)(a)}}function i(n,i,r){var o=!1,a=void 0;return angular.forEach(i,function(e,t){angular.isNumber(t)&&"length"in i&&(o=!0),o||_.startsWith(t,"$")||(a||(a=angular.element("<span></span>")),angular.isArray(e)?a.append(function(e,t,n,i){var r=u(e,n,i);{if(r){var o=c(e,i,f.get("arrayAttributeTableTemplate.html"));return p(o,e,t,n,r,i)}var o=c(e,i,f.get("arrayAttributeListTemplate.html"));return d(o,e,t,n,i)}}(n+"/"+t,t,e,r)):angular.isObject(e)?0===_.size(e)?a.append(g(n+"/"+t,t,"empty",r)):a.append(function(e,t,n,i){return d(c(e,i,f.get("objectAttributeTemplate.html")),e,t,n,i)}(n+"/"+t,t,e,r)):StringHelpers.isDate(e)?a.append(function(e,t,n,i){return d(c(e,i,f.get("dateAttributeTemplate.html")),e,t,n,i)}(n+"/"+t,t,new Date(e),r)):a.append(g(n+"/"+t,t,e,r)))}),a?a.children():a}function u(r,e,o){var a=void 0;if(!e)return a;var s=!1;return e.forEach(function(t){if(!s&&angular.isObject(t)){a||(a=[]);var e=_.keys(t),n=_.filter(e,function(e){return!angular.isFunction(t[e])}),i=_.filter(n,function(e){var t=l(r+"/"+e,o);return!t||!t.hidden});return _.union(a,i)}s=!(a=void 0)}),a&&(a=_.reject(a,function(e){return _.startsWith(""+e,"$")})),a}function p(e,o,t,n,a,s){var i=angular.element(h(e,o,t,n)),r=i.find("thead"),l=i.find("tbody"),c=f.get("headerTemplate.html"),d=f.get("cellTemplate.html"),u=f.get("rowTemplate.html"),p=angular.element(h(u,o,void 0,void 0));return a.forEach(function(e){p.append(h(c,o+"/"+e,e,void 0))}),r.append(p),n.forEach(function(n,i){var r=angular.element(h(u,o+"/"+i,void 0,void 0));a.forEach(function(e){var t=angular.element(h(d,o+"/"+i+"/"+e,void 0,void 0));t.append(m(o+"/"+i+"/"+e,n[e],s)),r.append(t)}),l.append(r)}),i}function g(e,t,n,i){return d(c(e,i,f.get("primitiveAttributeTemplate.html")),e,t,n,i)}function m(e,t,n){return angular.isArray(t)?function(e,t,n){var i=u(e,t,n);return i?p(c(e,n,f.get("arrayValueTableTemplate.html")),e,void 0,t,i,n):d(c(e,n,f.get("arrayValueListTemplate.html")),e,void 0,t,n)}(e,t,n):angular.isObject(t)?i(e,t,n):StringHelpers.isDate(t)?function(e,t,n){return d(c(e,n,f.get("dateValueTemplate.html")),e,void 0,t,n)}(e,Date.create(t),n):function(e,t,n){return d(c(e,n,f.get("primitiveValueTemplate.html")),e,void 0,t,n)}(e,t,n)}s.$watch("entity",function(e){e?(s.path||(s.path=""),angular.isDefined(s.row)||(s.row={entity:e}),t.html(m(s.path,e,s.config))):t.empty()},!0)}}}])}(UI||(UI={})),function(e){e.hawtioPane=function(){return{restrict:"E",replace:!0,transclude:!0,templateUrl:e.templatePath+"pane.html",scope:{position:"@",width:"@",header:"@"},controller:["$scope","$element","$attrs","$transclude","$document","$timeout","$compile","$templateCache","$window",function(i,r,e,t,n,o,a,s,l){i.moving=!1,t(function(e){if(r.find(".pane-content").append(e),!Core.isBlank(i.header)){var t=s.get(i.header),n=r.find(".pane-header-wrapper");n.html(a(t)(i)),o(function(){r.find(".pane-viewport").css("top",n.height())},500)}}),i.setViewportTop=function(){var e=r.find(".pane-header-wrapper");o(function(){r.find(".pane-viewport").css("top",e.height())},10)},i.setWidth=function(e){e<6||(r.width(e),r.parent().css(i.padding,r.width()+"px"),i.setViewportTop())},i.open=function(){i.setWidth(i.width)},i.close=function(){i.width=r.width(),i.setWidth(6)},i.$on("pane.close",i.close),i.$on("pane.open",i.open),i.toggle=function(){i.moving||(6<r.width()?i.close():i.open())},i.startMoving=function(e){e.stopPropagation(),e.preventDefault(),e.stopImmediatePropagation(),n.on("mouseup.hawtio-pane",function(e){o(function(){i.moving=!1},250),e.stopPropagation(),e.preventDefault(),e.stopImmediatePropagation(),n.off(".hawtio-pane"),Core.$apply(i)}),n.on("mousemove.hawtio-pane",function(e){i.moving=!0,e.stopPropagation(),e.preventDefault(),e.stopImmediatePropagation(),"left"===i.position?i.setWidth(e.pageX+2):i.setWidth(l.innerWidth-e.pageX+2),Core.$apply(i)})}}],link:function(e,t,n){var i=t.parent(),r="left";e.position&&(r=e.position),t.addClass(r);var o=t.width(),a="padding-"+r;e.padding=a;var s=i.css(a);i.css(a,o+"px"),e.$on("$destroy",function(){i.css(a,s)})}}},e._module.directive("hawtioPane",e.hawtioPane)}(UI||(UI={})),function(e){e._module.directive("hawtioMessagePanel",function(){return new e.MessagePanel});var t=function(){this.restrict="A",this.link=function(e,t,n){var i="100%";if("hawtioMessagePanel"in n){var r=n.hawtioMessagePanel;Core.isBlank(r)||(i=r)}var o="1s";if("speed"in n){var a=n.speed;Core.isBlank(a)||(o=a)}t.css({position:"absolute",bottom:0,height:0,"min-height":0,transition:"all "+o+" ease-in-out"}),t.parent().mouseover(function(){t.css({height:i,"min-height":"auto"})}),t.parent().mouseout(function(){t.css({height:0,"min-height":0})})}};e.MessagePanel=t,e._module.directive("hawtioInfoPanel",function(){return new e.InfoPanel});var n=function(){this.restrict="A",this.link=function(e,n,t){var i={left:{side:"right",out:"width"},right:{side:"left",out:"width"},up:{side:"bottom",out:"height"},down:{side:"top",out:"height"}},r="right";if("hawtioInfoPanel"in t){var o=t.hawtioInfoPanel;Core.isBlank(o)||_.some(_.keys(i),o)&&(r=o)}var a="1s";if("speed"in t){var s=t.speed;Core.isBlank(s)||(a=s)}var l="open";if("toggle"in t){var c=t.toggle;Core.isBlank(s)||(l=c)}var d={position:"absolute",transition:"all "+a+" ease-in-out"},u={};u[i[r].out]="100%";var p={};p[i[r].out]=0,d[i[r].side]=0,d[i[r].out]=0,n.css(d),e.$watch(l,function(e,t){Core.parseBooleanValue(e)?n.css(u):n.css(p)}),n.click(function(){e[l]=!1,Core.$apply(e)})}};e.InfoPanel=n}(UI||(UI={})),function(e){e._module.directive("hawtioRow",function(){return new e.DivRow});var t=function(){this.restrict="A",this.link=function(e,t,n){t.get(0).addEventListener("DOMNodeInserted",function(){var e=t.children(),n=0;angular.forEach(e,function(e){var t=angular.element(e);switch(t.css("display")){case"none":break;default:n=n+t.outerWidth(!0)+5}}),t.width(n)})}};e.DivRow=t}(UI||(UI={})),function(t){t._module.directive("hawtioPager",function(){return new t.TablePager});var e=function(){function e(){var i=this;this.restrict="A",this.scope=!0,this.templateUrl=t.templatePath+"tablePager.html",this.$scope=null,this.element=null,this.attrs=null,this.tableName=null,this.setRowIndexName=null,this.rowIndexName=null,this.link=function(e,t,n){return i.doLink(e,t,n)}}return e.prototype.doLink=function(n,e,t){var i=this;this.$scope=n,this.element=e,this.attrs=t,this.tableName=t.hawtioPager||t.array||"data",this.setRowIndexName=t.onIndexChange||"onIndexChange",this.rowIndexName=t.rowIndex||"rowIndex",n.first=function(){i.goToIndex(0)},n.last=function(){i.goToIndex(n.tableLength()-1)},n.previous=function(){0<n.rowIndex()&&i.goToIndex(n.rowIndex()-1)},n.next=function(){n.rowIndex()<n.tableLength()-1&&i.goToIndex(n.rowIndex()+1)},n.isEmptyOrFirst=function(){var e=n.rowIndex();return n.tableLength()<=0||e<=0},n.isEmptyOrLast=function(){var e=n.rowIndex(),t=n.tableLength();return t<1||t<=e+1},n.rowIndex=function(){return Core.pathGet(n.$parent,i.rowIndexName.split("."))},n.tableLength=function(){var e=i.tableData();return e?e.length:0}},e.prototype.tableData=function(){return Core.pathGet(this.$scope.$parent,this.tableName.split("."))||[]},e.prototype.goToIndex=function(e){var t=this.setRowIndexName,n=this.$scope[t];angular.isFunction(n)?n(e):(console.log("No function defined in scope for "+t+" but was "+n),this.$scope[this.rowIndexName]=e)},e}();t.TablePager=e}(UI||(UI={})),function(g){g.TemplatePopover=function(u,p,h){return{restrict:"A",link:function(t,o,e){var n=g.getIfSet("title",e,void 0),i=g.getIfSet("trigger",e,"hover"),r=g.getIfSet("content",e,"popoverTemplate"),a=g.getIfSet("placement",e,"auto"),s=g.getIfSet("delay",e,"100"),l=g.getIfSet("container",e,"body"),c=g.getIfSet("selector",e,"false");"false"===l&&(l=!1),"false"===c&&(c=!1);var d=u.get(r);d&&(o.on("$destroy",function(){o.popover("destroy")}),o.popover({title:n,trigger:i,html:!0,content:function(){var e=p(d)(t);return Core.$digest(t),e},delay:s,container:l,selector:c,placement:function(e,t){if("auto"!==a)return a;var n=o,i=n.offset(),r=h.innerWidth();return i.left+n.outerWidth()/2<r/2?"right":"left"}}))}}},g._module.directive("hawtioTemplatePopover",["$templateCache","$compile","$document",g.TemplatePopover])}(UI||(UI={})),function(v){v.HawtioTocDisplay=function(r,f,e,b){return{restrict:"A",scope:{getContents:"&"},controller:["$scope","$element","$attrs",function(i,e,t){i.remaining=-1,i.render=!1,i.chapters=[],i.addChapter=function(e){v.log.debug("Adding:",e),i.chapters.push(e),angular.isDefined(e.text)||i.fetchItemContent(e)},i.getTarget=function(e){return e?e.replace(".","_"):""},i.getFilename=function(e,t){var n=e.split("/").last();return t&&!n.endsWith(t)&&(n=n+"."+t),n},i.$watch("remaining",function(e,t){e!==t&&0===e&&(i.render=!0)}),i.fetchItemContent=function(t){var n=i;i.$eval(function(e){e.getContents({filename:t.filename,cb:function(e){e&&(t.filename.endsWith(".md")?t.text=r(e):t.text=e,i.remaining--,Core.$apply(n))}})})}}],link:function(c,i,e){var r=0,t=$(".logbar"),o=$("#toc-content");if(t.length)r=t.height()+t.offset().top;else if(o.length){var n=o.offset();n&&(r=n.top)}r||(r=90);var a=null,s=i;o&&o.length||(o=i);var d=c.$parent||c,l=e.linkFilter,u=e.html;function p(){var n=$(window).scrollTop();i.find("li a").removeClass("active"),$(".panel-body").each(function(){var e=$(this).offset();if(e&&e.top>=n){var t=$(this).attr("id");if(t)return s.find("a[chapter-id='"+t+"']").addClass("active"),!1}})}function h(){var e=s.find("a");return l&&(e=e.filter(l)),e}function g(){s.get(0).id||(s.get(0).id="toc"),c.tocId="#"+s.get(0).id,c.remaining=h().length,h().each(function(e,t){v.log.debug("Found:",t);var n={filename:c.getFilename(t.href,t.getAttribute("file-extension")),title:t.textContent,link:t};c.addChapter(n)}),setTimeout(function(){p()},100)}function m(e){if(v.log.debug("selected chapter changed:",e),e){var t=0,n=$("#"+e);if(n.length){var i=n.offset();i&&(t=i.top-r),$("body,html").animate({scrollTop:t},1e3)}}}u?d.$watch(u,function(){var e=d[u];if(e&&e!==a){var t=b(a=e)(d);i.children().remove(),i.append(t),g()}}):g(),$(window).scroll(p),c.$watch("render",function(e,t){if(e!==t&&e&&!o.next(".hawtio-toc").length){var s=$('<div class="hawtio-toc"></div>');s.appendTo(o);var l=f.search().chapter;c.chapters.forEach(function(e,t){v.log.debug("index:",t);var n=$("<div></div>"),i=null,r=c.getTarget(e.filename),o=e.link;o&&o.setAttribute("chapter-id",r),0<t&&(i=$('<div class="panel-title"><a class="toc-back" href="">Back to Top</a></div>'));var a=$('<div class="panel-body" id="'+r+'">'+e.text+"</div>");i?n.append(i).append(b(a)(c)):n.append(b(a)(c)),n.hide().appendTo(s).fadeIn(1e3),r===l&&m(r)});var n=o.offset().top-r;s.find("a.toc-back").each(function(e,t){$(t).click(function(e){e.preventDefault(),$("body,html").animate({scrollTop:n},2e3)})}),h().each(function(e,t){var n=t.href,i=c.getFilename(n,t.getAttribute("file-extension"));$(t).click(function(e){v.log.debug("Clicked:",e),e.preventDefault();var t=c.getTarget(i);return f.search("chapter",t),Core.$apply(d),m(t),!0})})}}),d.$on("$locationChangeSuccess",function(e,t,n){setTimeout(function(){m(f.search().chapter)},50)})}}},v._module.directive("hawtioTocDisplay",["marked","$location","$anchorScroll","$compile",v.HawtioTocDisplay])}(UI||(UI={})),function(r){r._module.directive("hawtioViewport",function(){return new r.ViewportHeight});var e=function(){this.restrict="A",this.link=function(e,o,a){var s=0,t=function(){var e=angular.element(a.hawtioViewport),t=angular.element(a.containingDiv),n=e.position().top+e.height(),i=t.height()-n;if(angular.isDefined(a.heightAdjust))var r=Core.parseIntValue(a.heightAdjust);i+=r,o.css({height:i,"min-height":i}),s!==i&&(s=i,o.trigger("resize"))};t(),e.$watch(t),$().resize(function(){return t(),Core.$apply(e),!1})}};r.ViewportHeight=e,r._module.directive("hawtioHorizontalViewport",function(){return new r.HorizontalViewport});var t=function(){this.restrict="A",this.link=function(e,t,n){var i=angular.isDefined(n.adjustParent)&&Core.parseBooleanValue(n.adjustParent);t.get(0).addEventListener("DOMNodeInserted",function(){var e=t.children();t.height(e.outerHeight(!0)),i&&t.parent().height(t.outerHeight(!0)+r.getScrollbarWidth())})}};r.HorizontalViewport=t}(UI||(UI={})),(UI||(UI={}))._module.directive("hawtioWindowHeight",["$window",function(o){return{restrict:"A",replace:!1,link:function(e,t,n){var r=o.innerHeight;function i(e){var t=e.offset();if(t){var n=t.top,i=r-n;0<i&&e.attr({style:"height: "+i+"px;"})}}e.$watch(_.debounce(function(){r=o.innerHeight,t.parents().each(function(e,t){i(t=$(t))}),i(t)},1e3,{trailing:!0}))}}}]),function(e){var t="hawtio-ui-bootstrap";angular.module(t,["ui.bootstrap"]),hawtioPluginLoader.addModule(t),hawtioPluginLoader.addModule("hawtio-compat.transition"),hawtioPluginLoader.addModule("hawtio-compat.dialog"),hawtioPluginLoader.addModule("hawtio-compat.modal")}(UIBootstrap||(UIBootstrap={})),function(l){function e(r,o){var a={type:"read",mbean:"com.sun.management:type=HotSpotDiagnostic",arguments:[]};function s(e){if("string"==typeof e){if(e.match(/true/))return!0;if(e.match(/false/))return!1;if(e.match(/\d+/))return Number(e)}return e}r.flags=[],Core.register(o,r,[a],Core.onSuccess(function n(e){for(var t=0;t<r.flags.length;t++)r.flags[t].deregisterWatch();r.flags=e.value.DiagnosticOptions;for(var t=0;t<r.flags.length;t++){var i=r.flags[t];i.value=s(i.value),i.writeable?i.dataType=typeof i.value:i.dataType="readonly",i.deregisterWatch=r.$watch("flags["+t+"]",function(t,e){t.value!=e.value&&o.request([{type:"exec",mbean:"com.sun.management:type=HotSpotDiagnostic",operation:"setVMOption(java.lang.String,java.lang.String)",arguments:[t.name,t.value]},a],Core.onSuccess(function(e){"read"===e.request.type?n(e):l.log.info("Set VM option "+t.name+"="+t.value)}))},!0)}Core.$apply(r)}))}e.$inject=["$scope","jolokia"],l.DiagnosticsFlagsController=e}(Diagnostics||(Diagnostics={})),function(e){e.rootPath="plugins/jvm",e.templatePath=UrlHelpers.join(e.rootPath,"/html"),e.pluginName="hawtio-jmx-jvm",e.log=Logger.get(e.pluginName),e.connectionSettingsKey="jvmConnect",e.logoPath="img/icons/jvm/",e.logoRegistry={jetty:e.logoPath+"jetty-logo-80x22.png",tomcat:e.logoPath+"tomcat-logo.gif",generic:e.logoPath+"java-logo.svg"},e.proxyEnabledPath="proxy/enabled",e.proxyEnabled=!0}(JVM||(JVM={})),function(o){function i(e){return Core.isBlank(e.recentConnections)&&t(),angular.fromJson(e.recentConnections)}function a(e,t){var n=i(e);n.push(t),n=_.take(_.uniq(n),5),e.recentConnections=angular.toJson(n)}function t(){localStorage.recentConnections="[]"}function s(t){var e=r(),n=_.findIndex(e,function(e){return e.name===t.name});-1!=n?e[n]=t:e.unshift(t),l(e)}function r(){var t=Core.getLocalStorage();try{var e=angular.fromJson(t[o.connectionSettingsKey]);return e?_.isArray(e)?e:(delete t[o.connectionSettingsKey],[]):[]}catch(e){return delete t[o.connectionSettingsKey],[]}}function l(e){o.log.debug("Saving connection array:",StringHelpers.toString(e)),localStorage[o.connectionSettingsKey]=angular.toJson(e)}o.configureScope=function(e,n,t){e.isActive=function(e){var t=Core.trimLeading(e,"#");return n.path()===t},e.isValid=function(e){return e&&e.isValid(t)},e.hasLocalMBean=function(){return o.hasLocalMBean(t)},e.goto=function(e){n.path(e)}},o.hasLocalMBean=function(e){return e.treeContainsDomainAndProperties("hawtio",{type:"JVMList"})},o.hasDiscoveryMBean=function(e){return e.treeContainsDomainAndProperties("jolokia",{type:"Discovery"})},o.createJolokia=function(e,t,n){return new Jolokia({url:e,username:t,password:n,canonicalNaming:!1,ignoreErrors:!0,mimeType:"application/json"})},o.getRecentConnections=i,o.addRecentConnection=a,o.removeRecentConnection=function(e,t){var n=i(e);n=_.without(n,t),e.recentConnections=angular.toJson(n)},o.clearConnections=t,o.isRemoteConnection=function(){return"con"in(new URI).query(!0)},o.connectToServer=function(e,t){o.log.debug("Connecting with options: ",StringHelpers.toString(t));var n=angular.extend({},t);if(a(e,n.name),!("userName"in n)){var i=HawtioCore.injector.get("userDetails");n.userName=i.username,n.password=i.password}s(n);var r=HawtioCore.injector.get("$window").open(function(e){if(e.view){var t=e.view+"?con="+e.name;return t=(t=t.replace(/\?/g,"&")).replace(/&/,"?")}return URI("").search({con:e.name}).toString()}(n),n.name);r.con=n.name,r.userDetails={username:n.userName,password:n.password,loginDetails:{}}},o.saveConnection=s,o.loadConnections=r,o.saveConnections=l,o.getConnectionNameParameter=function(){return(new URI).search(!0).con},o.getConnectOptions=function(t,e){if(void 0===e&&(e=Core.getLocalStorage()),!t)return null;var n=r();return _.find(n,function(e){return e.name===t})},o.createServerConnectionUrl=function(e){o.log.debug("Connect to server, options:",StringHelpers.toString(e));var t=null;if(e.jolokiaUrl&&(t=e.jolokiaUrl),null===t){var n=new URI;n.protocol(e.scheme||"http").host(e.host||"localhost").port(String(e.port||80)).path(e.path),t=UrlHelpers.join("proxy",n.protocol(),n.hostname(),n.port(),n.path())}return o.log.debug("Using URL:",t),t}}(JVM||(JVM={})),function(r){var e=function(){function e(e,t,n){this.$q=e,this.$window=t,this.$location=n,this._createJolokia=function(e,t){return void 0===t&&(t=!1),t?new Jolokia({url:r.createServerConnectionUrl(e),method:"post",mimeType:"application/json",username:e.userName,password:e.password}):new Jolokia({url:r.createServerConnectionUrl(e),method:"post",mimeType:"application/json"})}}return e.$inject=["$q","$window","$location"],Object.defineProperty(e.prototype,"createJolokia",{get:function(){return this._createJolokia},set:function(e){this._createJolokia=e},enumerable:!0,configurable:!0}),e.prototype.getConnections=function(){var e=this.$window.localStorage.getItem(r.connectionSettingsKey),t=e?JSON.parse(e):[];return angular.isArray(t)?t:Object.values(t)},e.prototype.updateReachableFlags=function(n){var t=this,e=n.map(function(e){return t.testConnection(e)});return this.$q.all(e).then(function(e){for(var t=0;t<n.length;t++)n[t].reachable=e[t].ok;return n})},e.prototype.updateReachableFlag=function(t){return this.testConnection(t).then(function(e){return t.reachable=e.ok,t})},e.prototype.saveConnections=function(e){this.$window.localStorage.setItem(r.connectionSettingsKey,JSON.stringify(e))},e.prototype.importConnections=function(e){var t=this.getConnections();_.pullAllBy(e,t,"name"),this.saveConnections(t.concat(e))},e.prototype.testConnection=function(t){var i=this;return this.$q(function(n,e){try{i.createJolokia(t).request({type:"version"},{success:function(){n({ok:!0,message:"Connection successful"})},ajaxError:function(e){var t;t=401===e.status?{ok:!0,message:"Connection successful"}:403===e.status?i.forbiddenReasonMatches(e,"HOST_NOT_ALLOWED")?{ok:!1,message:"Host not whitelisted"}:{ok:!0,message:"Connection successful"}:{ok:!1,message:"Connection failed"},n(t)}})}catch(e){r.log.error(e)}})},e.prototype.checkCredentials=function(n,i,r){var o=this;return this.$q(function(e,t){n.userName=i,n.password=r,o.createJolokia(n,!0).request({type:"version"},{success:function(){e(!0)},ajaxError:function(){e(!1)}})})},e.prototype.connect=function(e){r.log.debug("Connecting with options:",StringHelpers.toString(e));var t=URI("").search({con:e.name}).toString();this.$window.open(t)},e.prototype.getDefaultOptions=function(){return{port:this.getBrowserUrlPortNumber(),path:this.getBrowserUrlContextPath()+"/jolokia"}},e.prototype.getBrowserUrlPortNumber=function(){var e=null;try{var t=URI(this.$location.absUrl());t.port()&&(e=parseInt(t.port()))}catch(e){r.log.error(e)}return e},e.prototype.getBrowserUrlContextPath=function(){var e=null;try{var t=URI(this.$location.absUrl()).path(),n=this.$location.path();e=t.slice(0,t.indexOf(n))}catch(e){r.log.error(e)}return e},e.prototype.forbiddenReasonMatches=function(e,t){return e.responseJSON&&e.responseJSON.reason?e.responseJSON.reason===t:e.getResponseHeader("Hawtio-Forbidden-Reason")===t},e}();r.ConnectService=e}(JVM||(JVM={})),function(n){var e=function(){function e(e,t,n){var i=this;this.$timeout=e,this.$uibModal=t,this.connectService=n,this.connections=[],this.toolbarConfig={actionsConfig:{primaryActions:[{name:"Add connection",actionFn:function(){return i.addConnection()}}],moreActions:[{name:"Import connections",actionFn:function(){return i.importConnections()}},{name:"Export connections",actionFn:function(){return i.exportConnections()}}]}},this.listConfig={selectionMatchProp:"name",selectItems:!1,showSelectBox:!1},this.listActionButtons=[{name:"Connect",actionFn:function(e,t){return i.connect(t)}}],this.listActionDropDown=[{name:"Edit",actionFn:function(e,t){return i.editConnection(t)}},{name:"Delete",actionFn:function(e,t){return i.deleteConnection(t)}}]}return e.$inject=["$timeout","$uibModal","connectService"],e.prototype.$onInit=function(){this.connections=this.connectService.getConnections(),this.connectService.updateReachableFlags(this.connections),this.setTimerToUpdateReachableFlags()},e.prototype.$onDestroy=function(){this.$timeout.cancel(this.promise)},e.prototype.setTimerToUpdateReachableFlags=function(){var t=this;this.promise=this.$timeout(function(){t.connectService.updateReachableFlags(t.connections).then(function(e){return t.setTimerToUpdateReachableFlags()})},2e4)},e.prototype.addConnection=function(){var t=this,e=this.connectService.getDefaultOptions();this.$uibModal.open({component:"connectEditModal",resolve:{connection:function(){return n.createConnectOptions(e)},connectionNames:function(){return t.connections.map(function(e){return e.name})}}}).result.then(function(e){t.connections.unshift(e),t.connectService.saveConnections(t.connections),t.connectService.updateReachableFlag(e)})},e.prototype.editConnection=function(t){var n=this,i=angular.extend({},t);this.$uibModal.open({component:"connectEditModal",resolve:{connection:function(){return i},connectionNames:function(){return n.connections.filter(function(e){return e.name!==i.name}).map(function(e){return e.name})}}}).result.then(function(e){angular.extend(t,e),n.connectService.saveConnections(n.connections),n.connectService.updateReachableFlag(t)})},e.prototype.deleteConnection=function(e){var t=this;this.$uibModal.open({component:"connectDeleteModal"}).result.then(function(){t.connections=_.without(t.connections,e),t.connectService.saveConnections(t.connections)})},e.prototype.connect=function(e){e.reachable?this.connectService.connect(e):this.$uibModal.open({component:"connectUnreachableModal"})},e.prototype.exportConnections=function(){var e=JSON.stringify(this.connections,null,"  "),t=new Blob([e],{type:"application/json"}),n=URL.createObjectURL(t),i=angular.element("<a></a>");i.attr("href",n),i.attr("download","hawtio-connnections-"+Date.now()+".json"),i.appendTo("body"),i[0].click(),i.remove(),URL.revokeObjectURL(n)},e.prototype.importConnections=function(){var e=this;this.$uibModal.open({component:"connectImportModal"}).result.then(function(){e.connections=e.connectService.getConnections(),e.connectService.updateReachableFlags(e.connections)})},e}();n.connectComponent={templateUrl:"plugins/jvm/html/connect.html",controller:e}}(JVM||(JVM={})),function(e){var t=function(){function e(e){this.connectService=e,this.errors={}}return e.$inject=["connectService"],e.prototype.$onInit=function(){this.connection=this.resolve.connection,this.connectionNames=this.resolve.connectionNames,this.operation=this.connection.name?"edit":"add"},e.prototype.testConnection=function(e){var t=this;this.errors=this.validateConnection(e),0===Object.keys(this.errors).length&&this.connectService.testConnection(e).then(function(e){return t.connectionTestResult=e})},e.prototype.cancel=function(){this.modalInstance.dismiss()},e.prototype.saveConnection=function(e){this.errors=this.validateConnection(e),0===Object.keys(this.errors).length&&this.modalInstance.close(this.connection)},e.prototype.validateConnection=function(e){var t={};return null===e.name||0===e.name.trim().length?t.name="Please fill out this field":0<=this.connectionNames.indexOf(e.name.trim())&&(t.name="Connection name '"+e.name.trim()+"' is already in use"),null===e.host||0===e.host.trim().length?t.host="Please fill out this field":-1!==e.host.indexOf(":")&&(t.host="Invalid character ':'"),(null!==e.port&&e.port<0||65535<e.port)&&(t.port="Please enter a number from 0 to 65535"),t},e}();e.ConnectEditModalController=t,e.connectEditModalComponent={bindings:{modalInstance:"<",resolve:"<"},templateUrl:"plugins/jvm/html/connect-edit.html",controller:t}}(JVM||(JVM={})),(JVM||(JVM={})).connectDeleteModalComponent={bindings:{close:"&",dismiss:"&"},template:'\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$ctrl.dismiss()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <h4 class="modal-title">Are you sure?</h4>\n      </div>\n      <div class="modal-body">\n        <p>You are about to delete this connection.</p>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="$ctrl.dismiss()">Cancel</button>\n        <button type="button" class="btn btn-danger" ng-click="$ctrl.close()">Delete</button>\n      </div>\n    '},function(e){var t=function(){function e(e,t){this.$timeout=e,this.connectService=t,this.fileSelected=!1}return e.$inject=["$timeout","connectService"],e.prototype.$onInit=function(){var e=this;this.input=document.getElementById("connectionsFile"),this.updateFileSelectedFlag=function(){return e.$timeout(function(){return e.fileSelected=0<e.input.files.length})},this.input.addEventListener("change",this.updateFileSelectedFlag)},e.prototype.$onDestroy=function(){this.input.removeEventListener("change",this.updateFileSelectedFlag)},e.prototype.import=function(){var t=this;if(0<this.input.files.length){var e=this.input.files.item(0),n=new FileReader;n.onload=function(){try{var e=JSON.parse(n.result);t.connectService.importConnections(e),t.close(),Core.notification("success","Connections imported successfully")}catch(e){t.$timeout(function(){return t.errorMessage=e.message})}},n.readAsText(e)}},e}();e.ConnectImportController=t,e.connectImportModalComponent={bindings:{close:"&",dismiss:"&"},template:'\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$ctrl.dismiss()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <h4 class="modal-title">Import connections</h4>\n      </div>\n      <div class="modal-body">\n        <div class="alert alert-danger" ng-if="$ctrl.errorMessage">\n          <span class="pficon pficon-error-circle-o"></span>\n          {{ $ctrl.errorMessage }}\n        </div>\n        <form>\n          <div class="form-group">\n            <input type="file" id="connectionsFile" accept="application/json" ng-model="$ctrl.myfile">\n          </div>\n        </form>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="$ctrl.dismiss()">Cancel</button>\n        <button type="button" class="btn btn-primary" ng-click="$ctrl.import()" ng-disabled="!$ctrl.fileSelected">Import</button>\n      </div>\n    ',controller:t}}(JVM||(JVM={})),function(e){var t=function(){function e(e,t,n,i,r,o){this.$location=e,this.$window=t,this.$uibModal=n,this.userDetails=i,this.postLoginTasks=r,this.postLogoutTasks=o}return e.$inject=["$location","$window","$uibModal","userDetails","postLoginTasks","postLogoutTasks"],e.prototype.$onInit=function(){var t=this;this.$uibModal.open({backdrop:"static",component:"connectLoginModal"}).result.then(function(e){t.registerTaskToPersistCredentials(e),t.userDetails.login(e.username,e.password),t.$window.location.href=t.$location.search().redirect}).catch(function(e){t.$window.close()})},e.prototype.registerTaskToPersistCredentials=function(e){var t=this;this.postLoginTasks.addTask("set-credentials-in-session-storage",function(){t.$window.sessionStorage.setItem("username",e.username),t.$window.sessionStorage.setItem("password",e.password)}),this.postLogoutTasks.addTask("remove-credentials-from-session-storage",function(){t.$window.sessionStorage.removeItem("username"),t.$window.sessionStorage.removeItem("password")})},e}();e.ConnectLoginController=t,e.connectLoginComponent={controller:t}}(JVM||(JVM={})),function(e){var t=function(){function e(e,t){this.ConnectOptions=e,this.connectService=t,this.invalidCredentials=!1}return e.$inject=["ConnectOptions","connectService"],e.prototype.cancel=function(){this.modalInstance.dismiss()},e.prototype.login=function(t,n){var i=this;this.connectService.checkCredentials(this.ConnectOptions,t,n).then(function(e){e?i.modalInstance.close({username:t,password:n}):i.invalidCredentials=!0})},e}();e.ConnectLoginModalController=t,e.connectLoginModalComponent={bindings:{modalInstance:"<"},template:'\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$ctrl.cancel()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <h4 class="modal-title">Log In</h4>\n      </div>\n      <form name="connectForm" class="form-horizontal" ng-submit="$ctrl.login(username, password)">\n        <div class="modal-body">\n          <div class="alert alert-danger" ng-show="$ctrl.invalidCredentials">\n            <span class="pficon pficon-error-circle-o"></span> Incorrect username or password\n          </div>    \n          <div class="form-group">\n            <label class="col-sm-3 control-label" for="connection-username">Username</label>\n            <div class="col-sm-8">\n              <input type="text" id="connection-username" class="form-control" ng-model="username" pf-focused="true">\n            </div>\n          </div>\n          <div class="form-group">\n            <label class="col-sm-3 control-label" for="connection-password">Password</label>\n            <div class="col-sm-8">\n              <input type="password" id="connection-password" class="form-control" ng-model="password">\n            </div>\n          </div>\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-default" ng-click="$ctrl.cancel()">Cancel</button>\n          <button type="submit" class="btn btn-primary">Log In</button>\n        </div>\n      </form>\n    ',controller:t}}(JVM||(JVM={})),(JVM||(JVM={})).connectUnreachableModalComponent={bindings:{close:"&"},template:'\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$ctrl.close()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <h4 class="modal-title">Endpoint Unreachable</h4>\n      </div>\n      <div class="modal-body">\n        <p>This Jolokia endpoint is unreachable. Please check the connection details and try again.</p>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-primary" ng-click="$ctrl.close()">OK</button>\n      </div>\n    '},(JVM||(JVM={})).ConnectionUrlFilter=function(){return function(e){var t=e.scheme+"://"+e.host;return e.port&&(t+=":"+e.port),e.path&&(t+="/"!==e.path[0]?"/":"",t+=e.path),t}},function(e){e.connectModule=angular.module("hawtio-jvm-connect",[]).component("connect",e.connectComponent).component("connectEditModal",e.connectEditModalComponent).component("connectDeleteModal",e.connectDeleteModalComponent).component("connectImportModal",e.connectImportModalComponent).component("connectLogin",e.connectLoginComponent).component("connectLoginModal",e.connectLoginModalComponent).component("connectUnreachableModal",e.connectUnreachableModalComponent).service("connectService",e.ConnectService).filter("connectionUrl",e.ConnectionUrlFilter).name}(JVM||(JVM={})),function(i){function e(e,t){var n={canonicalNaming:!1,ignoreErrors:!0,maxCollectionSize:i.DEFAULT_MAX_COLLECTION_SIZE,maxDepth:i.DEFAULT_MAX_DEPTH,method:"post",mimeType:"application/json"};return"jolokiaParams"in t?n=angular.fromJson(t.jolokiaParams):t.jolokiaParams=angular.toJson(n),n.url=e,n}e.$inject=["jolokiaUrl","localStorage"],i.createJolokiaParams=e}(JVM||(JVM={})),function(r){e.$inject=["$scope","localStorage","jolokiaParams","$window"];var o="showJolokiaPreferencesAlert";function e(t,n,i,e){$('[data-toggle="tooltip"]').tooltip(),Core.initPreferenceScope(t,n,{updateRate:{value:5e3,post:function(e){t.$emit("UpdateRate",e)}},maxDepth:{value:r.DEFAULT_MAX_DEPTH,converter:parseInt,formatter:parseInt,post:function(e){i.maxDepth=e,n.jolokiaParams=angular.toJson(i)}},maxCollectionSize:{value:r.DEFAULT_MAX_COLLECTION_SIZE,converter:parseInt,formatter:parseInt,post:function(e){i.maxCollectionSize=e,n.jolokiaParams=angular.toJson(i)}}}),t.showAlert=!!e.sessionStorage.getItem(o),e.sessionStorage.removeItem(o),t.reboot=function(){e.sessionStorage.setItem(o,"true"),e.location.reload()}}r.JolokiaPreferences=e}(JVM||(JVM={})),function(e){e.jolokiaModule=angular.module("hawtio-jvm-jolokia",[]).controller("JVM.JolokiaPreferences",e.JolokiaPreferences).service("jolokiaService",e.JolokiaService).factory("jolokiaParams",e.createJolokiaParams).name}(JVM||(JVM={})),function(t){var e=function(){function e(e){this.tabs=[new Nav.HawtioTab("Remote","/jvm/connect")],t.hasLocalMBean(e)&&this.tabs.push(new Nav.HawtioTab("Local","/jvm/local")),t.hasDiscoveryMBean(e)&&this.tabs.push(new Nav.HawtioTab("Discover","/jvm/discover"))}return e.$inject=["workspace"],e}();t.JvmController=e,t.jvmComponent={template:'<hawtio-tabs-layout tabs="$ctrl.tabs"></hawtio-tabs-layout>',controller:e}}(JVM||(JVM={})),function(u){function e(e){e.when("/jvm/connect",{template:"<connect></connect>"}).when("/jvm/connect-login",{template:"<connect-login></connect-login>"}).when("/jvm/welcome",{templateUrl:UrlHelpers.join(u.templatePath,"welcome.html")}).when("/jvm/discover",{templateUrl:UrlHelpers.join(u.templatePath,"discover.html")}).when("/jvm/local",{templateUrl:UrlHelpers.join(u.templatePath,"local.html")})}function t(e,r,t,n,o,i,a,s,l,c,d){l.add("hawtio-header",function(e){var t=c.get(UrlHelpers.join(u.templatePath,"navbarHeaderExtension.html"));return d(t)(e)}),s.inDashboard||a.addTask("ConParam",function(e,t,n){if(HawtioCore.injector&&o&&o.name&&t){var i=new URI(t).query(!0);i.con||(i.con=o.name,r.search(i))}}),i.addTask("CleanupJvmConnectCredentials",function(){u.log.debug("Clean up credentials from JVM connection settings in local storage");var e=u.loadConnections();e.forEach(function(e){delete e.userName,delete e.password}),u.saveConnections(e)}),t.addUserDoc("jvm","plugins/jvm/doc/help.md"),n.addTab("Connect","plugins/jvm/html/reset.html"),n.addTab("Jolokia","plugins/jvm/html/jolokia-preferences.html"),e.addItem({title:"Connect",basePath:"/jvm",template:"<jvm></jvm>",isValid:function(){return u.proxyEnabled&&(null==o||null==o.name)}})}function n(e,t,n,i){t.registerInitFunction(function(){return e(function(e){var t=i.updateRate;t&&0<t&&(n.start(t),u.log.info("JVM.startJolokia: started")),e()})})}e.$inject=["$routeProvider"],t.$inject=["mainNavService","$location","helpRegistry","preferencesRegistry","ConnectOptions","preLogoutTasks","locationChangeStartTasks","HawtioDashboard","HawtioExtension","$templateCache","$compile"],n.$inject=["$q","initService","jolokia","localStorage"],u._module=angular.module(u.pluginName,["ngCookies",u.connectModule,u.jolokiaModule]).config(e).constant("mbeanName","hawtio:type=JVMList").run(t).run(n).component("jvm",u.jvmComponent),hawtioPluginLoader.addModule(u.pluginName).registerPreBootstrapTask({name:"InitProxyEnabled",task:function(e){return function(r){$.ajax(u.proxyEnabledPath,{type:"GET",success:function(e,t,n){var i=!1!==e;u.log.debug("Proxy enabled:",i),u.proxyEnabled=i,r()},error:function(e,t,n){u.log.debug("Failed to fetch",u.proxyEnabledPath,":",n),u.proxyEnabled=!0,r()}})}(e)}})}(JVM||(JVM={})),function(u){var p,e;i.$inject=["$location","localStorage","jolokiaStatus","jolokiaParams","jolokiaUrl","userDetails","postLoginTasks","$timeout","$cookies"],(e=p=u.JolokiaListMethod||(u.JolokiaListMethod={})).LIST_GENERAL="list",e.LIST_OPTIMISED="list_optimised",e.LIST_CANT_DETERMINE="cant_determine";u.DEFAULT_MAX_DEPTH=7,u.DEFAULT_MAX_COLLECTION_SIZE=5e4;var h=["/hawtio/jolokia","/jolokia","jolokia"],g=null;function n(e){if(void 0===e&&(e=!1),!Core.isBlank(u.ConnectionName)&&!e)return u.ConnectionName;u.ConnectionName="";var t=(new URI).search(!0);return"con"in window?(u.ConnectionName=window.con,u.log.debug("Using connection name from window:",u.ConnectionName)):"con"in t?(u.ConnectionName=t.con,u.log.debug("Using connection name from URL:",u.ConnectionName)):u.log.debug("No connection name found, using direct connection to JVM"),u.ConnectionName}hawtioPluginLoader.registerPreBootstrapTask({name:"JvmParseLocation",task:function(o){var e=new URI,t=e.query(!0);u.log.debug("query: ",t);var n=t.jolokiaUrl;if(n){delete t["sub-tab"],delete t["main-tab"],n=URI.decode(n);var i=new URI(n),r=t.title||"Unknown Connection",a=t.token||Core.trimLeading(e.hash(),"#"),s=b({jolokiaUrl:n,name:r,scheme:i.protocol(),host:i.hostname(),port:Core.parseIntValue(i.port()),path:Core.trimLeading(i.pathname(),"/")});Core.isBlank(a)||(s.token=a),_.merge(s,i.query(!0)),_.assign(s,t),u.log.debug("options: ",s);var l=u.loadConnections().filter(function(e){return e.name!==r});return l.push(s),u.saveConnections(l),e.hash("").query({con:r}),void window.location.replace(e.toString())}if(t.con)return u.log.debug("Not discovering jolokia"),void o();function c(e){0===e.length?o():d(e.pop())}function d(r){u.log.debug("Trying URL:",r),$.ajax(r).always(function(e,t,n){if("success"!==t&&(n=e),200===n.status)try{var i=angular.fromJson(e);"value"in i&&"agent"in i.value?(g=r,u.log.debug("Found jolokia agent at:",r,"version:",i.value.agent),o()):c(h)}catch(e){c(h)}else 401===n.status||403===n.status?(g=r,u.log.debug("Using URL:",r,"assuming it could be an agent but got return code:",n.status),o()):c(h)})}d(h.pop())}}),u.ConnectionName=null,u.getConnectionName=n;var m=function(){var e=n();if(Core.isBlank(e))return null;var t=u.getConnectOptions(e);return t.userName=sessionStorage.getItem("username"),t.password=sessionStorage.getItem("password"),t}();function t(){var e=void 0,t=HawtioCore.documentBase();if(m&&m.name?(e=u.createServerConnectionUrl(m),u.log.debug("Using configured URL")):(u.log.debug("Using discovered URL"),e=g),!e)return!1;var n=new URI,i=void 0;return i=_.startsWith(e,"/")||_.startsWith(e,"http")?new URI(e):new URI(UrlHelpers.join(t,e)),m&&m.jolokiaUrl||(i.protocol()||i.protocol(n.protocol()),i.hostname()||i.host(n.hostname()),i.port()||i.port(n.port())),e=i.toString(),u.log.debug("Complete jolokia URL:",e),e}function i(o,a,e,t,n,s,i,l,r){var c=null;if(n){if($.ajaxSettings.beforeSend||(u.log.debug("Setting up jQuery beforeSend"),$.ajaxSetup({beforeSend:function(t,n){var i="Authorization";return t.loggedIn&&t.token?(u.log.debug("Setting authorization header to token"),function(e){t.token&&e.setRequestHeader(i,"Bearer "+t.token)}):m&&m.token?function(e){return e.setRequestHeader(i,"Bearer "+m.token)}:m&&m.userName&&m.password?(u.log.debug("Setting authorization header to username/password"),function(e){return e.setRequestHeader(i,Core.getBasicAuthHeader(m.userName,m.password))}):n.get("XSRF-TOKEN")?(u.log.debug("Setting XSRF token header from cookies"),function(e){return e.setRequestHeader("X-XSRF-TOKEN",n.get("XSRF-TOKEN"))}):(u.log.debug("Not setting any authorization header"),function(e){})}(s,r)})),i.execute(),!t.ajaxError){var d=0;t.ajaxError=function(e,t,n){if(401===e.status||403===e.status)if(u.isRemoteConnection()){if("/jvm/connect-login"!==o.path()){c.stop();var i=o.absUrl();o.path("/jvm/connect-login").search("redirect",i)}}else s.loggedIn&&s.logout();else{d++;var r=3*a.updateRate;l(function(){return d--},r),2<d&&Core.notification("danger","Connection lost. Retrying...",a.updateRate)}}}(c=new Jolokia(t)).stop(),function(e,t){u.log.debug("Checking if we can call optimized jolokia.list() operation");var n=e.list(Core.escapeMBeanPath(t.listMBean),Core.onSuccess(null));n&&_.isObject(n.op)?t.listMethod=p.LIST_OPTIMISED:t.listMethod=p.LIST_CANT_DETERMINE;u.log.debug("Jolokia list method:",t.listMethod)}(c,e)}else u.log.debug("Use dummy Jolokia"),c=new f;return c}u.getJolokiaUrl=t,u._module.service("ConnectionName",function(){return function(e){return void 0===e&&(e=!1),n(e)}}),u._module.service("ConnectOptions",function(){return m}),u._module.factory("jolokiaUrl",function(){return t()}),u._module.factory("jolokiaStatus",function(){return{xhr:null,listMethod:p.LIST_GENERAL,listMBean:"hawtio:type=security,name=RBACRegistry"}}),u._module.factory("jolokia",i);var f=function(){function e(){this.isDummy=!0,this.running=!1}return e.prototype.request=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return null},e.prototype.getAttribute=function(e,t,n,i){return null},e.prototype.setAttribute=function(e,t,n,i,r){},e.prototype.execute=function(e,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];return null},e.prototype.search=function(e,t){return null},e.prototype.list=function(e,t){return null},e.prototype.version=function(e){return null},e.prototype.register=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return null},e.prototype.unregister=function(e){},e.prototype.jobs=function(){return[]},e.prototype.start=function(e){this.running=!0},e.prototype.stop=function(){this.running=!1},e.prototype.isRunning=function(){return this.running},e}();function b(e){void 0===e&&(e={});return angular.extend({name:null,scheme:"http",host:null,port:null,path:null,useProxy:!0,jolokiaUrl:null,userName:null,password:null,reachable:!0},e)}u.DummyJolokia=f,u.createConnectOptions=b}(JVM||(JVM={})),function(e){var t;(t=e.TreeEvent||(e.TreeEvent={})).Fetched="jmxTreeFetched",t.Updated="jmxTreeUpdated",t.NodeSelected="jmxTreeClicked"}(Jmx||(Jmx={})),function(o){function i(e,t){var n=e.jolokiaHandle;n&&(t.unregister(n),e.jolokiaHandle=null)}function a(e,t){return void 0===t&&(t={}),t.mimeType="application/json",_.isUndefined(e)||(t.success=e),t.method||(t.method="POST"),t.canonicalNaming=!1,t.canonicalProperties=!1,t.error||(t.error=function(e){return n(e,t)}),t}function n(e,t){if(void 0===t&&(t={}),e.error){var n=o.pathGet(e,["request","operation"])||"unknown";t.silent||function(e){var t=function(e){return 0<=e.indexOf("InstanceNotFoundException")||0<=e.indexOf("AttributeNotFoundException")||0<=e.indexOf("IllegalArgumentException: No operation")};return e.stacktrace&&t(e.stacktrace)||e.error&&t(e.error)}(e)?o.log.debug("Operation",n,"failed due to:",e.error):o.log.warn("Operation",n,"failed due to:",e.error)}}function t(e){return e.replace(/!/g,"!!").replace(/\//g,"!/").replace(/"/g,'!"')}o.scopeStoreJolokiaHandle=function(e,t,n){n&&(e.$on("$destroy",function(){i(e,t)}),e.jolokiaHandle=n)},o.closeHandle=i,o.onSuccess=a,o.defaultJolokiaErrorHandler=n,o.logJolokiaStackTrace=function(e){if(e.stacktrace){var t=o.pathGet(e,["request","operation"])||"unknown";o.log.info("Operation",t,"failed due to:",e.error)}},o.escapeMBean=function(e){return encodeURI(t(e))},o.escapeMBeanPath=function(e){return t(e).replace(":","/")},o.parseMBean=function(e){var i={},t=e.split(":");return 1<t.length&&(i.domain=_.first(t),t=(t=_.without(t,_.first(t))).join(":"),i.attributes={},t.split(",").forEach(function(e){var t=e.split("="),n=_.first(t).trim();t=_.without(t,_.first(t)),i.attributes[n]=t.join("=").trim()})),i},o.registerForChanges=function(e,t,arguments,n,i){var r={responseJson:"",success:function(e){var t=angular.toJson(e.value);r.responseJson!==t&&(r.responseJson=t,n(e))}};return angular.extend(r,i),o.register(e,t,arguments,a(void 0,r))};var e=null;function r(e){if(!("type"in e))return null;var t=e.type;switch(t.toLowerCase()){case"exec":t+=":"+e.mbean+":"+e.operation;var n=function(arguments){return StringHelpers.toString(arguments)}(e.arguments);o.isBlank(n)||(t+=":"+n);break;case"read":t+=":"+e.mbean+":"+e.attribute;break;default:return null}return t}function s(arguments){return angular.isArray(arguments)?arguments.map(function(e){return r(e)}).join(":"):r(arguments)}function l(){return null===e&&(e={},o.log.debug("Created response history",e)),e}function c(arguments,e){var t=l(),n=s(arguments);if(null!==n){var i=_.keys(t);if(i.length>=o.MAX_RESPONSE_CACHE_SIZE){o.log.debug("Cache limit (",o.MAX_RESPONSE_CACHE_SIZE,") met or  exceeded (",i.length,"), trimming oldest response");var r=function(e){var n=null,i=null;return angular.forEach(e,function(e,t){e&&e.timestamp?(null===n||e.timestamp<n)&&(n=e.timestamp,i=t):(n=0,i=t)}),i}(t);null!==r?(o.log.debug("Deleting key: ",r),delete t[r]):(o.log.debug("Got null key, could be a cache problem, wiping cache"),i.forEach(function(e){o.log.debug("Deleting key: ",e),delete t[e]}))}t[n]=e}else o.log.debug("key for arguments is null, not caching: ",StringHelpers.toString(arguments))}function d(e,arguments,t){var n=l(),i=s(arguments);if(null!==i)if(i in n&&"success"in t){var r=n[i];setTimeout(function(){t.success(r)},10)}else o.log.debug("Unable to find existing response for key: ",i),e.request(arguments,t);else e.request(arguments,t)}function u(t,e){angular.isDefined(e.$jhandle)&&(e.$jhandle.forEach(function(e){t.unregister(e)}),delete e.$jhandle)}function p(i,r,e){(function(e,t,n){if(e.length<n.length)return!0;for(var i=0;i<n.length;i++)if(e[i][t]!==n[i])return!0;return!1})(i,r,e)&&e.reverse().forEach(function(e){var t=_.findIndex(i,[r,e]);if(-1!==t){var n=i.splice(t,1)[0];i.unshift(n)}})}o.getOrInitObjectFromLocalStorage=function(e){return e in localStorage||(localStorage[e]=angular.toJson({})),angular.fromJson(localStorage[e])},o.getResponseHistory=l,o.MAX_RESPONSE_CACHE_SIZE=20,o.register=function(t,n,arguments,e){if(!n.$$destroyed){angular.isDefined(n.$jhandle)&&angular.isArray(n.$jhandle)||(n.$jhandle=[]),angular.isDefined(n.$on)&&n.$on("$destroy",function(e){u(t,n)});var i=null;if("success"in e){var r=e.success,o=arguments;e.success=function(e){c(o,e),r(e)}}if(angular.isArray(arguments)){if(1<=arguments.length){var a=[e];angular.forEach(arguments,function(e){return a.push(e)});var s=t.register;i=s.apply(t,a),n.$jhandle.push(i),d(t,arguments,e)}}else i=t.register(e,arguments),n.$jhandle.push(i),d(t,arguments,e);return function(){null!==i&&(n.$jhandle.remove(i),t.unregister(i))}}},o.unregister=u,o.reorderPathsIfRequired=function(e,t){switch(e){case"osgi.compendium":p(t,"key",["service","version","framework"]);break;case"osgi.core":p(t,"key",["type","version","framework"])}}}(Core||(Core={})),function(l){var a=Logger.get("hawtio-jmx-workspace"),k=Logger.get("hawtio-jmx-workspace-tree"),e=function(){function t(e,t,n,i,r,o,a,s){this.jolokia=e,this.jolokiaStatus=t,this.jmxTreeLazyLoadRegistry=n,this.$location=i,this.$compile=r,this.$templateCache=o,this.localStorage=a,this.$rootScope=s,this.operationCounter=0,this.tree=new l.Folder("MBeans"),this.mbeanTypesToDomain={},this.mbeanServicesToDomain={},this.attributeColumnDefs={},this.onClickRowHandlers={},this.treePostProcessors={},this.topLevelTabs=void 0,this.subLevelTabs=[],this.keyToNodeMap={},this.pluginRegisterHandle=null,this.pluginUpdateCounter=null,this.treeWatchRegisterHandle=null,this.treeWatcherCounter=null,this.treeFetched=!1,this.mapData={},"autoRefresh"in a||(a.autoRefresh=!0),"updateRate"in a||(a.updateRate=5e3)}return t.prototype.createChildWorkspace=function(e){var n=new t(this.jolokia,this.jolokiaStatus,this.jmxTreeLazyLoadRegistry,this.$location,this.$compile,this.$templateCache,this.localStorage,this.$rootScope);return _.forEach(this,function(e,t){return n[t]=e}),n.$location=e,n},t.prototype.getLocalStorage=function(e){return this.localStorage[e]},t.prototype.setLocalStorage=function(e,t){this.localStorage[e]=t},t.prototype.jolokiaList=function(e,t){switch(this.jolokiaStatus.listMethod){case JVM.JolokiaListMethod.LIST_OPTIMISED:a.debug("Invoking Jolokia list mbean in RBAC mode"),t.maxDepth=9,this.jolokia.execute(this.jolokiaStatus.listMBean,"list()",Core.onSuccess(e,t));break;case JVM.JolokiaListMethod.LIST_GENERAL:case JVM.JolokiaListMethod.LIST_CANT_DETERMINE:default:a.debug("Invoking Jolokia list mbean in general mode"),this.jolokia.list(null,Core.onSuccess(e,t))}},t.prototype.loadTree=function(){var t=this,n=this;if(this.jolokia.isDummy)setTimeout(function(){n.setTreeFetched(),n.populateTree({value:{}})},10);else{var e={ignoreErrors:!0,error:function(e){n.setTreeFetched(),a.debug("Error fetching JMX tree:",e)},ajaxError:function(e){n.setTreeFetched(),a.debug("Error fetching JMX tree:",e)}};a.debug("Jolokia:",this.jolokia),this.jolokiaList(function(e){t.jolokiaStatus.xhr=null,n.setTreeFetched(),n.populateTree({value:t.unwindResponseWithRBACCache(e)})},e)}},t.prototype.addNamedTreePostProcessor=function(e,t){this.treePostProcessors[e]=t;var n=this.tree;return this.treeFetched&&n&&t(n),e},t.prototype.removeNamedTreePostProcessor=function(e){delete this.treePostProcessors[e]},t.prototype.maybeMonitorPlugins=function(){if(this.treeContainsDomainAndProperties("hawtio",{type:"Registry"})){if(null===this.pluginRegisterHandle){var e=angular.bind(this,this.maybeUpdatePlugins);this.pluginRegisterHandle=this.jolokia.register(e,{type:"read",mbean:"hawtio:type=Registry",attribute:"UpdateCounter"})}}else null!==this.pluginRegisterHandle&&(this.jolokia.unregister(this.pluginRegisterHandle),this.pluginRegisterHandle=null,this.pluginUpdateCounter=null);if(this.treeContainsDomainAndProperties("hawtio",{type:"TreeWatcher"})&&null===this.treeWatchRegisterHandle){e=angular.bind(this,this.maybeReloadTree);this.treeWatchRegisterHandle=this.jolokia.register(e,{type:"read",mbean:"hawtio:type=TreeWatcher",attribute:"Counter"})}},t.prototype.maybeUpdatePlugins=function(e){null!==this.pluginUpdateCounter?this.pluginUpdateCounter!==e.value&&Core.parseBooleanValue(localStorage.autoRefresh)&&window.location.reload():this.pluginUpdateCounter=e.value},t.prototype.maybeReloadTree=function(e){var t=this,n=e.value;null!==this.treeWatcherCounter?this.treeWatcherCounter!==n&&(this.treeWatcherCounter=n,this.jolokiaList(function(e){return t.populateTree({value:t.unwindResponseWithRBACCache(e)})},{ignoreErrors:!0,maxDepth:8})):this.treeWatcherCounter=n},t.prototype.unwindResponseWithRBACCache=function(e){if(e.domains&&e.cache){for(var t in e.domains){Core.escapeDots(t);var n=e.domains[t];for(var i in n)_.isString(n[i])&&(n[i]=e.cache[""+n[i]])}return e.domains}return e},t.prototype.populateTree=function(e){var n=this;a.debug("JMX tree has been loaded, data:",e.value),this.mbeanTypesToDomain={},this.mbeanServicesToDomain={},this.keyToNodeMap={};var i=new l.Folder("MBeans",!0),t=e.value;_.forEach(t,function(e,t){n.populateDomainFolder(i,n.escapeTagOnly(t),e)}),i.sortChildren(!0),this.enableLazyLoading(i),this.tree=i;var r=this.treePostProcessors;_.forIn(r,function(e,t){a.debug("Running tree post processor:",t),e(i)}),k.debug("Populated JMX tree:",this.tree),this.maybeMonitorPlugins(),this.jmxTreeUpdated()},t.prototype.setTreeFetched=function(){this.treeFetched=!0;var e=this.$rootScope;e&&(Core.$apply(e),e.$broadcast(l.TreeEvent.Fetched))},t.prototype.jmxTreeUpdated=function(){var e=this.$rootScope;e&&(Core.$apply(e),e.$broadcast(l.TreeEvent.Updated))},t.prototype.populateDomainFolder=function(e,t,n){var i=this;k.debug("JMX tree domain:",t);var r=Core.escapeDots(t),o=e.getOrElse(t);this.initFolder(o,t,[t]),_.forEach(n,function(e,t){i.populateMBeanFolder(o,r,t,e)})},t.prototype.escapeTagOnly=function(e){var t={"<":"&lt;",">":"&gt;"};if(!angular.isString(e))return e;for(var n="",i=0;i<e.length;i++){var r=e.charAt(i);n+=t[r]||r}return n},t.prototype.populateMBeanFolder=function(e,t,n,i){var r=this;k.debug("  JMX tree mbean:",n);for(var o,a={},s=[],l=null,c=null,d=new RegExp("(([^=,]+)=(\\\\\"[^\"]+\\\\\"|\\\\'[^']+\\\\'|\"[^\"]+\"|'[^']+'|[^,]+))|([^=,]+)","g");null!==(o=d.exec(n));){var u=o[0],p=this.splitMBeanProperty(u),h=p[0],g=this.escapeTagOnly(Core.trimQuotes(p[1]||h));a[h]=g;var m=-1,f=h.toLowerCase();"type"===f&&(l=g,e.get(g)?m=0:a.name&&(m=_.findIndex(s,_.matchesProperty("key","name")))),"service"===f&&(c=g),0<=m?s.splice(m,0,{key:f,value:g}):s.push({key:f,value:g})}Core.reorderPathsIfRequired(e.text,s);var b=e,v=e.domain,y=_.clone(e.folderNames),w=s.pop().value;s.map(function(e){return e.value}).forEach(function(e){b=b.getOrElse(e),y.push(e),r.configureFolder(b,v,t,y,e)}),b=b.getOrElse(w),y.push(w),this.configureFolder(b,v,t,y,w);var C=v+":"+n;b.configureMBean(a,C,i,l),c&&this.addFolderByDomain(b,v,c,this.mbeanServicesToDomain),l&&this.addFolderByDomain(b,v,l,this.mbeanTypesToDomain)},t.prototype.splitMBeanProperty=function(e){var t=e.indexOf("=");return 0<t?[e.substr(0,t),e.substr(t+1)]:[e,e]},t.prototype.initFolder=function(e,t,n){e.init(t,n),k.debug("    folder: domain="+e.domain+", key="+e.key)},t.prototype.configureFolder=function(e,t,n,i,r){this.initFolder(e,t,_.clone(i)),(this.keyToNodeMap[e.key]=e).configureClass(n,i,r)},t.prototype.addFolderByDomain=function(e,t,n,i){var r=i[n];r||(r={},i[n]=r);var o=r[t];if(o){var a=null;angular.isArray(o)?a=o:(a=[o],r[t]=a),a.push(e)}else r[t]=e},t.prototype.enableLazyLoading=function(e){var t=this,n=e.children;n&&n.length?angular.forEach(n,function(e){return t.enableLazyLoading(e)}):l.findLazyLoadingFunction(this,e)?e.lazyLoad=!0:e.icon="fa fa-cube"},t.prototype.hash=function(){var e=this.$location.search(),t=Core.hashToString(e);return t?"?"+t:""},t.prototype.getActiveTab=function(){var t=this;return _.find(this.topLevelTabs,function(e){return angular.isDefined(e.isActive)?e.isActive(t):t.isLinkActive(e.href())})},t.prototype.getStrippedPathName=function(){var e=Core.trimLeading(this.$location.path()||"/","#");return e=e.replace(/^\//,"")},t.prototype.linkContains=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=this.getStrippedPathName();return _.every(e,function(e){return 0!==n.indexOf(e)})},t.prototype.isLinkActive=function(e){var t=this.getStrippedPathName(),n=Core.trimLeading(e,"#"),i=(n=n.replace(/^\//,"")).indexOf("?");return 0<=i&&(n=n.substring(0,i)),t.length?_.startsWith(t,n):n===t},t.prototype.isLinkPrefixActive=function(e){var t=this.getStrippedPathName(),n=Core.trimLeading(e,"#"),i=(n=n.replace(/^\//,"")).indexOf("?");return 0<=i&&(n=n.substring(0,i)),_.startsWith(t,n)},t.prototype.isTopTabActive=function(e){var t=this.$location.search().tab;return angular.isString(t)?_.startsWith(t,e):this.isLinkActive(e)},t.prototype.isMainTabActive=function(e){var t=this.$location.search()["main-tab"];return!!angular.isString(t)&&t===e},t.prototype.getSelectedMBeanName=function(){var e=this.getSelectedMBean();return e?e.objectName:null},t.prototype.getSelectedMBean=function(){if(this.selection)return this.selection;a.debug("Location:",this.$location);var t=this.$location.search().nid;if(t&&this.tree){var e=this.tree.findDescendant(function(e){return t===e.key});return this.selection||(this.selection=e),e}return null},t.prototype.validSelection=function(e){return!0},t.prototype.removeAndSelectParentNode=function(){var t=this.selection;if(t){var e=t.parent;if(e){var n=e.children.indexOf(t);n<0&&(n=_.findIndex(e.children,function(e){return e.key===t.key})),0<=n&&e.children.splice(n,1),this.updateSelectionNode(e)}}},t.prototype.selectParentNode=function(){var e=this.selection;if(e){var t=e.parent;t&&this.updateSelectionNode(t)}},t.prototype.selectionViewConfigKey=function(){return this.selectionConfigKey("view/")},t.prototype.selectionConfigKey=function(e){void 0===e&&(e="");var t=null,n=this.selection;if(n){t=e+n.domain;var i=n.typeName;i||(i=n.text),t+="/"+i,n.isFolder()&&(t+="/folder")}return t},t.prototype.moveIfViewInvalid=function(){var n=this,e=Core.trimLeading(this.$location.path(),"/");if(this.selection){var t=this.selectionViewConfigKey();if(this.validSelection(e))return this.setLocalStorage(t,e),!1;a.info("the uri '"+e+"' is not valid for this selection");var i=this.getLocalStorage(t);return i&&this.validSelection(i)||(i=null,angular.forEach(this.subLevelTabs,function(e){var t=e.isValid;!i&&e.href&&angular.isDefined(t)&&t(n)&&(i=e.href())})),i||(i="#/jmx/help"),a.info("moving the URL to be",i),_.startsWith(i,"#")&&(i=i.substring(1)),this.$location.path(i),!0}return!1},t.prototype.updateSelectionNode=function(e){var t=null;if((this.selection=e)&&(t=e.key),t){var n=this.$location,i=n.search();i.nid=t,n.search(i)}this.broadcastSelectionNode()},t.prototype.broadcastSelectionNode=function(){this.selection&&this.$rootScope.$broadcast(l.TreeEvent.NodeSelected,this.selection)},t.prototype.matchesProperties=function(e,t){if(!e)return!1;for(var n in t){var i=t[n];if(!i||e[n]!==i)return!1}return!0},t.prototype.hasInvokeRightsForName=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(!e)return!0;var i=Core.parseMBean(e);if(!i)return a.debug("Failed to parse mbean name",e),!0;var r=this.findMBeanWithProperties(i.domain,i.attributes);return r?this.hasInvokeRights.apply(this,[r].concat(t)):(a.debug("Failed to find mbean folder with name",e),!0)},t.prototype.hasInvokeRights=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(!e)return!0;var i=e.mbean;if(!i)return!0;var r=!0;if(angular.isDefined(i.canInvoke)&&(r=i.canInvoke),r&&t&&0<t.length){var o=i.opByString,a=i.op;o&&a&&(r=this.resolveCanInvokeInOps(a,o,t))}return r},t.prototype.resolveCanInvokeInOps=function(n,i,e){var r=this,o=!0;return e.forEach(function(e){if(o){var t=null;(t=_.endsWith(e,")")?i[e]:n[e])?o=r.resolveCanInvoke(t):a.debug("Could not find method:",e,"to check permissions, skipping")}}),o},t.prototype.resolveCanInvoke=function(e){if(!angular.isArray(e))return!angular.isDefined(e.canInvoke)||e.canInvoke;var t=_.find(e,function(e){return angular.isDefined(e.canInvoke)&&!e.canInvoke});return!angular.isDefined(t)},t.prototype.treeContainsDomainAndProperties=function(t,n){var i=this;void 0===n&&(n=null);var e=this.tree;if(!e)return!1;var r=e.get(t);if(!r)return!1;if(n){var o=r.children||[],a=function(e){return!!i.matchesProperties(e.entries,n)||!!(e.domain===t&&e.children&&0<e.children.length)&&e.children.some(a)};return o.some(a)}return!0},t.prototype.matches=function(e,t,n){if(!e)return!1;var i=e.entries;if(t){if(!i)return!1;for(var r in t){var o=i[r],a=t[r];if(!a)return!1;if(_.startsWith(a,"*")){if(!_.endsWith(o,a.substr(1)))return!1}else if(_.endsWith(a,"*")){if(!_.startsWith(o,a.substr(0,a.length-1)))return!1}else if(o!==a)return!1}}return!n||i&&Object.keys(i).length===n},t.prototype.hasDomainAndProperties=function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=null);var i=this.selection;return!!i&&(this.matches(i,t,n)&&i.domain===e)},t.prototype.findMBeanWithProperties=function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=null);var i=this.tree;return i?this.findChildMBeanWithProperties(i.get(e),t,n):null},t.prototype.findChildMBeanWithProperties=function(e,t,n){var i=this;void 0===t&&(t=null),void 0===n&&(n=null);var r=this;if(e){var o=e.children;if(o){var a=_.find(o,function(e){return i.matches(e,t,n)});if(a)return a;if(a=_.find(o.map(function(e){return r.findChildMBeanWithProperties(e,t,n)}),function(e){return e}))return a}}return null},t.prototype.selectionHasDomainAndLastFolderName=function(e,t){var n=(t||"").toLowerCase();function i(e){return(e||"").toLowerCase()===n}var r=this.selection;if(r&&e===r.domain){var o=r.folderNames;if(o)return(i(_.last(o))||i(r.text))&&r.isFolder()&&!r.objectName}return!1},t.prototype.selectionHasDomain=function(e){var t=this.selection;return!!t&&e===t.domain},t.prototype.selectionHasDomainAndType=function(e,t){var n=this.selection;return!!n&&(e===n.domain&&t===n.typeName)},t.prototype.hasMBeans=function(){var e=!1,t=this.tree;if(t){var n=t.children;_.isArray(n)&&0<n.length&&(e=!0)}return e},t.prototype.hasFabricMBean=function(){return this.hasDomainAndProperties("io.fabric8",{type:"Fabric"})},t.prototype.isFabricFolder=function(){return this.hasDomainAndProperties("io.fabric8")},t.prototype.isCamelContext=function(){return this.hasDomainAndProperties("org.apache.camel",{type:"context"})},t.prototype.isCamelFolder=function(){return this.hasDomainAndProperties("org.apache.camel")},t.prototype.isEndpointsFolder=function(){return this.selectionHasDomainAndLastFolderName("org.apache.camel","endpoints")},t.prototype.isEndpoint=function(){return this.hasDomainAndProperties("org.apache.camel",{type:"endpoints"})},t.prototype.isRoutesFolder=function(){return this.selectionHasDomainAndLastFolderName("org.apache.camel","routes")},t.prototype.isRoute=function(){return this.hasDomainAndProperties("org.apache.camel",{type:"routes"})},t.prototype.isComponentsFolder=function(){return this.selectionHasDomainAndLastFolderName("org.apache.camel","components")},t.prototype.isComponent=function(){return this.hasDomainAndProperties("org.apache.camel",{type:"components"})},t.prototype.isDataformatsFolder=function(){return this.selectionHasDomainAndLastFolderName("org.apache.camel","dataformats")},t.prototype.isDataformat=function(){return this.hasDomainAndProperties("org.apache.camel",{type:"dataformats"})},t.prototype.isOsgiFolder=function(){return this.hasDomainAndProperties("osgi.core")},t.prototype.isKarafFolder=function(){return this.hasDomainAndProperties("org.apache.karaf")},t.prototype.isOsgiCompendiumFolder=function(){return this.hasDomainAndProperties("osgi.compendium")},t}();l.Workspace=e}(Jmx||(Jmx={})),function(o){var e=function(){function e(e,t,n){this.$rootScope=e,this.$q=t,this.workspace=n}return e.$inject=["$rootScope","$q","workspace"],e.prototype.treeContainsDomainAndProperties=function(e,t){var n=this;return void 0===t&&(t=null),this.runWhenTreeReady(function(){return n.workspace.treeContainsDomainAndProperties(e,t)})},e.prototype.findMBeanWithProperties=function(e,t,n){var i=this;return void 0===t&&(t=null),void 0===n&&(n=null),this.runWhenTreeReady(function(){return i.workspace.findMBeanWithProperties(e,t,n)})},e.prototype.getSelectedMBean=function(){var e=this;return this.runWhenTreeSelectionReady(function(){return e.workspace.getSelectedMBean()})},e.prototype.getSelectedMBeanName=function(){var e=this;return this.runWhenTreeSelectionReady(function(){return e.workspace.getSelectedMBeanName()})},e.prototype.runWhenTreeReady=function(i){var r=this;return this.$q(function(e,t){if(r.workspace.treeFetched)e(i());else var n=r.$rootScope.$on(o.TreeEvent.Updated,function(){n(),e(i())})})},e.prototype.runWhenTreeSelectionReady=function(i){var r=this;return this.$q(function(e,t){if(r.workspace.selection)e(i());else var n=r.$rootScope.$on(o.TreeEvent.NodeSelected,function(){n(),e(i())})})},e}();o.TreeService=e}(Jmx||(Jmx={})),function(e){var t=function(){function e(e,t){this.workspace=e,this.configManager=t}return e.$inject=["workspace","configManager"],e.prototype.getTabs=function(){var e=[];return(this.hasDiagnosticFunction("jfrCheck")||this.flightRecorderMBean())&&e.push(new Nav.HawtioTab("Flight Recorder","/diagnostics/jfr")),this.hasDiagnosticFunction("gcClassHistogram")&&e.push(new Nav.HawtioTab("Class Histogram","/diagnostics/heap")),this.hasHotspotDiagnostic()&&e.push(new Nav.HawtioTab("Hotspot Diagnostic","/diagnostics/flags")),e},e.prototype.hasHotspotDiagnostic=function(){return this.workspace.treeContainsDomainAndProperties("com.sun.management",{type:"HotSpotDiagnostic"})},e.prototype.hasDiagnosticFunction=function(e){var t=this.workspace.findMBeanWithProperties("com.sun.management",{type:"DiagnosticCommand"});return t&&t.mbean&&t.mbean.op&&!!t.mbean.op[e]},e.prototype.flightRecorderMBean=function(){return this.workspace.findMBeanWithProperties("jdk.management.jfr",{type:"FlightRecorder"})?"jdk.management.jfr:type=FlightRecorder":this.workspace.findMBeanWithProperties("jdk.jfr.management",{type:"FlightRecorder"})?"jdk.jfr.management:type=FlightRecorder":null},e}();e.DiagnosticsService=t}(Diagnostics||(Diagnostics={})),function(i){function e(u,e,t){var p,h;function n(e){e.value;for(var t=e.value.split("\n"),n=[],i={},r={},o=0;o<t.length;o++){var a=t[o].match(/\s*(\d+):\s*(\d+)\s*(\d+)\s*(\S+)\s*/);if(a&&5<=a.length){var s=m(a[4]),l=a[2],c=a[3],d={count:l,bytes:c,name:s,deltaCount:g(p,s,l),deltaBytes:g(h,s,c)};n.push(d),i[s]=l,r[s]=c}}u.items=n,u.lastLoaded=Date.now(),p=i,h=r,Core.$apply(u),setTimeout(function(){u.loading=!1,Core.$apply(u)})}function g(e,t,n){if(!e)return"";var i=e[t];return i?i-n:n}function m(e){if(1==e.length)switch(e.charAt(0)){case"I":return"int";case"S":return"short";case"C":return"char";case"Z":return"boolean";case"D":return"double";case"F":return"float";case"J":return"long";case"B":return"byte"}else switch(e.charAt(0)){case"[":return m(e.substring(1))+"[]";case"L":if(e.endsWith(";"))return m(e.substring(1,e.indexOf(";")));default:return e}}u.items=[],u.loading=!1,u.lastLoaded=null,u.toolbarConfig={actionsConfig:{actionsInclude:!0},isTableView:!0},u.tableConfig={selectionMatchProp:"name",showCheckboxes:!1},u.tableDtOptions={order:[[2,"desc"]]},u.pageConfig={pageSize:20},u.tableColumns=[{header:"Class Name",itemField:"name"},{header:"Bytes",itemField:"bytes"},{header:"Bytes Delta",itemField:"deltaBytes"},{header:"Instances",itemField:"count"},{header:"Instances Delta",itemField:"deltaCount"}],u.loadClassStats=function(){u.loading=!0,Core.$apply(u),e.request({type:"exec",mbean:"com.sun.management:type=DiagnosticCommand",operation:"gcClassHistogram([Ljava.lang.String;)",arguments:[""]},{success:n,error:function(e){i.log.error("Failed to get class histogram: "+e.error),u.loading=!1,Core.$apply(u)}})}}e.$inject=["$scope","jolokia","diagnosticsService"],i.DiagnosticsHeapController=e}(Diagnostics||(Diagnostics={})),function(c){function e(o,e,t,a,n,i,s){o.jfrSettings={limitType:"unlimited",limitValue:"",name:"",dumpOnExit:!0,recordingNumber:"",filename:"",configuration:"default"},o.forms={},o.recordings=[],o.settingsVisible=!1,o.toggleSettingsVisible=function(){o.settingsVisible=!o.settingsVisible,Core.$apply(o)},o.formConfig={properties:{name:{type:"java.lang.String",tooltip:"Name for this connection","input-attributes":{placeholder:"Recording name (optional)..."}},limitType:{type:"java.lang.String",tooltip:"Duration if any",enum:["unlimited","duration","maxsize"]},limitValue:{type:"java.lang.String",tooltip:"Limit value. duration: [val]s/m/h, maxsize: [val]kB/MB/GB",required:!1,"input-attributes":{"ng-show":"jfrSettings.limitType != 'unlimited'"}},dumpOnExit:{type:"java.lang.Boolean",tooltip:"Automatically dump recording on VM exit"},filename:{type:"java.lang.String",tooltip:"Filename","input-attributes":{placeholder:"Specify file name *.jfr (optional)..."}}}};var l=i.flightRecorderMBean();l?function(i){var r=-1;function t(e){var t;null==e&&(e=a.getAttribute(l,"Recordings")),i.recordings=[];for(var n=0;n<e.length;n++)"STOPPED"===(t=e[n]).state&&i.recordings.push({number:""+t.id,size:t.size+" b",file:null,time:t.stopTime,canDownload:!0,downloadLink:s+"/exec/jdk.management.jfr:type=FlightRecorder/downloadRecording(long)/"+t.id});t&&("RUNNING"===t.state?(i.isRecording=!0,i.isRunning=!0):(i.isRunning=!1,i.isRecording=!1),i.jfrStatus="Recording "+t.id+" name: "+t.name+" ("+t.state+")"),r=t&&"STOPPED"!==t.state?t.id:a.execute(l,"newRecording"),function(e,t,n){e.dumpOnExit="true"===t.dumpOnExit,e.filename=null,e.name=t.name,e.recordingNumber=""+n,"0"!=t.duration&&(e.limitType="duration",e.limitValue=t.duration),"0"!=t.maxSize&&(e.limitType="maxsize",e.limitValue=t.maxSize)}(i.jfrSettings,a.execute(l,"getRecordingOptions",r),r),Core.$apply(i)}i.unlock=function(){},i.isMessageVisible=function(e){return!1},i.closeMessageForGood=function(e){},i.jfrEnabled=!0,i.configurations=a.getAttribute(l,"Configurations").map(function(e){return e.name}),c.log.info(i.configurations),i.formConfig.properties.configuration={type:"java.lang.String",tooltip:"Configuration for recordings",enum:i.configurations},t(null),i.startRecording=function(){a.execute(l,"setRecordingOptions",r,function(e){var t={name:""+e.name,dumpOnExit:""+e.dumpOnExit};return"duration"===e.limitType?t.duration=e.limitValue:"maxsize"===e.limitType&&(t.maxSize=e.limitValue),t}(i.jfrSettings),{}),a.execute(l,"setPredefinedConfiguration",r,i.jfrSettings.configuration),a.execute(l,"startRecording",r),i.isRecording=!0,t(null)},i.stopRecording=function(){a.execute(l,"stopRecording",r),t(null)},i.dumpRecording=function(){a.execute(l,"takeSnapshot"),t(null)},Core.register(a,o,[{type:"read",attribute:"Recordings",mbean:l}],Core.onSuccess(function(e){t(e.value)}))}(o):function(i){function r(e){var t=e.value;if(o.jfrEnabled=-1==t.indexOf("not enabled"),o.isRunning=-1<t.indexOf("(running)"),o.isRecording=o.isRunning||-1<t.indexOf("(stopped)"),(-1<t.indexOf("Use JFR.")||-1<t.indexOf("Use VM."))&&o.pid&&(t=t.replace("Use ","Use command line: jcmd "+o.pid+" ")),o.jfrStatus=t,o.isRecording){var n=/ecording.(\d+):* name="*(.+?)"*/g;o.isRunning&&(n=/ecording.(\d+):* name="*(.+?)"* \(running\)/g);var i=n.exec(t);o.jfrSettings.recordingNumber=i[1],o.jfrSettings.name=i[2];var r=t.match(/filename="(.+)"/);r&&r[1]?o.jfrSettings.filename=r[1]:o.jfrSettings.filename="recording"+i[1]+".jfr"}Core.$apply(o)}function t(t,e,arguments,n){c.log.debug(Date.now()+" Invoking operation "+t+" with arguments"+arguments+" settings: "+JSON.stringify(o.jfrSettings)),o.jcmd="jcmd "+o.pid+" "+e+" "+function(arguments){for(var e="",t=!0,n=0;n<arguments.length;n++)t?t=!1:e+=",",e+=arguments[n];return e}(arguments),a.request([{type:"exec",operation:t,mbean:"com.sun.management:type=DiagnosticCommand",arguments:arguments},{type:"exec",operation:"jfrCheck([Ljava.lang.String;)",mbean:"com.sun.management:type=DiagnosticCommand",arguments:[""]}],Core.onSuccess(function(e){c.log.debug("Diagnostic Operation "+t+" was successful"+e.value),-1<e.request.operation.indexOf("jfrCheck")?r(e):(n&&n(e.value),Core.$apply(o))},{error:function(e){c.log.warn("Diagnostic Operation "+t+" failed",e)}}))}i.pid=function(){var e=a.getAttribute("java.lang:type=Runtime","Name"),t=/(\d+)@/g,n=t.exec(e);return n&&n[1]?n[1]:null}(),i.unlock=function(){t("vmUnlockCommercialFeatures()","VM.unlock_commercial_features",[],null)},i.startRecording=function(){i.isRecording&&(i.jfrSettings.name=null,i.jfrSettings.filename=null),t("jfrStart([Ljava.lang.String;)","JFR.start",[function(e){var t=[];return e.name&&0<e.name.length&&t.push('name="'+e.name+'"'),e.filename&&0<e.filename.length&&t.push('filename="'+e.filename+'"'),t.push("dumponexit="+e.dumpOnExit),"unlimited"!=e.limitType&&t.push(e.limitType+"="+e.limitValue),t}(i.jfrSettings)],null)},i.dumpRecording=function(){t("jfrDump([Ljava.lang.String;)","JFR.dump",[function(e){return['filename="'+e.filename+'"','name="'+e.name+'"']}(i.jfrSettings)],function(e){var t=function(e){return e.match(/Dumped recording "(.+)",(.+) written to:\r?\n\r?\n(.+)/)}(e);if(c.log.debug("response: "+e+" split: "+t+"split2: "+t),t){var n={number:t[1],size:t[2],file:t[3],time:Date.now(),canDownload:!1,downloadLink:null};c.log.debug("data: "+n),function(e,t){for(var n=0;n<t.length;n++)if(t[n].file===e.file)return t[n]=e;t.push(e)}(n,i.recordings)}})},i.closeMessageForGood=function(e){n[e]="false"},i.isMessageVisible=function(e){return"false"!==n[e]},i.stopRecording=function(){var e=i.jfrSettings.name;i.jfrSettings.filename="",i.jfrSettings.name="",t("jfrStop([Ljava.lang.String;)","JFR.stop",['name="'+e+'"'],null)},Core.register(a,o,[{type:"exec",operation:"jfrCheck([Ljava.lang.String;)",mbean:"com.sun.management:type=DiagnosticCommand",arguments:[""]}],Core.onSuccess(r))}(o)}e.$inject=["$scope","$location","workspace","jolokia","localStorage","diagnosticsService","jolokiaUrl"],c.DiagnosticsJfrController=e}(Diagnostics||(Diagnostics={})),function(e){var t=function(){function e(e){this.diagnosticsService=e}return e.$inject=["diagnosticsService"],e.prototype.$onInit=function(){this.tabs=this.diagnosticsService.getTabs()},e}();e.DiagnosticsController=t,e.diagnosticsComponent={template:'<hawtio-tabs-layout tabs="$ctrl.tabs"></hawtio-tabs-layout>',controller:t}}(Diagnostics||(Diagnostics={})),function(e){function t(e){e.when("/diagnostics/jfr",{templateUrl:"plugins/diagnostics/html/jfr.html"}).when("/diagnostics/heap",{templateUrl:"plugins/diagnostics/html/heap.html"}).when("/diagnostics/flags",{templateUrl:"plugins/diagnostics/html/flags.html"})}function n(e){e.addUserDoc("diagnostics","plugins/diagnostics/doc/help.md")}function i(e,t){e.addItem({title:"Diagnostics",basePath:"/diagnostics",template:"<diagnostics></diagnostics>",isValid:function(){return 0<t.getTabs().length},rank:-1})}t.$inject=["$routeProvider"],n.$inject=["helpRegistry"],i.$inject=["mainNavService","diagnosticsService"],e.configureRoutes=t,e.configureHelp=n,e.configureMainNav=i}(Diagnostics||(Diagnostics={})),function(e){var t="hawtio-jmx-diagnostics";e.log=Logger.get(t),e._module=angular.module(t,[]).config(e.configureRoutes).run(e.configureHelp).run(e.configureMainNav).component("diagnostics",e.diagnosticsComponent).controller("DiagnosticsJfrController",e.DiagnosticsJfrController).controller("DiagnosticsHeapController",e.DiagnosticsHeapController).controller("DiagnosticsFlagsController",e.DiagnosticsFlagsController).service("diagnosticsService",e.DiagnosticsService),hawtioPluginLoader.addModule(t)}(Diagnostics||(Diagnostics={})),(Jmx||(Jmx={})).jmxComponent={template:'\n      <div class="tree-nav-layout">\n        <div class="sidebar-pf sidebar-pf-left" resizable r-directions="[\'right\']">\n          <tree-header></tree-header>\n          <tree></tree>\n        </div>\n        <div class="tree-nav-main">\n          <jmx-header></jmx-header>\n          <jmx-navigation></jmx-navigation>\n          <div class="contents" ng-view></div>\n        </div>\n      </div>\n    '},function(r){function e(e){e.when("/jmx/attributes",{templateUrl:"plugins/jmx/html/attributes/attributes.html"}).when("/jmx/operations",{template:"<operations></operations>"}).when("/jmx/charts",{templateUrl:"plugins/jmx/html/charts.html"}).when("/jmx/charts/edit",{templateUrl:"plugins/jmx/html/chartEdit.html"})}function t(e){e.addUserDoc("jmx","plugins/jmx/doc/help.md")}function n(e,t){e.addItem({title:"JMX",basePath:"/jmx",template:"<jmx></jmx>",isValid:function(){return t.hasMBeans()}})}function i(e,t){e.addTitleElement(function(){if(""===r.currentProcessId){try{r.currentProcessId=t.getAttribute("java.lang:type=Runtime","Name")}catch(e){}r.currentProcessId&&-1!==r.currentProcessId.indexOf("@")&&(r.currentProcessId="pid:"+r.currentProcessId.split("@")[0])}return r.currentProcessId})}function o(e,n,t,i){t.registerInitFunction(function(){return r.log.info("Jmx.initializeTree: initializing..."),e(function(e){i.loadTree();var t=n.$on(r.TreeEvent.Fetched,function(){t(),r.log.info("Jmx.initializeTree: initialized"),e()})})})}e.$inject=["$routeProvider"],t.$inject=["helpRegistry"],n.$inject=["mainNavService","workspace"],i.$inject=["pageTitle","jolokia"],o.$inject=["$q","$rootScope","initService","workspace"],r.currentProcessId="",r.configureRoutes=e,r.configureHelp=t,r.configureMainNav=n,r.configurePageTitle=i,r.initializeTree=o}(Jmx||(Jmx={})),function(C){e.$inject=["$scope","$location","workspace","localStorage","$uibModal","attributesService"];var k=[{field:"name",displayName:"Attribute"},{field:"value",displayName:"Value"}],u=[{field:"title",displayName:"Name"}];function e(g,t,m,l,i,c){var f=[];g.nid="empty",g.selectedItems=[],g.lastKey=null,g.attributesInfoCache=null,g.entity={},g.attributeSchema={},g.gridData=[],g.columnDefs=[];var r={properties:{key:{type:"string",readOnly:"true"},description:{description:"Description",type:"string",formTemplate:"<textarea class='form-control' rows='2' readonly='true'></textarea>"},type:{type:"string",readOnly:"true"},jolokia:{label:"Jolokia&nbsp;URL",type:"string",formTemplate:'\n            <div class="hawtio-clipboard-container">\n              <button hawtio-clipboard="#attribute-jolokia-url" class="btn btn-default">\n                <i class="fa fa-clipboard" aria-hidden="true"></i>\n              </button>\n              <input type="text" id="attribute-jolokia-url" class=\'form-control\' style="padding-right: 26px" value="{{entity.jolokia}}" readonly=\'true\'>\n            </div>\n          '}}},e=t.url();_.endsWith(e,"/jmx/attributes")&&(C.log.debug("Reset selection in JMX plugin"),m.selection=null,g.lastKey=null),g.nid=t.search().nid,C.log.debug("attribute - nid: ",g.nid);var n=_.debounce(function(){var t=m.getSelectedMBeanName();t&&null===g.attributesInfoCache?c.listMBean(t,Core.onSuccess(function(e){g.attributesInfoCache=e.value,C.log.debug("Updated attributes info cache for mbean",t,g.attributesInfoCache),a()})):a()},50,{leading:!1,trailing:!0});function o(e,t){g.entity={key:e.key,description:e.attrDesc,type:e.type,jolokia:c.buildJolokiaUrl(m.getSelectedMBeanName(),e.key),rw:t};var n=function(e){var t=e.summary.length/40+1;10<t&&(t=10);return t}(e);!g.entity.rw?("&nbsp;"===e.summary?g.entity.attrValueView="":g.entity.attrValueView=e.summary,function(e,t){for(var n in e.attributeSchemaView={},r)e.attributeSchemaView[n]=r[n];e.attributeSchemaView.properties.attrValueView={description:"Value",label:"Value",type:"string",formTemplate:'<textarea id="attribute-value" class=\'form-control\' style="overflow-y: scroll" rows=\''+t+"' readonly='true'></textarea>\n        "},e.attributeSchemaView&&delete e.attributeSchemaView.properties.attrValueEdit}(g,n)):("&nbsp;"===e.summary?g.entity.attrValueEdit="":g.entity.attrValueEdit=e.summary,function(e,t){for(var n in e.attributeSchemaEdit={},r)e.attributeSchemaEdit[n]=r[n];e.attributeSchemaEdit.properties.attrValueEdit={description:"Value",label:"Value",type:"string",formTemplate:'<textarea id="attribute-value" class=\'form-control\' style="overflow-y: scroll" rows=\''+t+"'></textarea>"},e.attributeSchemaEdit&&delete e.attributeSchemaEdit.properties.attrValueView}(g,n)),i.open({templateUrl:"attributeModal.html",scope:g,size:"lg"}).result.then(function(){var e=m.getSelectedMBeanName();if(e){var t=g.entity.attrValueEdit,n=g.entity.key;c.update(e,n,t)}g.entity={}}).catch(function(){g.entity={}})}function a(){c.unregisterJolokia(g),g.gridData=[],g.mbeanIndex=null;var e=m.getSelectedMBeanName(),t=m.selection,n=null;if(e)n={type:"read",mbean:e},(_.isNil(t)||t.key!==g.lastKey)&&(g.columnDefs=k);else if(t){t.key!==g.lastKey&&(g.columnDefs=[]);var i=t.children;if(i){var r=i.map(function(e){return e.objectName}).filter(function(e){return FilterHelpers.search(e,"")}),o=l.jmxMaxFolderSize;if(r=r.slice(0,o)){var a=C.getUniqueTypeNames(i);if(a.length<=1){var s=r.map(function(e){return{type:"READ",mbean:e,ignoreErrors:!0}});0<s.length&&(n=s,g.mbeanIndex={},g.mbeanRowCounter=0,g.mbeanCount=r.length)}else C.log.debug("Too many type names ",a)}}}n?(g.request=n,c.registerJolokia(g,n,Core.onSuccess(d))):t&&(t.key!==g.lastKey&&(g.columnDefs=u),g.gridData=t.children),t&&(g.lastKey=t.key,g.title=t.text),Core.$apply(g)}function d(e){var n=e.value,t=g.mbeanIndex,i=e.request.mbean;if(i&&(n._id=i),t)if(i){var r=t[i];if(angular.isDefined(r)||(r=g.mbeanRowCounter,t[i]=r,g.mbeanRowCounter+=1),0===r&&(g.selectedIndices=g.selectedItems.map(function(e){return g.gridData.indexOf(e)}),f=[],!g.columnDefs.length)){var o=m.selectionConfigKey(),a=_.clone(m.attributeColumnDefs[o])||[],s=a.length,l={};angular.forEach(a,function(e,t){var n=e.field;n&&(l[n]=e)});var c=[];_.forEach(n,function(e,t){w(t,e)&&(l[t]||c.push({field:t,displayName:"_id"===t?"Object name":Core.humanizeValue(t),visible:0===s}))}),(c=c.sort(function(e,t){return _.startsWith(e.field,"_")?1:_.startsWith(t.field,"_")?-1:e.field.localeCompare(t.field)})).forEach(function(e){return a.push(e)}),0<c.length&&(g.hasExtraColumns=!0),g.columnDefs=a}_.forEach(n,function(e,t){w(t,e)&&(n[t]=b(e))}),f[r]=n;var d=g.mbeanCount;if(!d||d<=r+1){var u=g.selectedIndices.map(function(e){return g.gridData[e]}).filter(function(e){return e});g.selectedItems.splice(0,g.selectedItems.length),g.selectedItems.push.apply(g.selectedItems,u),g.gridData=f,Core.$apply(g)}}else C.log.info("No mbean name in request",JSON.stringify(e.request));else{g.columnDefs=k;if(_.isObject(n)){var p=[];if(_.forEach(n,function(e,t){if(!_.startsWith(t,"_")){"ObjectName"===t&&(e=v(e)),_.isArray(e)&&(e=e.map(function(e){return v(e)}));var n=function(e){if(null!=g.attributesInfoCache&&"attr"in g.attributesInfoCache){var t=g.attributesInfoCache.attr[e];if(angular.isDefined(t))return t.type}return null}(t),i={key:t,name:Core.humanizeValue(t),value:b(Core.safeNullAsString(e,n))};y(t,i),p.push(i)}}),!_.some(p,function(e){return"ObjectName"===e.key})){var h={key:"ObjectName",name:"Object Name",value:i};y(h.key,h),p.push(h)}p=_.sortBy(p,"name"),g.selectedItems=[n],n=p}g.gridData=n,Core.$apply(g)}}function b(e){if("string"!=typeof e)return e;return e.match(/^ERROR: Reading attribute .+ \(class java\.lang\.SecurityException\)$/)?"**********":e.match(/^ERROR: java\.lang\.UnsupportedOperationException: .+ \(class javax\.management\.RuntimeMBeanException\)$/)?"(Not supported)":e}function v(e){if(!_.isObject(e))return e;var t=Object.keys(e);return 1===t.length&&"objectName"===t[0]?e.objectName:e}function y(e,t){var n=Core.escapeHtml(t.value);if(!angular.isArray(n)&&angular.isObject(n)){var i="<table class='table table-striped'>",r="",o=n,a=Object.keys(n).sort();angular.forEach(a,function(e){var t=o[e];i+="<tr><td>"+Core.humanizeValue(e)+"</td><td>"+t+"</td></tr>",r+=Core.humanizeValue(e)+": "+t+"  "}),i+="</table>",t.summary=r,t.detailHtml=i,t.tooltip=r}else{var s=n;if(t.tooltip=""===s?(s="&nbsp;",""):s,t.summary=""+s,t.detailHtml="<pre>"+s+"</pre>",angular.isArray(n)){var l="<ul>";angular.forEach(n,function(e){return l+="<li>"+e+"</li>"}),l+="</ul>",t.detailHtml=l}}if(t.rw=!1,t.attrDesc=t.name,t.type="string",null!=g.attributesInfoCache&&"attr"in g.attributesInfoCache){var c=g.attributesInfoCache.attr[e];angular.isDefined(c)&&(t.rw=c.rw,t.attrDesc=c.desc,t.type=c.type)}}function w(e,t){return!_.isObject(t)}g.$on(C.TreeEvent.Updated,n),n(),g.onClick=function(e){g.columnDefs===u?function(e){e.key&&t.search("nid",e.key)}(e):g.columnDefs===k&&function(t){if(!t.summary)return;t.rw?c.canInvoke(m.getSelectedMBeanName(),t.key,t.type).then(function(e){return o(t,e)}):o(t,!1)}(e)},g.folderIconClass=function(e){if(g.columnDefs!==u)return"";if(!e.objectName)return"pficon pficon-folder-close";var t=e.mbean;return _.isNil(t)||_.isNil(t.canInvoke)||t.canInvoke?"fa fa-cog":"fa fa-lock"}}C.AttributesController=e}(Jmx||(Jmx={})),function(a){var e=function(){function e(e,t,n,i){this.$q=e,this.jolokia=t,this.jolokiaUrl=n,this.rbacACLMBean=i}return e.$inject=["$q","jolokia","jolokiaUrl","rbacACLMBean"],e.prototype.registerJolokia=function(e,t,n){Core.register(this.jolokia,e,t,n)},e.prototype.unregisterJolokia=function(e){Core.unregister(this.jolokia,e)},e.prototype.listMBean=function(e,t){this.jolokia.request({type:"LIST",method:"post",path:Core.escapeMBeanPath(e),ignoreErrors:!0},t)},e.prototype.canInvoke=function(t,i,r){var o=this;return this.$q(function(n,e){_.isNull(t)||_.isNull(i)||_.isNull(r)?n(!1):o.rbacACLMBean.then(function(e){e||n(!0),o.jolokia.request({type:"exec",mbean:e,operation:"canInvoke(java.lang.String,java.lang.String,[Ljava.lang.String;)",arguments:[t,"set"+i,[r]]},Core.onSuccess(function(e){a.log.debug("rbacACLMBean canInvoke attribute response:",e);var t=e.value;n(t)},{error:function(e){a.log.debug("AttributesService.canInvoke() failed:",e),n(!1)}}))})})},e.prototype.buildJolokiaUrl=function(e,t){return this.jolokiaUrl+"/read/"+Core.escapeMBean(e)+"/"+t},e.prototype.update=function(e,t,n){this.jolokia.setAttribute(e,t,n,Core.onSuccess(function(e){Core.notification("success","Updated attribute "+t)},{error:function(e){a.log.debug("Failed to update attribute",e),Core.notification("danger","Failed to update attribute "+t)}}))},e}();a.AttributesService=e}(Jmx||(Jmx={})),function(e){e.attributesModule=angular.module("hawtio-jmx-attributes",[]).controller("Jmx.AttributesController",e.AttributesController).service("attributesService",e.AttributesService).name}(Jmx||(Jmx={})),function(e){var t=function(){function e(e){var n=this;e.$on("jmxTreeClicked",function(e,t){n.title=t.text,n.objectName=t.objectName})}return e.$inject=["$scope"],e}();e.HeaderController=t,e.headerComponent={template:'\n      <div class="jmx-header">\n        <header>\n          <h1>{{$ctrl.title}}</h1>\n          <p class="text-muted">{{$ctrl.objectName}}</p>\n        </header>\n      </div>\n      ',controller:t}}(Jmx||(Jmx={})),function(e){var t=function(){function e(e,t,n){var i=this;this.$location=t,this.workspace=n,e.$on("jmxTreeClicked",function(){i.tabs=i.getTabs()})}return e.$inject=["$scope","$location","workspace"],e.prototype.$onInit=function(){this.tabs=this.getTabs()},e.prototype.getTabs=function(){var e=[];return e.push(new Nav.HawtioTab("Attributes","/jmx/attributes")),null!==this.workspace.getSelectedMBeanName()&&e.push(new Nav.HawtioTab("Operations","/jmx/operations")),e.push(new Nav.HawtioTab("Chart","/jmx/charts")),e},e.prototype.goto=function(e){this.$location.path(e.path)},e}();e.NavigationController=t,e.navigationComponent={template:'<hawtio-tabs tabs="$ctrl.tabs" on-change="$ctrl.goto(tab)"></hawtio-tabs>',controller:t}}(Jmx||(Jmx={})),function(e){e.commonModule=angular.module("hawtio-jmx-common",[]).component("jmxHeader",e.headerComponent).component("jmxNavigation",e.navigationComponent).name}(Jmx||(Jmx={})),function(e){var t=function(){function i(e,t,n){this.args=t,this.description=n,this.name=i.buildName(e,t),this.readableName=i.buildReadableName(e,t),this.canInvoke=!0}return i.buildName=function(e,t){return e+"("+t.map(function(e){return e.type}).join()+")"},i.buildReadableName=function(e,t){return e+"("+t.map(function(e){return e.readableType()}).join(", ")+")"},i}();e.Operation=t;var n=function(){function e(){}return e.prototype.readableType=function(){var e=this.type.lastIndexOf("."),t=0<e?this.type.substr(e+1):this.type;return _.startsWith(this.type,"[")&&_.endsWith(this.type,";")&&(t=_.trimEnd(t,";")+"[]"),t},e}();e.OperationArgument=n}(Jmx||(Jmx={})),function(a){var e=function(){function e(e,t,n,i,r,o){this.$q=e,this.jolokia=t,this.jolokiaUrl=n,this.workspace=i,this.treeService=r,this.rbacACLMBean=o}return e.$inject=["$q","jolokia","jolokiaUrl","workspace","treeService","rbacACLMBean"],e.prototype.getOperations=function(){var t=this;return this.treeService.getSelectedMBeanName().then(function(e){return e?t.fetchOperations(e):[]})},e.prototype.fetchOperations=function(r){var o=this;return this.$q(function(t,e){o.jolokia.request({type:"list",path:Core.escapeMBeanPath(r)},Core.onSuccess(function(e){var n=[],i={};_.forEach(e.value.op,function(e,t){_.isArray(e)?_.forEach(e,function(e){return o.addOperation(n,i,t,e)}):o.addOperation(n,i,t,e)}),n=_.sortBy(n,function(e){return e.readableName}),_.isEmpty(i)?t(n):o.fetchPermissions(i,r).then(function(){return t(n)})},{error:function(e){return a.log.debug("OperationsService.loadOperations() failed:",e)}}))})},e.prototype.addOperation=function(e,t,n,i){var r=new a.Operation(n,i.args.map(function(e){return _.assign(new a.OperationArgument,e)}),i.desc);e.push(r),t[r.name]=r},e.prototype.fetchPermissions=function(i,r){var o=this;return this.$q(function(n,e){return o.rbacACLMBean.then(function(e){var t;e||n(),o.jolokia.request({type:"exec",mbean:e,operation:"canInvoke(java.util.Map)",arguments:[(t={},t[r]=_.values(i).map(function(e){return e.name}),t)]},Core.onSuccess(function(e){a.log.debug("rbacACLMBean canInvoke operations response:",e);var t=e.value;_.forEach(t[r],function(e,t){i[t].canInvoke=e.CanInvoke}),a.log.debug("Got operations:",i),n()},{error:function(e){return a.log.debug("OperationsService.fetchPermissions() failed:",e)}}))})})},e.prototype.executeOperation=function(i,r,o){var a=this;return void 0===o&&(o=[]),this.$q(function(t,n){var e;(e=a.jolokia).execute.apply(e,__spreadArrays([i,r.name],o,[{success:function(e){null===e||"null"===e?t("Operation Succeeded!"):"string"==typeof e?""===e.trim()?t("Empty string"):t(e):t(angular.toJson(e,!0))},error:function(e){return n(e.stacktrace?e.stacktrace:e.error)}}]))})},e.prototype.buildJolokiaUrl=function(e){var t=Core.escapeMBean(this.workspace.getSelectedMBeanName());return this.jolokiaUrl+"/exec/"+t+"/"+e.name},e}();a.OperationsService=e}(Jmx||(Jmx={})),function(e){var t=function(){function e(e){var i=this;this.operationsService=e,this.config={showSelectBox:!1,useExpandingRows:!0},this.menuActions=[{name:"Copy method name",actionFn:function(e,t){var n=new ClipboardJS(".jmx-operations-list-view .dropdown-menu a",{text:function(e){return t.readableName}});setTimeout(function(){return n.destroy()},1e3),Core.notification("success","Method name copied")}},{name:"Copy Jolokia URL",actionFn:function(e,t){var n=new ClipboardJS(".jmx-operations-list-view .dropdown-menu a",{text:function(e){return i.operationsService.buildJolokiaUrl(t)}});setTimeout(function(){return n.destroy()},1e3),Core.notification("success","Jolokia URL copied")}}]}return e.$inject=["operationsService"],e.prototype.$onInit=function(){var t=this;this.operationsService.getOperations().then(function(e){return t.operations=e})},e}();e.OperationsController=t,e.operationsComponent={templateUrl:"plugins/jmx/html/operations/operations.html",controller:t}}(Jmx||(Jmx={})),function(e){var t=function(){function t(e,t){this.workspace=e,this.operationsService=t,this.editorMode="text",this.isExecuting=!1}return t.$inject=["workspace","operationsService"],t.prototype.$onInit=function(){this.formFields=this.operation.args.map(function(e){return{label:e.name,type:t.convertToHtmlInputType(e.type),helpText:t.buildHelpText(e),value:t.getDefaultValue(e.type)}})},t.prototype.isResultHtml=function(){return!!this.operationResult&&(this.operationResult.startsWith("<!DOCTYPE html>")||/^<table[^>]*>/.test(this.operationResult)||/^<ul[^>]*>/.test(this.operationResult))},t.buildHelpText=function(e){return e.desc&&e.desc!==e.name?("."!==e.desc.charAt(e.desc.length-1)&&(e.desc=e.desc+"."),e.desc=e.desc+" "):e.desc="",e.desc+"Type: "+e.readableType()},t.convertToHtmlInputType=function(e){switch(e){case"boolean":case"java.lang.Boolean":return"checkbox";case"int":case"long":case"java.lang.Integer":case"java.lang.Long":return"number";default:return"text"}},t.getDefaultValue=function(e){switch(e){case"boolean":case"java.lang.Boolean":return!1;case"int":case"long":case"java.lang.Integer":case"java.lang.Long":return 0;default:return""}},t.prototype.execute=function(){var t=this;this.isExecuting=!0;var e=this.workspace.getSelectedMBeanName(),n=this.formFields.map(function(e){return e.value});this.operationsService.executeOperation(e,this.operation,n).then(function(e){t.operationFailed=!1,t.operationResult=e.trim(),t.isExecuting=!1}).catch(function(e){t.operationFailed=!0,t.operationResult=e.trim(),t.isExecuting=!1})},t}();e.OperationFormController=t,e.operationFormComponent={bindings:{operation:"<"},templateUrl:"plugins/jmx/html/operations/operation-form.html",controller:t}}(Jmx||(Jmx={})),function(e){e.operationsModule=angular.module("hawtio-jmx-operations",["ngSanitize"]).component("operations",e.operationsComponent).component("operationForm",e.operationFormComponent).service("operationsService",e.OperationsService).name}(Jmx||(Jmx={})),function(t){var e=function(){function e(e,t){this.$scope=e,this.$element=t,this.filter="",this.result=[],t.addClass("tree-nav-sidebar-header")}return e.$inject=["$scope","$element"],e.prototype.$onInit=function(){var n=this;this.$scope.$watch(angular.bind(this,function(){return n.filter}),function(e,t){e!==t&&n.search(e)})},e.prototype.search=function(e){var i=this;_.debounce(function(e){var t,n=i.tree().search(e,{ignoreCase:!0,exactMatch:!1,revealResults:!0});i.result.length=0,(t=i.result).push.apply(t,n),Core.$apply(i.$scope)},300,{leading:!1,trailing:!0})(e)},e.prototype.tree=function(){return $(t.treeElementId).treeview(!0)},e.prototype.expandAll=function(){return this.tree().expandNode(this.tree().getNodes(),{levels:HawtioTree.getMaxTreeLevel(this.tree()),silent:!0})},e.prototype.contractAll=function(){return this.tree().collapseNode(this.tree().getNodes(),{ignoreChildren:!0,silent:!0})},e}();t.TreeHeaderController=e}(Jmx||(Jmx={})),function(e){e.treeHeaderComponent={templateUrl:"plugins/jmx/html/tree/header.html",controller:e.TreeHeaderController}}(Jmx||(Jmx={})),function(n){var e=function(){function e(e,t,n,i,r){this.$scope=e,this.$location=t,this.workspace=n,this.$element=i,this.$timeout=r,i.addClass("tree-nav-sidebar-content")}return e.$inject=["$scope","$location","workspace","$element","$timeout"],e.prototype.$onInit=function(){var e=this;this.$scope.$on("$destroy",function(){return e.removeTree()}),this.$scope.$on(n.TreeEvent.Updated,function(){return e.populateTree()}),this.$scope.$on("$routeChangeStart",function(){return e.updateSelectionFromURL()}),this.populateTree()},e.prototype.updateSelectionFromURL=function(){n.updateTreeSelectionFromURL(this.$location,$(n.treeElementId))},e.prototype.populateTree=function(){var e=this;n.log.debug("TreeController: populateTree"),this.removeTree(),n.enableTree(this.$scope,this.$location,this.workspace,$(n.treeElementId),this.workspace.tree.children),this.$timeout(function(){e.updateSelectionFromURL(),e.workspace.broadcastSelectionNode()})},e.prototype.removeTree=function(){var e=$(n.treeElementId).treeview(!0);if(e.clearSearch){e.clearSearch();var t=function(e){delete e.$el,e.nodes&&e.nodes.forEach(t)};t(this.workspace.tree),e.remove()}},e}();n.TreeController=e,n.treeComponent={templateUrl:"plugins/jmx/html/tree/content.html",controller:e}}(Jmx||(Jmx={})),function(e){e.treeModule=angular.module("hawtio-jmx-tree",[]).component("treeHeader",e.treeHeaderComponent).component("tree",e.treeComponent).service("treeService",e.TreeService).name,e.treeElementId="#jmxtree"}(Jmx||(Jmx={})),function(c){function e(e,t,n,i,r,o,a,s,l){return new c.Workspace(o,a,t,e,n,i,r,s)}e.$inject=["$location","jmxTreeLazyLoadRegistry","$compile","$templateCache","localStorage","jolokia","jolokiaStatus","$rootScope","userDetails"],c.createWorkspace=e}(Jmx||(Jmx={})),function(e){e.jmxModule=angular.module("hawtio-jmx",["angularResizable",e.commonModule,e.attributesModule,e.operationsModule,e.treeModule]).config(e.configureRoutes).run(e.configureHelp).run(e.configureMainNav).run(e.configurePageTitle).run(e.initializeTree).component("jmx",e.jmxComponent).factory("workspace",e.createWorkspace).factory("jmxTreeLazyLoadRegistry",function(){return Core.lazyLoaders}),hawtioPluginLoader.addModule(e.jmxModule.name),e.log=Logger.get(e.jmxModule.name)}(Jmx||(Jmx={})),function(l){l.setupPolling=function(t,e,n,i,r){if(void 0===n&&(n=2e3),!t.$hasPoller){if(t.$hasPoller=!0,i||(i=HawtioCore.injector.get("$timeout")),!r)try{r=HawtioCore.injector.get("jolokia")}catch(e){}var o=void 0,a=t.name||"anonymous scope",s=function(){e(function(){var e=t.$keepPolling;angular.isFunction(e)||(e=function(){return!r||r.isRunning()}),e()&&t.$hasPoller&&(o=i(s,n))})};return t.$on&&(t.$on("$destroy",function(){l.log.debug("scope",a," being destroyed, cancelling polling"),delete t.$hasPoller,i.cancel(o)}),t.$on("$routeChangeStart",function(){l.log.debug("route changing, cancelling polling for scope: ",a),delete t.$hasPoller,i.cancel(o)})),s}l.log.debug("scope already has polling set up, ignoring subsequent polling request")}}(Core||(Core={})),(Jmx||(Jmx={})).jmxModule.controller("Jmx.ChartEditController",["$scope","$location","workspace","jolokia",function(h,g,n,r){function i(){var e=n.selection;if(angular.isDefined(e)&&null!==e){h.selectedAttributes=[],h.selectedMBeans=[],h.metrics={},h.mbeans={};var u=0,p=0,t=e.children;t&&t.length&&!e.objectName||(t=[e]),t&&t.forEach(function(e){var t,n=e.objectName,d=e.text;if(d&&n){var i=(t=n,{type:"list",path:Core.escapeMBeanPath(t),ignoreErrors:!0});r.request(i,Core.onSuccess(function(e){var t=e.value.attr;if(t){var n=!1;for(var i in t){var r=t[i];if(r){var o=r.type;Core.isNumberTypeName(o)&&(n=!0,h.metrics[i]||(h.metrics[i]=i))}}if(n&&(u++,h.mbeans[d]=d),++p>=u){var a=g.search(),s=Core.toSearchArgumentArray(a.att),l=Core.toSearchArgumentArray(a.el);if(s&&s.length&&s.forEach(function(t){h.metrics[t]&&!_.some(h.selectedAttributes,function(e){return e===t})&&h.selectedAttributes.push(t)}),l&&l.length&&l.forEach(function(t){h.mbeans[t]&&!_.some(h.selectedAttributes,function(e){return e===t})&&h.selectedMBeans.push(t)}),h.selectedMBeans.length<1&&(h.selectedMBeans=_.keys(h.mbeans)),h.selectedAttributes.length<1){var c=_.keys(h.metrics).sort();1<h.selectedMBeans.length?h.selectedAttributes=[_.first(c)]:h.selectedAttributes=c}$("#attributes").attr("size",_.keys(h.metrics).length),$("#mbeans").attr("size",_.keys(h.mbeans).length),Core.$apply(h),h.selectedMBeansBackup=h.selectedMBeans,h.selectedAttributesBackup=h.selectedAttributes}}Core.$apply(h)},{method:"post"}))}})}}h.selectedAttributes=[],h.selectedAttributesBackup=[],h.selectedMBeans=[],h.selectedMBeansBackup=[],h.metrics={},h.mbeans={},h.size=function(e){return angular.isObject(e)?_.keys(e).length:angular.isArray(e)?e.length:1},h.canViewChart=function(){return h.selectedAttributes.length&&h.selectedMBeans.length&&0<h.size(h.mbeans)&&0<h.size(h.metrics)},h.canEditChart=function(){return n.selection&&n.selection.isFolder()?h.selectedAttributes.length&&h.selectedMBeans.length&&2<=h.size(h.mbeans)+h.size(h.metrics):h.selectedAttributes.length&&h.selectedMBeans.length&&0<h.size(h.mbeans)&&0<h.size(h.metrics)},h.showAttributes=function(){return h.canViewChart()&&1<h.size(h.metrics)},h.showElements=function(){return h.canViewChart()&&1<h.size(h.mbeans)},h.onSelectedMBeansChange=function(){0===h.selectedMBeans.length?h.selectedMBeans=h.selectedMBeansBackup:h.selectedMBeansBackup=h.selectedMBeans},h.onSelectedAttributesChange=function(){0===h.selectedAttributes.length?h.selectedAttributes=h.selectedAttributesBackup:h.selectedAttributesBackup=h.selectedAttributes},h.viewChart=function(){var e=g.search();e.att=h.selectedAttributes,n.selection.isFolder()||h.selectedMBeans.length!==h.size(h.mbeans)||1!==h.size(h.mbeans)?e.el=h.selectedMBeans:delete e.el,e["sub-tab"]="jmx-chart",g.search(e),g.path(g.path().replace("/charts/edit","/charts"))},h.$on("$routeChangeSuccess",function(e,t,n){setTimeout(i,50)})}]),function(j){j.jmxModule.controller("Jmx.ChartController",["$scope","$element","$location","workspace","localStorage","jolokiaUrl","jolokiaParams",function(C,k,S,x,e,t,T){C.title=x.selection?x.selection.text:"",C.metrics=[],C.updateRate=1e3,C.context=null,C.jolokia=null,C.charts=null,C.edit=function(){return S.path(S.path().replace("/charts","/charts/edit"))},C.reset=function(){C.context&&(C.context.stop(),C.context=null),C.jolokia&&(C.jolokia.stop(),C.jolokia=null),C.charts&&(C.charts.empty(),C.charts=null)},C.$on("$destroy",function(){try{C.deregRouteChange()}catch(e){}try{C.dereg()}catch(e){}C.reset()}),C.errorMessage=function(){return 0===C.updateRate?"updateRate":0===C.metrics.length?"metrics":void 0};var I=_.debounce(function(){var i=x.selection||x.getSelectedMBean();if(null==i)return;if(!angular.isDefined(i)||!angular.isDefined(C.updateRate)||0===C.updateRate)return setTimeout(I,500),void Core.$apply(C);var e=594,t=k.find("#charts");{if(!t)return setTimeout(I,500),void Core.$apply(C);e=t.width()}C.reset(),C.charts=t,C.jolokia=new Jolokia(T),C.jolokia.start(C.updateRate);var n=i.objectName;C.metrics=[];var r=cubism.context().serverDelay(C.updateRate).clientDelay(C.updateRate).step(C.updateRate).size(e),o=r.horizon();o.height(40),o.colors(["#6a96c3","#83b4d7","#a6cee6","#d7e7f0","#d5eed1","#abdbac","#83c798","#66a780"]),C.context=r,C.jolokiaContext=r.jolokia(C.jolokia);var a=S.search(),s=Core.toSearchArgumentArray(a.att);if(n){var l=function(e){return{type:"list",path:Core.escapeMBeanPath(e),ignoreErrors:!0}}(n),c=C.jolokia.request(l,{method:"post"});if(c){Core.defaultJolokiaErrorHandler(c,{});var d=c.value?c.value.attr:null;if(d){var u=[];for(var p in d){var h=d[p];if(h){var g=h.type;Core.isNumberTypeName(g)&&u.push(p)}}if(s.length){var m=u.filter(function(e){return 0<=s.indexOf(e)});m.length&&(u=m)}u=u.sort(),angular.forEach(u,function(e){var t=C.jolokiaContext.metric({type:"read",mbean:n,attribute:e},Core.humanizeValue(e));t&&C.metrics.push(t)})}}}else{var f=Core.toSearchArgumentArray(a.el);if(s&&s.length&&f&&f.length){var b={};f.forEach(function(t){var e=i.get(t);if(!e&&i.children&&(e=_.find(i.children,function(e){return t===e.title})),e){var n=e.objectName;n&&(b[t]=n)}}),(s=s.sort()).forEach(function(o){angular.forEach(b,function(e,t){var n=Core.humanizeValue(o),i=t+": "+n,r=C.jolokiaContext.metric({type:"read",mbean:e,attribute:o},i);r&&C.metrics.push(r)})})}i.children.length&&!C.metrics.length&&function(e){(function t(e){return e.objectName?[e]:e.children.flatMap(function(e){return t(e)})})(e).forEach(function(r){var o="org.apache.camel"!==e.domain;angular.forEach(r.mbean.attr,function(e,t){if(Core.isNumberTypeName(e.type)){var n=(o?r.text+": ":"")+Core.humanizeValue(t),i=C.jolokiaContext.metric({type:"read",mbean:r.objectName,attribute:t},n);i&&C.metrics.push(i)}})})}(i)}if(0<C.metrics.length){var v=d3.select(t.get(0)),y=v.selectAll(".axis"),w=!1;if(y.data(["top","bottom"]).enter().append("div").attr("class",function(e){return e+" axis"}).each(function(e){if(!w)try{d3.select(this).call(r.axis().ticks(12).orient(e))}catch(e){j.log.debug("error:",e),w||(w=!0)}}),w)return C.reset(),setTimeout(I,500),void Core.$apply(C);v.append("div").attr("class","rule").call(r.rule()),r.on("focus",function(e){try{v.selectAll(".value").style("right",null===e?null:r.size()-e+"px")}catch(e){j.log.info("error:",e)}}),C.metrics.forEach(function(t){v.call(function(e){e.append("div").data([t]).attr("class","horizon").call(o)})})}else C.reset();Core.$apply(C)},200,{trailing:!0});C.deregRouteChange=C.$on("$routeChangeSuccess",function(e,t,n){I()}),window.addEventListener("resize",I),C.$on("$destroy",function(){return window.removeEventListener("resize",I)}),I()}])}(Jmx||(Jmx={})),function(e){var t=function(){function i(e,t){void 0===t&&(t=!1),this.text=e,this.rootId="root",this.separator="-",this.id=null,this.typeName=null,this.nodes=[],this.folderNames=[],this.domain=null,this.objectName=null,this.entries={},this.class=null,this.parent=null,this.isLazy=!1,this.icon=null,this.image=null,this.tooltip=null,this.entity=null,this.version=null,this.mbean=null,this.class=Core.escapeTreeCssStyles(e),t&&(this.id=this.rootId)}return Object.defineProperty(i.prototype,"key",{get:function(){return this.id},set:function(e){this.id=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"title",{get:function(){return this.text},set:function(e){this.text=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"children",{get:function(){return this.nodes},set:function(e){this.nodes=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"lazyLoad",{get:function(){return this.isLazy},set:function(e){this.isLazy=e},enumerable:!0,configurable:!0}),i.prototype.init=function(e,t){this.id||(this.id=this.rootId+this.separator+t.join(this.separator)),this.domain=e,this.folderNames=t},i.prototype.configureClass=function(n,e,t){var i=this,r="",o=_.filter(_.keys(this.entries),function(e){return 0<=e.toLowerCase().indexOf("type")});if(o.length)_.forEach(o,function(e){var t=i.entries[e];i.ancestorHasEntry(e,t)||(r+=" "+n+i.separator+t)});else{var a=_.last(e);a===t&&(a+="-folder"),a&&(r+=" "+n+this.separator+a)}this.class=Core.escapeTreeCssStyles(r)},i.prototype.configureMBean=function(e,t,n,i){this.entries=e,this.objectName=t,this.mbean=n,this.typeName=i},i.prototype.get=function(t){return _.find(this.children,function(e){return e.text===t})},i.prototype.isFolder=function(){return this.nodes&&0<this.nodes.length},i.prototype.navigate=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e.reduce(function(e,t){return e?e.get(t):null},this)},i.prototype.hasEntry=function(e,t){var n=this.entries;if(n){var i=n[e];return i&&t===i}return!1},i.prototype.parentHasEntry=function(e,t){return!!this.parent&&this.parent.hasEntry(e,t)},i.prototype.ancestorHasEntry=function(e,t){for(var n=this.parent;n;){if(n.hasEntry(e,t))return!0;n=n.parent}return!1},i.prototype.ancestorHasType=function(e){for(var t=this.parent;t;){if(e===t.typeName)return!0;t=t.parent}return!1},i.prototype.getOrElse=function(e,t){void 0===t&&(t=new i(e));var n=this.get(e);return n||(n=t,this.children.push(n),n.parent=this),n},i.prototype.sortChildren=function(t){var e=this.children;e&&(this.children=_.sortBy(e,"text"),t&&angular.forEach(e,function(e){return e.sortChildren(t)}))},i.prototype.moveChild=function(e){e&&e.parent!==this&&(e.detach(),(e.parent=this).children.push(e))},i.prototype.insertBefore=function(e,t){e.detach(),e.parent=this;var n=_.indexOf(this.children,t);0<=n&&this.children.splice(n,0,e)},i.prototype.insertAfter=function(e,t){e.detach(),e.parent=this;var n=_.indexOf(this.children,t);0<=n&&this.children.splice(n+1,0,e)},i.prototype.detach=function(){var t=this,e=this.parent;if(e){var n=e.children;if(n){var i=n.indexOf(this);i<0?_.remove(e.children,function(e){return e.key===t.key}):n.splice(i,1)}this.parent=null}},i.prototype.findDescendant=function(t){if(t(this))return this;var n=null;return angular.forEach(this.children,function(e){n||(n=e.findDescendant(t))}),n},i.prototype.findAncestor=function(e){return e(this)?this:null!=this.parent?this.parent.findAncestor(e):null},i}();e.Folder=t}(Jmx||(Jmx={})),function(i){function r(e,t,n,i){void 0===i&&(i=!1);var r,o=t.treeview(!0),a=e.search().nid;if(a&&(r=_.find(o.getNodes(),{id:a})),!r&&i&&0===o.getSelected().length){var s=o.getNodes();if(0<s.length&&(r=s[0],n)){var l=n(r);l&&(r=l)}}r&&(o.revealNode(r,{silent:!0}),o.selectNode(r,{silent:!1}),o.expandNode(r,{levels:1,silent:!0})),o.getExpanded().forEach(function(e){return o.revealNode(e,{silent:!0})})}i.findLazyLoadingFunction=function(e,t){var n=e.jmxTreeLazyLoadRegistry[t.domain],i=null;return n&&n.length&&angular.forEach(n,function(e){i||(i=e(t))}),i},i.registerLazyLoadHandler=function(e,t){var n=Core.lazyLoaders[e];n||(n=[],Core.lazyLoaders[e]=n),n.push(t)},i.unregisterLazyLoadHandler=function(e,t){if(Core.lazyLoaders){var n=Core.lazyLoaders[e];n&&n.remove(t)}},i.updateTreeSelectionFromURL=function(e,t,n){void 0===n&&(n=!1),r(e,t,null,n)},i.updateTreeSelectionFromURLAndAutoSelect=r,i.getUniqueTypeNames=function(e){var n={};return angular.forEach(e,function(e){var t=e.typeName;t&&(n[t]=e)}),Object.keys(n)},i.enableTree=function(r,e,o,a,t){a.treeview({lazyLoad:function(e,t){var n=i.findLazyLoadingFunction(o,e);n&&(i.log.debug("Lazy loading folder",e.text),n(o,e,function(e){return t(e)})),e.lazyLoad=!1},onNodeSelected:function(e,t){var n=function(e){e.state&&e.id!==t.id&&(e.state.selected=!1),e.children&&e.children.forEach(n)};n(o.tree),t.lazyLoad||a.treeview("expandNode",[t,{levels:1,silent:!0}]);var i=a.treeview("getSelected")[0];o.updateSelectionNode(i),Core.$apply(r)},levels:1,data:t,collapseIcon:"fa fa-angle-down",expandIcon:"fa fa-angle-right",nodeIcon:"pficon pficon-folder-close",showImage:!0,highlightSearchResults:!0,searchResultColor:"#b58100",searchResultBackColor:"#fbeabc",preventUnselect:!0})}}(Jmx||(Jmx={})),function(o){o._module.controller("JVM.DiscoveryController",["$scope","localStorage","jolokia",function(r,i,e){function n(e){if(e.url){var t=o.createConnectOptions();t.name=e.agent_description||"discover-"+e.agent_id;var n=Core.parseUrl(e.url);angular.extend(t,n),t.userName=e.username,t.password=e.password,o.connectToServer(i,t)}else Core.notification("warning","No URL available to connect to agent")}r.discovering=!0,r.agents=void 0,r.$watch("agents",function(e,t){e!==t&&(r.selectedAgent=_.find(r.agents,function(e){return e.selected}))},!0),r.closePopover=function(e){$(e.currentTarget).parents(".popover").prev().popover("hide")},r.connectWithCredentials=function(e,t){r.closePopover(e),n(t)},r.gotoServer=function(e,t){t.secured?$(e.currentTarget).popover("show"):n(t)},r.getElementId=function(e){return e.agent_id.dasherize().replace(/\./g,"-")},r.getLogo=function(e){return e.server_product?o.logoRegistry[e.server_product]:o.logoRegistry.generic},r.filterMatches=function(e){if(Core.isBlank(r.filter))return!0;var t=r.filter.toLowerCase();return 0!==angular.toJson(e).toLowerCase().indexOf(t)},r.getAgentIdClass=function(e){return r.hasName(e)?"":"strong"},r.hasName=function(e){return!!(e.server_vendor&&e.server_product&&e.server_version)},r.render=function(e){if(r.discovering=!1,e){var t=angular.toJson(e,!0);r.responseJson!==t&&(r.responseJson=t,r.agents=e,function(e){for(var t in e){var n=e[t];if(n.url&&!n.secured){var i=o.createJolokia(Core.useProxyIfExternal(n.url),n.username,n.password);n.startTime=i.getAttribute("java.lang:type=Runtime","StartTime"),r.hasName(n)||(n.command=i.getAttribute("java.lang:type=Runtime","SystemProperties","sun.java.command"))}}}(r.agents))}Core.$apply(r)},r.fetch=function(){r.discovering=!0,e.execute("jolokia:type=Discovery","lookupAgentsWithTimeout(int)",1e4,Core.onSuccess(r.render))},r.fetch()}])}(JVM||(JVM={})),function(e){e.HeaderController=e._module.controller("JVM.HeaderController",["$scope","ConnectOptions",function(e,t){t&&(e.containerName=t.name||"",t.returnTo&&(e.goBack=function(){window.location.href=t.returnTo}))}])}(JVM||(JVM={})),function(c){c._module.controller("JVM.JVMsController",["$scope","$location","localStorage","workspace","jolokia","mbeanName",function(s,e,l,t,n,i){c.configureScope(s,e,t),s.data=[],s.deploying=!1,s.status="",s.initDone=!1,s.filter="";var r={type:"exec",mbean:i,operation:"listLocalJVMs()",arguments:[]};function o(e){-1<e.request.operation.indexOf("listLocalJVMs")&&a(e)}function a(e){s.initDone=!0,s.data=e.value,0===s.data.length&&(s.status="Could not discover local JVM processes"),Core.$apply(s)}s.filterMatches=function(e){return!!Core.isBlank(s.filter)||e.alias.toLowerCase().has(s.filter.toLowerCase())},s.fetch=function(){n.request(r,{success:a,error:function(e){s.data=[],s.initDone=!0,s.status="Could not discover local JVM processes: "+e.error,Core.$apply(s)}})},s.stopAgent=function(e){n.request([{type:"exec",mbean:i,operation:"stopAgent(java.lang.String)",arguments:[e]},r],Core.onSuccess(o))},s.startAgent=function(e){n.request([{type:"exec",mbean:i,operation:"startAgent(java.lang.String)",arguments:[e]},r],Core.onSuccess(o))},s.connectTo=function(e,t,n,i,r){var o={scheme:t,host:n,port:i,path:r},a=c.createConnectOptions(o);a.name="local-"+i,c.log.debug("Connecting to local JVM agent: "+e),c.connectToServer(l,a),Core.$apply(s)},s.fetch()}])}(JVM||(JVM={})),function(n){n._module.controller("JVM.ResetController",["$scope","localStorage",function(e,t){e.showAlert=!1,e.doClearConnectSettings=function(){delete t[n.connectionSettingsKey],e.showAlert=!0}}])}(JVM||(JVM={})),function(e){var t=function(){function e(e,t,n,i,r,o){this.id=e+"/"+t,this.name=e,this.version=t,this.installed=n,this.required=i,this.repositoryName=r,this.repositoryUri=o}return e.prototype.getState=function(){return this.installed?"installed":"uninstalled"},e}();e.Feature=t}(Karaf||(Karaf={})),function(e){var t=function(e,t){this.name=e,this.uri=t,this.features=[],this.dependencies=[]};(Karaf||(Karaf={})).FeatureRepository=t}(),function(a){var e=function(){function e(e,t){this.jolokiaService=e,this.workspace=t}return e.$inject=["jolokiaService","workspace"],e.prototype.getFeatureRepositories=function(e){var n=this;return this.jolokiaService.getMBean(e).then(function(o){var e=[];return angular.forEach(o.Repositories,function(i){var r=new a.FeatureRepository(i.Name,i.Uri);r.dependencies=i.Repositories,i.Blacklisted||(angular.forEach(i.Features,function(e){angular.forEach(e,function(e,t){if(!o.Features[e.Name][t].Blacklisted){var n=new a.Feature(e.Name,e.Version,o.Features[e.Name][t].Installed,o.Features[e.Name][t].Required,i.Name,i.Uri);r.features.push(n)}})}),e.push(r))}),e.sort(function(e,t){return n.sortByName(e,t)})})},e.prototype.installFeature=function(e,t){return this.jolokiaService.execute(e,"installFeature(java.lang.String, java.lang.String)",t.name,t.version).catch(function(e){if(-1===e.indexOf("socket hang up"))throw e})},e.prototype.uninstallFeature=function(e,t){return this.jolokiaService.execute(e,"uninstallFeature(java.lang.String, java.lang.String)",t.name,t.version).catch(function(e){if(-1===e.indexOf("socket hang up"))throw e})},e.prototype.addFeatureRepository=function(e,t){return this.jolokiaService.execute(e,"addRepository(java.lang.String)",t)},e.prototype.removeFeatureRepository=function(e,t){return this.jolokiaService.execute(e,"removeRepository(java.lang.String)",t.uri)},e.prototype.hasInvokeRightsForName=function(e,t){return this.workspace.hasInvokeRightsForName(e,t)},e.prototype.sortByName=function(e,t){return e.name<t.name?-1:e.name>t.name?1:0},e}();a.FeaturesService=e}(Karaf||(Karaf={})),function(i){var e=function(){function n(e,t,n,i,r){var o=this;this.featuresService=e,this.$uibModal=t,this.workspace=n,this.$timeout=i,this.$q=r,this.features=[],this.repositoryFilterValues=[],this.listConfig={showSelectBox:!1,useExpandingRows:!1,updateInProgress:!1},this.loading=!0,this.listItems=null,this.installButton={name:"Install",actionFn:function(e,t){!0!==o.listConfig.updateInProgress&&(Core.notification("info","Installing feature "+t.name),o.setUpdateInProgress(!0),o.featuresService.installFeature(o.mbean,t).then(function(){o.runWithDelay(function(){o.loadFeatureRepositories(function(){Core.notification("success","Installed feature "+t.name),o.setUpdateInProgress(!1)})})}).catch(function(e){Core.notification("danger",e),o.setUpdateInProgress(!1)}))},selectedId:null},this.uninstallButton={name:"Uninstall",actionFn:function(e,t){!0!==o.listConfig.updateInProgress&&(!1!==t.required?(Core.notification("info","Uninstalling feature "+t.name),o.setUpdateInProgress(!0),o.featuresService.uninstallFeature(o.mbean,t).then(function(){o.runWithDelay(function(){o.loadFeatureRepositories(function(){var e=o.features.filter(function(e){return e.name===t.name&&e.version===t.version})[0];e&&!0===e.installed&&!1===e.required?Core.notification("warning","Feature "+t.name+" cannot be uninstalled as other features depend on it"):Core.notification("success","Uninstalled feature "+t.name),o.setUpdateInProgress(!1)})})}).catch(function(e){Core.notification("danger",e),o.setUpdateInProgress(!1)})):Core.notification("warning","Feature "+t.name+" cannot be uninstalled as other features depend on it"))},selectedId:null},this.listItemActionButtons=[],this.addRepositoryAction={name:"Add repository",actionFn:function(e){o.$uibModal.open({component:"featureRepositoryAddModal"}).result.then(function(t){if(t.uri&&0<t.uri.trim().length){var e=o.repositories.filter(function(e){return e.uri===t.uri.trim()})[0];e?Core.notification("warning","Feature repository "+e.uri+" is already installed"):(Core.notification("info","Adding feature repository "+t.uri),o.setUpdateInProgress(!0),o.featuresService.addFeatureRepository(o.mbean,t.uri).then(function(){o.loadFeatureRepositories(function(){Core.notification("success","Added feature repository "+t.uri),o.setUpdateInProgress(!1)})}).catch(function(e){Core.notification("danger",e),o.setUpdateInProgress(!1)}))}})}},this.removeRepositoryAction={name:"Remove repository",actionFn:function(e){o.$uibModal.open({component:"featureRepositoryRemoveModal",resolve:{repositories:function(){return o.repositories}}}).result.then(function(n){if(n){var i=[];if(angular.forEach(o.repositories,function(t){t.name!==n.name&&angular.forEach(t.dependencies,function(e){e===n.uri&&i.push(t.name)})}),0<i.length){var e=1===i.length?i[0]:i.length+" other features";return void Core.notification("danger","Unable to remove repository "+n.name+". It is required by "+e+".")}Core.notification("info","Removing feature repository "+n.uri),o.setUpdateInProgress(!0),o.featuresService.removeFeatureRepository(o.mbean,n).then(function(){o.loadFeatureRepositories(function(){Core.notification("success","Removed feature repository "+n.uri),o.setUpdateInProgress(!1)})}).catch(function(e){Core.notification("danger",e),o.setUpdateInProgress(!1)})}})}},this.toolbarConfig={filterConfig:{fields:[{id:"name",title:"Name",placeholder:"Filter by name...",filterType:"text"},{id:"state",title:"State",placeholder:"Filter by state...",filterType:"select",filterValues:["Installed","Uninstalled"]},{id:"repository",title:"Repository",placeholder:"Filter by repository...",filterType:"select"}],onFilterChange:function(e){o.applyFilters(e)},appliedFilters:[],resultsCount:0},actionsConfig:{primaryActions:[]},isTableView:!1},this.pageConfig={pageSize:10}}return n.$inject=["featuresService","$uibModal","workspace","$timeout","$q"],n.prototype.$onInit=function(){var t=this;Osgi.runWhenTreeReady(function(){return i.getSelectionFeaturesMBean(t.workspace)},this.workspace,this.$q).then(function(e){t.mbean=e,t.listItemActionButtons=t.itemActionButtons(),t.toolbarConfig.actionsConfig.primaryActions=t.toolbarActionButtons(),t.loadFeatureRepositories()})},n.prototype.itemActionButtons=function(){var e=[];return this.featuresService.hasInvokeRightsForName(this.mbean,"installFeature")&&e.push(this.installButton),this.featuresService.hasInvokeRightsForName(this.mbean,"uninstallFeature")&&e.push(this.uninstallButton),i.log.debug("RBAC - Rendered features buttons:",e),e},n.prototype.toolbarActionButtons=function(){var e=[];return this.featuresService.hasInvokeRightsForName(this.mbean,"addRepository")&&e.push(this.addRepositoryAction),this.featuresService.hasInvokeRightsForName(this.mbean,"removeRepository")&&e.push(this.removeRepositoryAction),i.log.debug("RBAC - Rendered features actions:",e),e},n.prototype.loadFeatureRepositories=function(e){var t=this;this.featuresService.getFeatureRepositories(this.mbean).then(function(e){t.features=[],e.forEach(function(e){t.features.push.apply(t.features,e.features)}),t.listItems=t.features.sort(t.featuresService.sortByName),t.repositories=e.sort(t.featuresService.sortByName),t.repositoryFilterValues=t.repositories.map(function(e){return e.name}),t.toolbarConfig.filterConfig.fields[2].filterValues=t.repositoryFilterValues,0<t.toolbarConfig.filterConfig.appliedFilters.length?t.applyFilters(t.toolbarConfig.filterConfig.appliedFilters):t.toolbarConfig.filterConfig.resultsCount=t.features.length,t.loading=!1}).catch(function(e){Core.notification("danger",e),t.setUpdateInProgress(!1)}).then(function(){e&&e()})},n.prototype.applyFilters=function(e){var t=this.features;e.forEach(function(e){t=n.FILTER_FUNCTIONS[e.id](t,e.value)}),this.listItems=t,this.toolbarConfig.filterConfig.resultsCount=t.length},n.prototype.enableButtonForItem=function(e,t){return!0!==this.config.updateInProgress&&("Install"===e.name?!1===t.installed:"Uninstall"===e.name?!0===t.installed:void 0)},n.prototype.setUpdateInProgress=function(e){var t=this;this.listConfig.updateInProgress=e,this.toolbarConfig.actionsConfig.primaryActions.forEach(function(e){return e.isDisabled=!0===t.listConfig.updateInProgress})},n.prototype.runWithDelay=function(e){var t=this,n=this.$timeout(function(){t.$timeout.cancel(n),e()},2e3)},n.FILTER_FUNCTIONS={state:function(e,t){return e.filter(function(e){return e.installed===("Installed"===t)})},name:function(e,t){var n=new RegExp(t,"i");return e.filter(function(e){return n.test(e.name)})},repository:function(e,t){return e.filter(function(e){return e.repositoryName===t})}},n}();i.FeaturesController=e,i.featuresComponent={templateUrl:"plugins/karaf/html/features.html",controller:e}}(Karaf||(Karaf={})),function(e){var t=function(){function e(e){this.featuresService=e}return e.$inject=["featuresService"],e.prototype.addRepository=function(e){this.modalInstance.close({uri:e})},e}();e.FeatureRepositoryAddModalController=t,e.featureRepositoryAddModalComponent={bindings:{dismiss:"&",modalInstance:"<"},template:'\n      <form name="addRepository" class="form-horizontal" ng-submit="$ctrl.addRepository(uri)">\n        <div class="modal-header">\n          <button type="button" class="close" aria-label="Close" ng-click="$ctrl.dismiss()">\n            <span class="pficon pficon-close" aria-hidden="true"></span>\n          </button>\n          <h4 class="modal-title">Add feature repository</h4>\n        </div>\n        <div class="modal-body">\n          <div class="form-group">\n            <label class="col-sm-3 control-label" for="uri">Repository URI</label>\n            <div class="col-sm-9">\n              <input type="text" class="form-control" id="uri" ng-model="uri" placeholder="mvn:foo/bar/1.0/xml/features">\n            </div>\n          </div>\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-default" ng-click="$ctrl.dismiss()">Cancel</button>\n          <button type="submit" class="btn btn-primary" ng-disabled="!(uri !== undefined && uri.trim().length > 0)">Add</button>\n        </div>\n      </form>\n    ',controller:t}}(Karaf||(Karaf={})),function(e){var t=function(){function e(){}return e.prototype.$onInit=function(){this.repositories=this.resolve.repositories},e.prototype.removeRepository=function(e){this.modalInstance.close(e)},e}();e.FeatureRepositoryRemoveModalController=t,e.featureRepositoryRemoveModalComponent={bindings:{dismiss:"&",modalInstance:"<",resolve:"<"},template:'\n      <form name="removeRepository" class="form-horizontal" ng-submit="$ctrl.removeRepository(repository)">\n        <div class="modal-header">\n          <button type="button" class="close" aria-label="Close" ng-click="$ctrl.dismiss()">\n            <span class="pficon pficon-close" aria-hidden="true"></span>\n          </button>\n          <h4 class="modal-title">Remove feature repository</h4>\n        </div>\n        <div class="modal-body">\n          <div class="form-group">\n            <label class="col-sm-3 control-label" for="repository">Repository</label>\n            <div class="col-sm-9">\n              <select id="repository" class="form-control" ng-model="repository"\n                      ng-options="repository.name for repository in $ctrl.repositories"></select>\n            </div>\n          </div>\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-default" ng-click="$ctrl.dismiss()">Cancel</button>\n          <button type="submit" class="btn btn-primary" ng-disabled="!repository">Remove</button>\n        </div>\n      </form>\n    ',controller:t}}(Karaf||(Karaf={})),function(e){e.featuresModule=angular.module("hawtio-karaf-features",[]).component("features",e.featuresComponent).component("featureRepositoryAddModal",e.featureRepositoryAddModalComponent).component("featureRepositoryRemoveModal",e.featureRepositoryRemoveModalComponent).service("featuresService",e.FeaturesService).name}(Karaf||(Karaf={})),function(s){var e=function(){function e(e,t,n){this.$q=e,this.jolokia=t,this.workspace=n}return e.$inject=["$q","jolokia","workspace"],e.prototype.getComponents=function(){var t=this;return s.getSelectionScrMBeanAsync(this.workspace,this.$q).then(function(e){return t.execute(e,void 0,"read")}).then(function(s){var l=[];return angular.forEach(s.Components.values,function(t,e){var n=-1,i="Disabled",r=t.Properties,o=s.ComponentConfigs.values.filter(function(e){return e.Name===t.Name});o&&0<o.length&&(n=o[0].Id,i="Enabled",r=o[0].Properties,angular.forEach(o[0].SatisfiedReferences,function(e){t.References[e.Name]&&(t.References[e.Name].BoundServices=e.BoundServices)}));var a={id:n,bundleId:t.BundleId,name:t.Name,state:i,properties:r,references:t.References};l.push(a)}),l})},e.prototype.enableComponents=function(e){var t=this,n=s.getSelectionScrMBean(this.workspace),i=[];return angular.forEach(e,function(e){i.push(t.execute(n,"enableComponent(long, java.lang.String)","exec",e.bundleId,e.name))}),this.$q.all(i).then(this.handleResponse)},e.prototype.enableComponent=function(e){return this.enableComponents([e])},e.prototype.disableComponents=function(e){var t=this,n=s.getSelectionScrMBean(this.workspace),i=[];return angular.forEach(e,function(e){i.push(t.execute(n,"disableComponent(long, java.lang.String)","exec",e.bundleId,e.name))}),this.$q.all(i).then(this.handleResponse)},e.prototype.disableComponent=function(e){return this.disableComponents([e])},e.prototype.execute=function(e,t,n){for(var i=this,r=[],o=3;o<arguments.length;o++)r[o-3]=arguments[o];var a={type:n,mbean:e};return t&&(a.operation=t),a.arguments=r||[],this.$q(function(t,n){i.jolokia.request(a,{method:"post",success:function(e){return t(e.value)},error:function(e){s.log.error("ScrComponentsService.execute() failed:",e),n(e.error)}})})},e.prototype.handleResponse=function(e){if(e&&e.Error)throw e.Error;return"The operation completed successfully"},e}();s.ScrComponentsService=e}(Karaf||(Karaf={})),function(i){var e=function(){function n(e,t){var n=this;this.scrComponentsService=e,this.workspace=t,this.enableAction={name:"Enable",actionFn:function(e){var t=n.getSelectedComponents();n.scrComponentsService.enableComponents(t).then(function(e){Core.notification("success",e),n.loadComponents()}).catch(function(e){return Core.notification("danger",e)})},isDisabled:!0},this.disableAction={name:"Disable",actionFn:function(e){var t=n.getSelectedComponents();n.scrComponentsService.disableComponents(t).then(function(e){Core.notification("success",e),n.loadComponents()}).catch(function(e){return Core.notification("danger",e)})},isDisabled:!0},this.toolbarConfig={filterConfig:{fields:[{id:"name",title:"Name",placeholder:"Filter by name...",filterType:"text"},{id:"state",title:"State",placeholder:"Filter by state...",filterType:"select",filterValues:["Enabled","Disabled"]}],onFilterChange:function(e){n.applyFilters(e)},resultsCount:0},actionsConfig:{primaryActions:this.toolbarActions()},isTableView:!0},this.tableConfig={selectionMatchProp:"name",onCheckBoxChange:function(e){return n.enableDisableActions()}},this.tableColumns=[{header:"Name",itemField:"name",templateFn:function(e){return'<a href="osgi/scr-components/'+e+'">'+e+"</a>"}},{header:"State",itemField:"state"}],this.tableItems=null,this.loading=!0}return n.$inject=["scrComponentsService","workspace"],n.prototype.toolbarActions=function(){var e=[],t=i.getSelectionScrMBean(this.workspace);return this.workspace.hasInvokeRightsForName(t,"enableComponent")&&e.push(this.enableAction),this.workspace.hasInvokeRightsForName(t,"disableComponent")&&e.push(this.disableAction),i.log.debug("RBAC - Rendered SCR actions:",e),e},n.prototype.$onInit=function(){this.loadComponents()},n.prototype.loadComponents=function(){var t=this;this.scrComponentsService.getComponents().then(function(e){t.components=e,t.tableItems=e,t.toolbarConfig.filterConfig.resultsCount=e.length,t.enableDisableActions(),t.loading=!1})},n.prototype.applyFilters=function(e){var t=this.components;e.forEach(function(e){t=n.FILTER_FUNCTIONS[e.id](t,e.value)}),this.tableItems=t,this.toolbarConfig.filterConfig.resultsCount=t.length},n.prototype.enableDisableActions=function(){var e=this.getSelectedComponents(),t=0===e.length;this.enableAction.isDisabled=t||e.every(function(e){return"Enabled"===e.state}),this.disableAction.isDisabled=t||e.every(function(e){return"Enabled"!==e.state})},n.prototype.getSelectedComponents=function(){return this.tableItems.filter(function(e){return e.selected})},n.FILTER_FUNCTIONS={state:function(e,t){return e.filter(function(e){return e.state===t})},name:function(e,t){var n=new RegExp(t,"i");return e.filter(function(e){return n.test(e.name)})}},n}();i.ScrComponentsController=e,i.scrListComponent={template:'\n      <div class="table-view">\n        <h1>Declarative Services</h1>\n        <p ng-if="$ctrl.loading">Loading...</p>\n        <div ng-if="!$ctrl.loading">\n          <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n          <pf-table-view config="$ctrl.tableConfig"\n                         columns="$ctrl.tableColumns"\n                         items="$ctrl.tableItems"></pf-table-view>\n        </div>\n      </div>\n    ',controller:e}}(Karaf||(Karaf={})),function(i){var e=function(){function e(e,t,n){this.scrComponentsService=e,this.$routeParams=t,this.workspace=n,this.srcComponentsUrl=Core.url("/osgi/scr-components"+this.workspace.hash()),this.loading=!0,this.scrMBean=i.getSelectionScrMBean(this.workspace)}return e.$inject=["scrComponentsService","$routeParams","workspace"],e.prototype.$onInit=function(){this.loadComponent()},e.prototype.loadComponent=function(){var t=this;this.scrComponentsService.getComponents().then(function(e){t.component=e.filter(function(e){return e.name===t.$routeParams.name})[0],t.loading=!1})},e.prototype.disableComponentEnable=function(){return null==this.component||"Enabled"===this.component.state},e.prototype.enableComponent=function(){var t=this;this.scrComponentsService.enableComponent(this.component).then(function(e){Core.notification("success",e),t.loadComponent()}).catch(function(e){return Core.notification("danger",e)})},e.prototype.disableComponentDisable=function(){return null==this.component||"Enabled"!==this.component.state},e.prototype.disableComponent=function(){var t=this;this.scrComponentsService.disableComponent(this.component).then(function(e){Core.notification("success",e),t.loadComponent()}).catch(function(e){return Core.notification("danger",e)})},e}();i.ScrComponentDetailController=e,i.scrDetailComponent={templateUrl:"plugins/karaf/html/scr-component.html",controller:e}}(Karaf||(Karaf={})),function(e){e.scrComponentsModule=angular.module("hawtio-karaf-scr-components",[]).component("scrListComponents",e.scrListComponent).component("scrComponentDetail",e.scrDetailComponent).service("scrComponentsService",e.ScrComponentsService).name}(Karaf||(Karaf={})),function(e){e._module=angular.module(e.pluginName,["infinite-scroll",e.featuresModule,e.scrComponentsModule]),e._module.config(["$routeProvider",function(e){e.when("/osgi/server",{templateUrl:"plugins/karaf/html/server.html"}).when("/osgi/features",{template:"<features></features>"}).when("/osgi/scr-components",{template:"<scr-list-components></scr-list-components>"}).when("/osgi/scr-components/:name",{template:"<scr-component-detail></scr-component-detail>"}).when("/osgi/features/:name/:version",{templateUrl:"plugins/karaf/html/feature.html"})}]),e._module.run(["workspace","helpRegistry",function(e,t){t.addUserDoc("karaf","plugins/karaf/doc/help.md",function(){return e.treeContainsDomainAndProperties("org.apache.karaf")})}]),hawtioPluginLoader.addModule(e.pluginName)}(Karaf||(Karaf={})),function(a){a._module.controller("Karaf.FeatureController",["$scope","jolokia","workspace","$routeParams",function(r,e,i,t){function o(n){if(r.row=a.extractFeature(n.value,r.name,r.version),r.row){!function(e){var n=[];angular.forEach(e.Bundles,function(e){var t=r.bundlesByLocation[e];t?(t.Installed=!0,n.push(t)):n.push({Location:e,Installed:!1})}),e.BundleDetails=n}(r.row);var i=[];angular.forEach(r.row.Dependencies,function(e){angular.forEach(e,function(t){"0.0.0"===t.Version&&angular.forEach(n.value.Features[t.Name],function(e){t.Version=e.Version}),i.push(t)})}),r.row.Dependencies=i}Core.$apply(r)}r.featuresMBean=a.getSelectionFeaturesMBean(i),r.name=t.name,r.version=t.version,r.bundlesByLocation={},r.props="properties",function(){var e=a.getSelectionFeaturesMBean(i),t=Osgi.getSelectionBundleMBean(i),n=i.jolokia;t&&function(e){Osgi.defaultBundleValues(i,r,e.values),angular.forEach(e.value,function(e){var t=e.Location;r.bundlesByLocation[t]=e})}(n.request({type:"exec",mbean:t,operation:"listBundles()"}));e&&n.request({type:"read",mbean:e},Core.onSuccess(o))}(),r.install=function(){a.installFeature(i,e,r.name,r.version,function(){Core.notification("success","Installed feature "+r.name),r.row.Installed=!0,Core.$apply(r)},function(e){Core.notification("danger","Failed to install feature "+r.name+" due to "+e.error)})},r.uninstall=function(){a.uninstallFeature(i,e,r.name,r.version,function(){Core.notification("success","Uninstalled feature "+r.name),r.row.Installed=!1,Core.$apply(r)},function(e){Core.notification("danger","Failed to uninstall feature "+r.name+" due to "+e.error)})},r.toProperties=function(e){var n="";return angular.forEach(e,function(e,t){n+=e.Key+" = "+e.Value+"\n"}),n.trim()},r.isVersionRange=function(e){var t=e[0];return"["===t||"("===t}}])}(Karaf||(Karaf={})),function(i){i._module.controller("Karaf.NavBarController",["$scope","$location","workspace",function(e,t,n){e.hash=n.hash(),e.isKarafEnabled=n.treeContainsDomainAndProperties("org.apache.karaf"),e.isFeaturesEnabled=i.getSelectionFeaturesMBean(n),e.isScrEnabled=i.getSelectionScrMBean(n),e.$on("$routeChangeSuccess",function(){e.hash=n.hash()}),e.isActive=function(e){return n.isLinkActive(e)},e.isPrefixActive=function(e){return n.isLinkPrefixActive(e)},e.goto=function(e){return t.path(e)}}])}(Karaf||(Karaf={})),(Karaf||(Karaf={}))._module.controller("Karaf.ServerController",["$scope","$location","workspace","jolokia",function(u,e,t,p){function n(){setTimeout(i,50)}function i(){p.search("org.apache.karaf:type=instance,*",Core.onSuccess(r))}function r(e){if(angular.isArray(e)){var t=e[0];t&&p.getAttribute(t,"Instances",Core.onSuccess(function(e){!function(e,t){if(e){var n=Core.parseMBean(t),i="root";"attributes"in n&&"name"in n.attributes&&(i=n.attributes.name);var r=e[i];u.data.name=r.Name,u.data.state=r.State,u.data.root=r["Is Root"],u.data.location=r.Location,u.data.sshPort=r["SSH Port"],u.data.rmiRegistryPort=r["RMI Registry Port"],u.data.rmiServerPort=r["RMI Server Port"],u.data.pid=r.Pid,u.data.version="?",u.data.startLevel="?",u.data.framework="?",u.data.frameworkVersion="?";var o="org.apache.karaf:type=system,name="+r.Name,a=p.request({type:"read",mbean:o,attribute:["StartLevel","Framework","Version"]},Core.onSuccess(null)),s=a.value;s&&(u.data.version=s.Version,u.data.startLevel=s.StartLevel,u.data.framework=s.Framework);var l=p.search("osgi.core:type=bundleState,*",Core.onSuccess(null));if(angular.isArray(l)){var t=l[0];if(t){var c=p.request({type:"exec",mbean:t,operation:"getVersion(long)",arguments:[0]},Core.onSuccess(null)),d=c.value;d&&(u.data.frameworkVersion=d)}}}Core.$apply(u)}(e,t)}))}}u.data={name:"",version:"",state:"",root:"",startLevel:"",framework:"",frameworkVersion:"",location:"",sshPort:"",rmiRegistryPort:"",rmiServerPort:"",pid:""},u.$on("jmxTreeUpdated",n),u.$watch("workspace.tree",n)}]),function(e){var t=function(){function s(e){this.className=e.className,this.containerName=e.containerName,this.exception=e.exception,this.fileName=e.fileName,this.hasOSGiProps=s.hasOSGiProps(e.properties),this.hasLogSourceHref=s.hasLogSourceHref(e.properties),this.hasLogSourceLineHref=s.hasLogSourceLineHref(e.lineNumber),this.host=e.host,this.level=e.level,this.levelClass=s.getLevelClass(e.level),this.lineNumber=e.lineNumber,this.logger=e.logger,this.logSourceUrl=s.getLogSourceUrl(e),this.methodName=e.methodName,this.properties=e.properties,this.mdcProperties=s.mdcProperties(e.properties),this.hasMDCProps=0!==Object.keys(this.mdcProperties).length,this.sanitizedMessage=Core.escapeHtml(e.message),this.seq=e.seq,this.thread=e.thread,this.timestamp=e.timestamp}return s.getLevelClass=function(e){switch(e){case"INFO":return"text-info";case"WARN":return"text-warning";case"ERROR":return"text-danger";default:return""}},s.hasOSGiProps=function(e){return e&&Object.keys(e).some(function(e){return 0===e.indexOf("bundle")})},s.hasLogSourceHref=function(e){return e&&e["maven.coordinates"]&&""!==e["maven.coordinates"]},s.hasLogSourceLineHref=function(e){return e&&""!==e&&"?"!==e},s.getLogSourceUrl=function(e){var t=s.removeQuestion(e.fileName),n=s.removeQuestion(e.className),i=e.properties,r="";if(i&&(r=i["maven.coordinates"]),r&&t){var o="#/source/view/"+r+"/class/"+n+"/"+t,a=e.lineNumber;return a&&(o+="?line="+a),o}return""},s.removeQuestion=function(e){return e&&"?"!==e?e:null},s.mdcProperties=function(n){return n?Object.keys(n).filter(function(e){return!_.startsWith(e,"bundle.")&&"maven.coordinates"!==e}).reduce(function(e,t){return e[t]=n[t],e},{}):{}},s.prototype.matchMessage=function(e){return _.includes(this.sanitizedMessage.toLowerCase(),e.toLowerCase())},s.prototype.matchProperties=function(e){var t=this,n=e.toLowerCase();return Object.keys(this.properties).some(function(e){return _.includes(t.properties[e].toLowerCase(),n)})},s}();e.LogEntry=t}(Logs||(Logs={})),function(i){var e=function(){function e(e,t,n,i){this.$q=e,this.jolokiaService=t,this.localStorage=n,this.workspace=i}return e.$inject=["$q","jolokiaService","localStorage","workspace"],e.prototype.getLogQueryMBean=function(){return this.workspace.findMBeanWithProperties("hawtio",{type:"LogQuery"})},e.prototype.isValid=function(){var e=this.getLogQueryMBean();return e&&this.workspace.hasInvokeRightsForName(e.objectName,"getLogResults(int)")},e.prototype.getInitialLogs=function(){return this.getLogs("getLogResults(int)",this.getLogCacheSize())},e.prototype.getMoreLogs=function(e){return this.getLogs("jsonQueryLogResults",{afterTimestamp:e,count:this.getLogBatchSize()})},e.prototype.getLogs=function(e,t){var n=this.getLogQueryMBean().objectName;return this.jolokiaService.execute(n,e,t).then(function(e){return e.logEntries=e.events?e.events.map(function(e){return new i.LogEntry(e)}):[],e})},e.prototype.appendLogs=function(e,t){e.push.apply(e,t);var n=this.getLogCacheSize();return e.length>n&&e.splice(0,e.length-n),e},e.prototype.filterLogs=function(e,t){var i=__spreadArrays(e);return t.appliedFilters.forEach(function(t){switch(t.id){case"level":i=i.filter(function(e){return e.level===t.value});break;case"logger":var n=new RegExp(t.value,"i");i=i.filter(function(e){return n.test(e.logger)});break;case"message":i=i.filter(function(e){return e.matchMessage(t.value)});break;case"properties":i=i.filter(function(e){return e.matchProperties(t.value)})}}),this.isLogSortAsc()||(i=i.reverse()),t.totalCount=e.length,t.resultsCount=i.length,i},e.prototype.isLogSortAsc=function(){return"false"!==this.localStorage.getItem("logSortAsc")},e.prototype.isLogAutoScroll=function(){return"false"!==this.localStorage.getItem("logAutoScroll")},e.prototype.getLogCacheSize=function(){var e=this.localStorage.getItem("logCacheSize");return null!==e?parseInt(e):500},e.prototype.getLogBatchSize=function(){var e=this.localStorage.getItem("logBatchSize");return null!==e?parseInt(e):20},e}();i.LogsService=e}(Logs||(Logs={})),function(e){function t(e,t){e.addTab("Server Logs","plugins/logs/html/logs-preferences.html",function(){return t.isValid()})}t.$inject=["preferencesRegistry","logsService"],e.configureLogsPreferences=t}(Logs||(Logs={})),function(e){function t(e,t){$('[data-toggle="tooltip"]').tooltip(),Core.initPreferenceScope(e,t,{logSortAsc:{value:!0,converter:Core.parseBooleanValue},logAutoScroll:{value:!0,converter:Core.parseBooleanValue},logCacheSize:{value:500,converter:parseInt},logBatchSize:{value:20,converter:parseInt}})}t.$inject=["$scope","localStorage"],e.LogsPreferencesController=t}(Logs||(Logs={})),function(e){e.logsPreferencesModule=angular.module("hawtio-logs-preferences",[]).run(e.configureLogsPreferences).controller("LogsPreferencesController",e.LogsPreferencesController).name}(Logs||(Logs={})),function(e){var t=function(){function e(){}return Object.defineProperty(e.prototype,"logEntry",{get:function(){return this.resolve.logEntry},enumerable:!0,configurable:!0}),e}();e.LogModalController=t,e.logModalComponent={bindings:{resolve:"<",close:"&"},template:'\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$ctrl.close()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <h4 class="modal-title">Log</h4>\n      </div>\n      <div class="modal-body">\n        <dl class="dl-horizontal">\n          <dt>Timestamp</dt>\n          <dd>{{$ctrl.logEntry | logDateFilter}}</dd>\n          <dt>Level</dt>\n          <dd class="{{$ctrl.logEntry.levelClass}}">{{$ctrl.logEntry.level}}</dd>\n          <dt>Logger</dt>\n          <dd>{{$ctrl.logEntry.logger}}</dd>\n          <div ng-show="$ctrl.logEntry.hasLogSourceLineHref">\n            <dt>Class</dt>\n            <dd>{{$ctrl.logEntry.className}}</dd>\n            <dt>Method</dt>\n            <dd>{{$ctrl.logEntry.methodName}}</dd>\n            <dt>File</dt>\n            <dd>{{$ctrl.logEntry.fileName}}:{{$ctrl.logEntry.lineNumber}}</dd>\n          </div>\n          <div ng-show="$ctrl.logEntry.host">\n            <dt>Host</dt>\n            <dd>{{$ctrl.logEntry.host}}</dd>\n          </div>\n          <dt>Thread</dt>\n          <dd>{{$ctrl.logEntry.thread}}</dd>\n          <dt>Message</dt>\n          <dd ng-bind-html="$ctrl.logEntry.sanitizedMessage"></dd>\n        </dl>\n        <dl ng-if="$ctrl.logEntry.exception">\n          <dt>Stack Trace</dt>\n          <dd>\n            <ul class="list-unstyled">\n              <li ng-repeat="frame in $ctrl.logEntry.exception" class="log-jmx-stacktrace-list-item">{{frame}}</li>\n            </ul>\n          </dd>\n        </dl>\n        <div ng-show="$ctrl.logEntry.hasOSGiProps">\n          <h4>OSGi Properties</h4>\n          <dl class="dl-horizontal">\n            <div ng-show="$ctrl.logEntry.properties[\'bundle.name\']">\n              <dt>Bundle Name</dt>\n              <dd>{{$ctrl.logEntry.properties[\'bundle.name\']}}</dd>\n            </div>\n            <div ng-show="$ctrl.logEntry.properties[\'bundle.id\']">\n              <dt>Bundle ID</dt>\n              <dd>{{$ctrl.logEntry.properties[\'bundle.id\']}}</dd>\n            </div>\n            <div ng-show="$ctrl.logEntry.properties[\'bundle.version\']">\n              <dt>Bundle Version</dt>\n              <dd>{{$ctrl.logEntry.properties[\'bundle.version\']}}</dd>\n            </div>\n          </dl>\n        </div>\n        <div ng-show="$ctrl.logEntry.hasMDCProps">\n          <h4>MDC Properties</h4>\n          <dl class="dl-horizontal">\n            <dt ng-repeat-start="(key, value) in $ctrl.logEntry.mdcProperties">{{key}}</dt>\n            <dd ng-repeat-end>{{value}}</dt>\n          </dl>\n        </div>\n      </div>\n    ',controller:t}}(Logs||(Logs={})),function(e){var t=function(){function e(e,t,n){var i=this;this.$timeout=e,this.$uibModal=t,this.logsService=n,this.logs=[],this.filteredLogs=[],this.messageSearchText=[],this.loading=!0,this.toolbarConfig={filterConfig:{fields:[{id:"level",title:"Level",placeholder:"Filter by level...",filterType:"select",filterValues:["TRACE","DEBUG","INFO","WARN","ERROR"]},{id:"logger",title:"Logger",placeholder:"Filter by logger...",filterType:"text"},{id:"message",title:"Message",placeholder:"Filter by message...",filterType:"text"},{id:"properties",title:"Properties",placeholder:"Filter by properties...",filterType:"text"}],totalCount:this.logs.length,resultsCount:this.filteredLogs.length,appliedFilters:[],onFilterChange:function(e){return i.applyFilters(e)}},isTableView:!0},this.scrollableTable=null}return e.$inject=["$timeout","$uibModal","logsService"],e.prototype.$onInit=function(){var t=this;this.scrollableTable=document.querySelector(".log-jmx-scrollable-table"),this.logsService.getInitialLogs().then(function(e){t.loading=!1,t.processLogEntries(e)})},e.prototype.applyFilters=function(e){var t=this.isTableScrolled();this.removePreviousLevelFilter(e),this.messageSearchText=this.getMessageFilterValues(e),this.filteredLogs=this.logsService.filterLogs(this.logs,this.toolbarConfig.filterConfig),t&&this.scrollTable()},e.prototype.removePreviousLevelFilter=function(n){_.remove(n,function(e,t){return"level"===e.id&&t<n.length-1&&"level"===n[n.length-1].id})},e.prototype.getMessageFilterValues=function(e){return e.filter(function(e){return"message"===e.id}).map(function(e){return e.value})},e.prototype.openLogModal=function(e){this.$uibModal.open({component:"logModal",size:"lg",resolve:{logEntry:e}})},e.prototype.processLogEntries=function(e){if(0<e.logEntries.length){var t=this.isTableScrolled();this.logsService.appendLogs(this.logs,e.logEntries),this.filteredLogs=this.logsService.filterLogs(this.logs,this.toolbarConfig.filterConfig),t&&this.scrollTable()}this.scheduleNextRequest(e.toTimestamp)},e.prototype.scheduleNextRequest=function(e){var t=this;this.$timeout(function(){t.logsService.getMoreLogs(e).then(function(e){return t.processLogEntries(e)})},5e3)},e.prototype.isTableScrolled=function(){return this.logsService.isLogSortAsc()?this.scrollableTable.scrollHeight-this.scrollableTable.scrollTop===this.scrollableTable.clientHeight:0===this.scrollableTable.scrollTop},e.prototype.scrollTable=function(){var e=this;this.logsService.isLogAutoScroll()&&(this.logsService.isLogSortAsc()?this.$timeout(function(){return e.scrollableTable.scrollTop=e.scrollableTable.scrollHeight-e.scrollableTable.clientHeight},0):this.$timeout(function(){return e.scrollableTable.scrollTop=0},0))},e}();e.LogsController=t,e.logsComponent={template:'\n      <div class="log-jmx-main">\n        <div class="log-jmx-flex-container">\n          <div class="log-jmx-fixed-toolbar">\n            <h1>Logs</h1>\n            <p ng-show="$ctrl.loading">Loading...</p>\n            <div ng-show="!$ctrl.loading">\n              <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n              <div ng-show="$ctrl.filteredLogs.length === 0">\n                <pf-empty-state></pf-empty-state>\n              </div>\n              <div ng-show="$ctrl.filteredLogs.length > 0">\n                <table class="table table-striped log-jmx-header-table">\n                  <thead>\n                    <tr>\n                      <th>Timestamp</th>\n                      <th>Level</th>\n                      <th>Logger</th>\n                      <th>Message</th>\n                    </tr>\n                  </thead>\n                </table>\n              </div>\n            </div>\n          </div>\n          <div class="log-jmx-scrollable-table" ng-show="$ctrl.filteredLogs.length > 0">\n            <table class="table table-striped">\n              <tbody>\n                <tr ng-repeat="logEntry in $ctrl.filteredLogs">\n                  <td>{{logEntry | logDateFilter}}</td>\n                  <td class="{{logEntry.levelClass}}">{{logEntry.level}}</td>\n                  <td ng-switch="logEntry.hasLogSourceHref">\n                    <a href="" ng-switch-when="true" ng-click="$ctrl.openLogModal(logEntry)">{{logEntry.logger}}</a>\n                    <span ng-switch-default>{{logEntry.logger}}</span>\n                  </td>\n                  <td ng-bind-html="logEntry.sanitizedMessage | highlight:$ctrl.messageSearchText"></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    ',controller:t}}(Logs||(Logs={})),function(e){function t(e){e.when("/logs",{template:"<logs></logs>"})}function n(e,t){e.addUserDoc("log","plugins/logs/doc/help.md",function(){return t.isValid()})}function i(e,t){e.addItem({title:"Logs",href:"/logs",isValid:function(){return t.isValid()},rank:-1})}t.$inject=["$routeProvider"],n.$inject=["helpRegistry","logsService"],i.$inject=["mainNavService","logsService"],e.configureLogsRoutes=t,e.configureLogsHelp=n,e.configureLogsMainNav=i}(Logs||(Logs={})),function(e){function t(e){var t=e("date");return function(e){return e?e.seq?t(e.seq,"yyyy-MM-dd HH:mm:ss.sss"):t(e.timestamp,"yyyy-MM-dd HH:mm:ss"):null}}t.$inject=["$filter"],e.logDateFilter=t,e.highlight=function(){return function(t,e,n){return e.forEach(function(e){t=t.toString(),e=e.toString(),t=n?t.split(e).join("<mark>"+e+"</mark>"):t.replace(new RegExp(e,"gi"),"<mark>$&</mark>")}),t}}}(Logs||(Logs={})),function(e){e.logsModule=angular.module("hawtio-logs-logs",[]).config(e.configureLogsRoutes).run(e.configureLogsHelp).run(e.configureLogsMainNav).filter("logDateFilter",e.logDateFilter).filter("highlight",e.highlight).component("logs",e.logsComponent).component("logModal",e.logModalComponent).service("logsService",e.LogsService).name}(Logs||(Logs={})),function(e){var t=angular.module("hawtio-logs",[e.logsModule,e.logsPreferencesModule]).name;hawtioPluginLoader.addModule(t)}(Logs||(Logs={})),function(h){function g(e){if(angular.isArray(e))return function(e){for(var t=[],n=0;n<e.length;n++)t.push(g(e[n]));return(t=_.filter(t,function(e,t,n){return n.indexOf(e)===t})).sort(),t.toString()}(e);var t=e.toString(),n=t.lastIndexOf(".");return t.substring(n+1)}h.formatServiceName=g,h._module.controller("Osgi.BundleController",["$scope","$location","workspace","$routeParams","jolokiaService","$q",function(p,t,i,e,r,n){p.frameworkMBean=h.getSelectionFrameworkMBean(i),p.osgiToolsMBean=h.getHawtioOSGiToolsMBean(i),p.bundleId=e.bundleId,p.classLoadingAlert=null;var o="The operation completed successfully";function a(){p.classLoadingAlert={type:"danger",icon:"pficon-error-circle-o",message:"The hawtio.OSGiTools MBean is not available. Please contact technical support."}}function s(e){p.classLoadingAlert={type:"danger",icon:"pficon-error-circle-o",message:"<strong>Problem invoking hawtio.OSGiTools MBean:</strong> "+e}}function l(e){p.bundles=e,h.defaultBundleValues(i,p,e),p.row=h.findBundle(p.bundleId,e),p.row&&(function(){var e=h.parseManifestHeader(p.row.Headers,"Import-Package");for(var t in p.row.ImportData){var n=e[t];if(void 0!==n)p.row.ImportData[t].headers=n;else{var i=p.row.Headers["DynamicImport-Package"];void 0!==i&&(p.row.ImportData[t].headers={reason:"Imported due to DynamicImport-Package="+i.Value})}delete e[t]}for(var t in e)void 0===p.row.ExportData[t]&&(p.unsatisfiedPackages[t]=e[t])}(),function(){var e=h.parseManifestHeader(p.row.Headers,"Export-Package");for(var t in p.row.ExportData)e[t]&&e[t].Duses&&(e[t].Duses=e[t].Duses.replace(/,/g,", ")),p.row.ExportData[t].headers=e[t]}(),function(){if(!(void 0!==p.row.RegisteredServices&&0!==p.row.RegisteredServices.length||void 0!==p.row.ServicesInUse&&0!==p.row.ServicesInUse))return;var e=h.getSelectionServiceMBean(i);e&&r.execute(e,"listServices()").then(function(e){!function(e){var u=e,t=function(l){var c=document.getElementById("registers.service."+l),d=document.getElementById("uses.service."+l);if(null==c&&null==d)return"continue";r.execute(h.getSelectionServiceMBean(i),"getProperties",l).then(function(e){for(var t=e,n=Object.keys(t).sort(),i="<small><table>",r=0;r<n.length;r++){var o=t[n[r]];if(void 0!==o){var a=o.Value;15<a.length&&(a=a.replace(/[,]/g,",<br/>&nbsp;&nbsp;")),i+="<tr><td valign='top'>"+n[r]+"</td><td>"+a+"</td></tr>"}}var s=u[l].BundleIdentifier;i+="<tr><td>Registered&nbsp;by</td><td>Bundle "+s+" <div class='less-big label'>"+p.bundles[s].SymbolicName+"</div></td></tr>",i+="</table></small>",null!=c&&(c.innerText=" "+g(u[l].objectClass),$(c).popover({title:"service properties",content:i,trigger:"hover",html:!0})),null!=d&&(d.innerText=" "+g(u[l].objectClass),$(d).popover({title:"service properties",content:i,trigger:"hover",html:!0}))}).catch(function(e){h.log.error(e)})};for(var n in u)t(n)}(e)}).catch(function(e){Core.notification("danger",e)})}(),Core.$apply(p))}function c(){h.runWhenTreeReady(function(){var e=h.getSelectionBundleMBean(i);r.execute(e,"listBundles()").then(function(e){l(e)}).catch(function(e){Core.notification("danger",e)})},i,n)}c(),p.showValue=function(e){switch(e){case"Bundle-Name":case"Bundle-SymbolicName":case"Bundle-Version":case"Export-Package":case"Import-Package":return!1;default:return!0}},p.unsatisfiedPackages={},p.isEmpty=function(e){return _.isEmpty(e)},p.dismissClassLoadingAlert=function(){return p.classLoadingAlert=null},p.executeLoadClass=function(t){var e=h.getHawtioOSGiToolsMBean(i);e?r.execute(e,"getLoadClassOrigin",p.bundleId,t).then(function(e){p.classLoadingAlert=-1===e?{type:"warning",icon:"pficon-warning-triangle-o",message:"Loading class <strong>"+t+"</strong> in Bundle "+p.bundleId+".\n                                Class can not be loaded from this bundle."}:{type:"success",icon:"pficon-ok",message:"Loading class <strong>"+t+"</strong> in Bundle "+p.bundleId+".\n                                Class is served from "+h.bundleLinks(i,e)+"."},Core.$apply(p)}).catch(function(e){s(e),Core.$apply(p)}):a()},p.executeFindResource=function(t){var e=h.getHawtioOSGiToolsMBean(i);e?r.execute(e,"getResourceURL",p.bundleId,t).then(function(e){p.classLoadingAlert=null===e?{type:"warning",icon:"pficon-warning-triangle-o",message:"Resource <strong>"+t+"</strong> can not be found in Bundle "+p.bundleId+"."}:{type:"success",icon:"pficon-ok",message:"Resource <strong>"+t+"</strong> in Bundle "+p.bundleId+" is available from "+e+"."},Core.$apply(p)}).catch(function(e){s(e),Core.$apply(p)}):a()},p.startBundle=function(e){r.execute(h.getSelectionFrameworkMBean(i),"startBundle",e).then(function(e){Core.notification("success",o),c()}).catch(function(e){Core.notification("danger",e)})},p.stopBundle=function(e){r.execute(h.getSelectionFrameworkMBean(i),"stopBundle",e).then(function(e){Core.notification("success",o),c()}).catch(function(e){Core.notification("danger",e)})},p.updateBundle=function(e){r.execute(h.getSelectionFrameworkMBean(i),"updateBundle",e).then(function(e){Core.notification("success",o),c()}).catch(function(e){Core.notification("danger",e)})},p.refreshBundle=function(e){r.execute(h.getSelectionFrameworkMBean(i),"refreshBundle",e).then(function(e){Core.notification("success",o),setTimeout(function(){return c()},2e3)}).catch(function(e){Core.notification("danger",e)})},p.uninstallBundle=function(e){r.execute(h.getSelectionFrameworkMBean(i),"uninstallBundle",e).then(function(e){Core.notification("success",o),t.path("/osgi/bundles"),Core.$apply(p)}).catch(function(e){Core.notification("danger",e)})}}])}(Osgi||(Osgi={})),function(I){I._module.controller("Osgi.ConfigurationsController",["$scope","$routeParams","$location","workspace","jolokia","$uibModal","$q",function(l,e,t,a,s,i,n){l.configurations=null,l.filteredConfigurations=[];var r={factory:{class:"fa fa-cubes",title:"Configuration factory used to create separate instances of the configuration"},pid:{class:"fa fa-check list-view-pf-icon-success",title:"Configuration which has a set of properties associated with it"},pidNoValue:{class:"fa fa-exclamation list-view-pf-icon-warning",title:"Configuration which does not yet have any bound values"}},o={name:"Add configuration",actionFn:function(){i.open({templateUrl:"addPidDialog.html",scope:l}).result.then(function(t){if(l.configurations.some(function(e){return e.pid==t}))Core.notification("danger",'pid "'+t+'" already exists.');else{var e=I.getHawtioConfigAdminMBean(a);if(e&&t){var n=JSON.stringify({});s.execute(e,"configAdminUpdate",t,n,Core.onSuccess(function(e){Core.notification("success","Successfully created pid: "+t),b()}))}}}).catch(function(){})}};l.toolbarConfig={filterConfig:{fields:[{id:"name",title:"Name",placeholder:"Filter by name...",filterType:"text"},{id:"description",title:"Description",placeholder:"Filter by description...",filterType:"text"}],resultsCount:0,totalCount:0,appliedFilters:[],onFilterChange:function(e){d(e),u()}},actionsConfig:{primaryActions:function(){var e=[],t=I.getHawtioConfigAdminMBean(a);t&&a.hasInvokeRightsForName(t,"configAdminUpdate")&&e.push(o);return I.log.debug("RBAC - Rendered configuration actions:",e),e}()}},l.listViewConfig={showSelectBox:!1};var c={name:"Delete",actionFn:function(e,n){var t=l.$new(!0);t.item=n,i.open({templateUrl:"deletePidDialog.html",scope:t}).result.then(function(){var e=I.getSelectionConfigAdminMBean(a);e&&s.request({type:"exec",mbean:e,operation:"delete",arguments:[n.pid]},{success:function(e){var t=l.configurations.indexOf(n);l.configurations.splice(t,1),Core.notification("success","Successfully deleted pid: "+n.pid)},error:function(e){return Core.notification("danger",e.error)}})}).catch(function(){})}};function d(e){var n=l.configurations;e.forEach(function(e){var t=new RegExp(e.value,"i");"name"===e.id?n=n.filter(function(e){return t.test(e.name)}):"description"===e.id&&(n=n.filter(function(e){return t.test(e.description)}))}),l.filteredConfigurations=n}function u(){l.toolbarConfig.filterConfig.totalCount=l.configurations.length,l.toolbarConfig.filterConfig.resultsCount=l.filteredConfigurations.length}function p(e){var i={};angular.forEach(e,function(e){var t=e[0],n=y(t,e[1]);w(t)||(n.hasValue=!0,n.kind=r.pid,i[t]=n)}),l.pids=i;var t=I.getSelectionConfigAdminMBean(a);t&&s.execute(t,"getConfigurations","(service.factoryPid=*)",Core.onSuccess(h,T("Failed to load factory PID configurations: "))),function(){if(l.pids)if(l.profileNotRunning&&l.profileMetadataMBean&&l.versionId&&l.profileId)s.execute(l.profileMetadataMBean,"metaTypeSummary",l.versionId,l.profileId,Core.onSuccess(g));else{var e=I.getMetaTypeMBean(a);e&&s.execute(e,"metaTypeSummary",Core.onSuccess(g))}}()}function h(e){var n=I.getSelectionConfigAdminMBean(a),o=l.pids;o&&n&&angular.forEach(e,function(e){var t=e[0],i=e[1];if(t&&!w(t)){var r=o[t];r&&(r.isFactoryInstance=!0,s.execute(n,"getFactoryPid",t,Core.onSuccess(function(n){if(r.factoryPid=n,r.name=I.removeFactoryPidPrefix(t,n),n){var e=C(n,i,o);e&&(k(t,e,r),l.inFabricProfile&&I.getConfigurationProperties(a,s,t,function(e){var t=Core.pathGet(e,["fabric.zookeeper.pid","Value"]);t&&(r.name=I.removeFactoryPidPrefix(t,n),r.zooKeeperPid=t,Core.$apply(l))}),m())}})))}}),f()}function g(e){l.metaType=e,f()}function m(){var n=[];angular.forEach(l.pids,function(e,t){e.isFactoryInstance||n.push(e)});for(var e=function(t){var e=n[t];e.isFactory&&angular.forEach(e.children,function(e){n.splice(t+1,0,e)})},t=(n=_.sortBy(n,function(e){return e.name.toLowerCase()})).length-1;-1<t;t--)e(t);l.configurations=n,d(l.toolbarConfig.filterConfig.appliedFilters),u(),Core.$apply(l)}function f(o){void 0===o&&(o=!0);var e=l.metaType;if(e){var a=I.configuration.pidMetadata,s=l.pids||{};angular.forEach(e.pids,function(e,t){var n=o?C(t,null):s[t];if(n){var i=e.factoryPidBundleIds;i&&i.length&&S(n),n.name=Core.pathGet(a,[t,"name"])||function(t){return angular.forEach(["Fabric8 ","Apache "],function(e){t&&_.startsWith(t,e)&&t.length>e.length&&(t=t.substring(e.length))}),t}(e.name)||t;var r=Core.pathGet(a,[t,"description"])||e.description;n.description=r}})}m()}function b(){l.configurations=[],l.profileNotRunning&&l.profileMetadataMBean&&l.versionId&&l.profileId?s.execute(l.profileMetadataMBean,"metaTypeSummary",l.versionId,l.profileId,Core.onSuccess(v,{silent:!0})):s&&I.getSelectionConfigAdminMBeanAsync(a,n).then(function(e){e&&s.execute(e,"getConfigurations","(service.pid=*)",Core.onSuccess(p,T("Failed to load PID configurations: ")))})}function v(e){var t=e;if(t){var a={};angular.forEach(t.pids,function(e,t){if(e&&!w(t)){var n="mvn:"+t,i={pid:t,name:e.name,class:"pid",description:e.description,bundle:n,kind:r.pid,pidLink:x(t)};a[t]=i}}),angular.forEach(a,function(e,t){var n=t.indexOf("-");if(0<n){var i=t.substring(0,n),r=t.substring(n+1,t.length),o=a[i];if(!o)o=C(i,e.bundle,a);o&&(k(t,o,e,i),e.name=r,a[i]=o,delete a[t])}}),l.pids=a}l.metaType=t,f(!1)}function y(e,t){var n=I.configuration.pidMetadata;return{pid:e,name:Core.pathGet(n,[e,"name"])||e,class:"pid",description:Core.pathGet(n,[e,"description"])||function(e,t){var n=I.configuration.pidMetadata;return Core.pathGet(n,[e,"description"])||"pid: "+e+"\nbundle: "+t}(e,t),bundle:t,kind:r.pidNoValue,pidLink:x(e)}}function w(t){var n=!1;return angular.forEach(I.configuration.ignorePids,function(e){_.startsWith(t,e)&&(n=!0)}),n}function C(e,t,n){if(void 0===n&&(n=null),w(e))return I.log.info("ignoring pid "+e),null;n||(n=l.pids);var i=n[e];return i||(i=y(e,t),n[e]=i,m()),i}function k(e,t,n,i){void 0===i&&(i=null),S(t,i,e);var r=t.children;i&&(t.pidLink=x(i)),r||(r={},t.children=r),r[e]=n}function S(e,t,n){void 0===t&&(t=null),void 0===n&&(n=null),e.isFactory=!0,e.class="factoryPid",e.kind=r.factory,t||(t=e.factoryPid||""),n||(n=e.pid||""),t||(t=n,n=null),e.pidLink=x(t)}function x(e){return"osgi/configurations/"+e}function T(t){return{error:function(e){Core.notification("danger",t+e.error||e),Core.defaultJolokiaErrorHandler(e)}}}l.listViewMenuItems=function(){var e=[],t=I.getHawtioConfigAdminMBean(a),n=I.getSelectionConfigAdminMBean(a);t&&n&&a.hasInvokeRightsForName(n,"delete")&&e.push(c);return I.log.debug("RBAC - Rendered configuration item actions:",e),e}(),l.goTo=function(e){t.path(e)},b()}])}(Osgi||(Osgi={})),(Osgi||(Osgi={})).configuration={pidMetadata:{"io.fabric8.container.java":{name:"Java Container"},"io.fabric8.container.process":{name:"Process Container"},"io.fabric8.container.process.overlay.resources":{name:"Container Overlay Resources",description:"The resources overlaid over the distribution of the process",schemaExtensions:{disableHumanizeLabel:!0}},"io.fabric8.dosgi":{name:"Fabric8 DOSGi",description:"The configuration for the Distributed OSGi implementation in Fabric8"},"io.fabric8.environment":{name:"Environment Variables",description:"The operating system Environment Variables which are exported into any child processes",schemaExtensions:{disableHumanizeLabel:!0}},"io.fabric8.fab.osgi.url":{name:"FAB URL",description:"Configures the 'fab:' URL handler for deploying JARs as bundles"},"io.fabric8.mq.fabric.server":{name:"ActiveMQ Broker",description:"The configuration of the Apache ActiveMQ server configured via the fabric"},"io.fabric8.openshift":{name:"OpenShift"},"io.fabric8.ports":{name:"Ports",description:"The network ports exported by the container",schemaExtensions:{disableHumanizeLabel:!0}},"io.fabric8.system":{name:"System Properties",description:"The Java System Properties which are exported into any child Java processes",schemaExtensions:{disableHumanizeLabel:!0}},"io.fabric8.version":{name:"Versions",schemaExtensions:{disableHumanizeLabel:!0}},"org.ops4j.pax.logging":{name:"Logging",description:"The configuration of the logging subsystem"},"org.ops4j.pax.url.mvn":{name:"Maven URL",description:"Configures the Maven 'mvn:' URL handler for referencing maven artifacts"},"org.ops4j.pax.url.war":{name:"WAR URL",description:"Configures the 'war:' URL handler for referencing WAR deployments"},"org.ops4j.pax.url.wrap":{name:"Wrap URL",description:"Configures the 'wrap:' URL handler for wrapping JARs as bundles"}},ignorePids:["jmx.acl","io.fabric8.agent","io.fabric8.git","io.fabric8.mq.fabric.template","io.fabric8.openshift.agent","io.fabric8.service.ZkDataStoreImpl","org.apache.felix.fileinstall","org.apache.karaf.command.acl.","org.apache.karaf.service.acl."],tabs:{fabric8:{label:"Fabric8",description:"Configuration options for the Fabric8 services",pids:["io.fabric8"]},karaf:{label:"Karaf",description:"Configuration options for the Apache Karaf container and subsystem",pids:["org.apache.karaf"]}}},function(n){n.TopLevelController=n._module.controller("Osgi.TopLevelController",["$scope","workspace",function(e,t){e.bundleMBean=n.getSelectionBundleMBean(t),e.serviceMBean=n.getSelectionServiceMBean(t),e.packageMBean=n.getSelectionPackageMBean(t),e.metaTypeMBean=n.getMetaTypeMBean(t)}])}(Osgi||(Osgi={})),function(d){d.PackagesController=d._module.controller("Osgi.PackagesController",["$scope","workspace","$q",function(r,o,e){var t=50;function n(e){!function(t){var i={},e=function(e){angular.forEach(e.value,function(e,t){var n={Identifier:e.Identifier,Name:"",SymbolicName:e.SymbolicName,State:e.State,Version:e.Version,LastModified:e.LastModified,Location:e.Location,Url:Core.url("/osgi/bundles/"+e.Identifier+o.hash())};e.Headers["Bundle-Name"]&&(n.Name=e.Headers["Bundle-Name"].Value),i[n.Identifier]=n}),angular.forEach(t,function(n,e){angular.forEach(n.ExportingBundles,function(e,t){n.ExportingBundles[t]=i[e]}),angular.forEach(n.ImportingBundles,function(e,t){n.ImportingBundles[t]=i[e]}),n.ExportingBundles.sort(a("SymbolicName")),n.ImportingBundles.sort(a("SymbolicName"))}),t.sort(a("Name")),r.packages=t,r.toolbarConfig.filterConfig.totalCount=t.length,s(r.toolbarConfig.filterConfig.appliedFilters),l(),c(),Core.$apply(r)};o.jolokia.request({type:"exec",mbean:d.getSelectionBundleMBean(o),operation:"listBundles()"},{success:e,error:e})}(d.defaultPackageValues(o,r,e.value))}function a(r){return function(e,t){var n=e[r].toLowerCase(),i=t[r].toLowerCase();return n<i?-1:i<n?1:0}}function s(e){var n=r.packages;e.forEach(function(e){var t=new RegExp(e.value,"i");"name"===e.id?n=n.filter(function(e){return t.test(e.Name)}):"version"===e.id?n=n.filter(function(e){return t.test(e.Version)}):"exporting-bundle"===e.id?n=n.filter(function(e){return e.ExportingBundles.some(function(e){return t.test(e.SymbolicName)})}):"importing-bundle"===e.id&&(n=n.filter(function(e){return e.ImportingBundles.some(function(e){return t.test(e.SymbolicName)})}))}),r.filteredPackages=n}function l(){r.toolbarConfig.filterConfig.resultsCount=r.filteredPackages.length}function c(){r.scrollablePackages=r.filteredPackages.slice(0,t)}r.packages=null,r.filteredPackages=[],r.scrollablePackages=[],r.toolbarConfig={filterConfig:{fields:[{id:"name",title:"Name",placeholder:"Filter by name...",filterType:"text"},{id:"version",title:"Version",placeholder:"Filter by version...",filterType:"text"},{id:"exporting-bundle",title:"Exporting Bundle",placeholder:"Filter by exporting bundle...",filterType:"text"},{id:"importing-bundle",title:"Importing Bundle",placeholder:"Filter by importing bundle...",filterType:"text"}],resultsCount:0,totalCount:0,appliedFilters:[],onFilterChange:function(e){s(e),l(),c()}}},r.appendItems=function(){var e;if(0<r.filteredPackages.length-r.scrollablePackages.length){var t=r.scrollablePackages.length,n=r.filteredPackages.slice(t,t+10);(e=r.scrollablePackages).push.apply(e,n)}},d.getSelectionPackageMBeanAsync(o,e).then(function(e){e&&o.jolokia.request({type:"exec",mbean:e,operation:"listPackages"},{success:n,error:function(e){d.log.debug("Osgi.PackagesController.loadTableContents() failed: "+e.error)}})})}])}(Osgi||(Osgi={})),function(c){c.ServiceController=c._module.controller("Osgi.ServiceController",["$scope","$filter","workspace","$templateCache","$compile","$q",function(r,e,o,t,n,i){function a(e){var i=r.services;e.forEach(function(t){var n=new RegExp(t.value,"i");"objectClass"===t.id?i=i.filter(function(e){return e.objectClass.some(function(e){return n.test(e)})}):"bundleId"===t.id?i=i.filter(function(e){return e.BundleIdentifier.toString()===t.value}):"usingBundle"===t.id&&(i=i.filter(function(e){return e.UsingBundles.some(function(e){return n.test(e.SymbolicName)})}))}),r.filteredServices=i}function s(){r.toolbarConfig.filterConfig.resultsCount=r.filteredServices.length}r.services=null,r.filteredServices=[],r.toolbarConfig={filterConfig:{fields:[{id:"objectClass",title:"Object Class",placeholder:"Filter by object class...",filterType:"text"},{id:"bundleId",title:"Bundle ID",placeholder:"Filter by bundle ID...",filterType:"text"},{id:"usingBundle",title:"Using Bundle",placeholder:"Filter by using bundle...",filterType:"text"}],resultsCount:0,totalCount:0,appliedFilters:[],onFilterChange:function(e){a(e),s()}}};var l=function(e){!function(n){var i={};o.jolokia.request({type:"exec",mbean:c.getSelectionBundleMBean(o),operation:"listBundles()"},{success:function(e){angular.forEach(e.value,function(e,t){var n={Identifier:e.Identifier,Name:"",SymbolicName:e.SymbolicName,State:e.State,Version:e.Version,LastModified:e.LastModified,Location:e.Location,Url:Core.url("/osgi/bundles/"+e.Identifier+o.hash())};e.Headers["Bundle-Name"]&&(n.Name=e.Headers["Bundle-Name"].Value),i[n.Identifier]=n});var t=[];angular.forEach(n,function(n,e){n.Url=Core.url("/osgi/bundles/"+n.Identifier+o.hash()),angular.forEach(n.UsingBundles,function(e,t){n.UsingBundles[t]=i[e]}),t.push(n)}),r.services=t,r.toolbarConfig.filterConfig.totalCount=t.length,a(r.toolbarConfig.filterConfig.appliedFilters),s(),Core.$apply(r)},error:function(e){c.log.debug("Osgi.ServiceController.augmentServicesInfo() failed: "+e.error)}})}(c.defaultServiceValues(o,r,e.value))};c.getSelectionServiceMBeanAsync(o,i).then(function(e){e&&o.jolokia.request({type:"exec",mbean:e,operation:"listServices()"},{success:l,error:function(e){c.log.debug("Osgi.ServiceController.loadServices() failed: "+e.error)}})})}])}(Osgi||(Osgi={})),function(a){var e=function(){function e(e,t,n){this.jolokia=e,this.jolokiaStatus=t,this.rbacTasks=n}return e.prototype.process=function(n){var i=this;a.log.debug("Processing tree",n),this.rbacTasks.getACLMBean().then(function(e){var t=i.flatten(n);switch(i.jolokiaStatus.listMethod){case JVM.JolokiaListMethod.LIST_OPTIMISED:a.log.debug("Process JMX tree: optimised list mode"),i.hasDecoratedRBAC(t)?(a.log.debug("JMX tree already decorated with RBAC"),i.processWithRBAC(t)):(a.log.debug("JMX tree not decorated with RBAC, fetching RBAC info now"),i.processGeneral(e,t)),a.log.debug("Processed tree mbeans with RBAC",t);break;case JVM.JolokiaListMethod.LIST_GENERAL:case JVM.JolokiaListMethod.LIST_CANT_DETERMINE:default:a.log.debug("Process JMX tree: general mode"),i.processGeneral(e,t),a.log.debug("Processed tree mbeans",t)}})},e.prototype.flatten=function(e){var t={};return this.flattenFolder(t,e),t},e.prototype.flattenFolder=function(t,e){var n=this;Core.isBlank(e.objectName)||(t[e.objectName]=e),e.isFolder()&&e.children.forEach(function(e){return n.flattenFolder(t,e)})},e.prototype.hasDecoratedRBAC=function(e){var t=_.find(e,function(e){return!_.isEmpty(e.mbean.op)&&_.isEmpty(e.mbean.opByString)});return _.isNil(t)},e.prototype.processWithRBAC=function(e){var r=this;_.forEach(e,function(e,t){var n=e.mbean,i=n&&(_.isNil(n.canInvoke)||n.canInvoke);r.addCanInvokeToClass(e,i)})},e.prototype.processGeneral=function(n,t){var i=this,r=[],o={};_.forEach(t,function(e,t){i.addCanInvokeRequests(n,t,e,r,o)}),r.push({type:"exec",mbean:n,operation:"canInvoke(java.util.Map)",arguments:[o]}),a.log.debug("Batch canInvoke request:",r),this.jolokia.request(r,Core.onSuccess(function(e){return i.applyCanInvoke(t,e)},{error:function(e){}}))},e.prototype.addCanInvokeRequests=function(e,t,n,i,r){var o=this;if(i.push({type:"exec",mbean:e,operation:"canInvoke(java.lang.String)",arguments:[t]}),n.mbean&&n.mbean.op){n.mbean.opByString={};var a=[];_.forEach(n.mbean.op,function(e,t){_.isArray(e)?_.forEach(e,function(e){return o.addOperation(n,a,t,e)}):o.addOperation(n,a,t,e)}),_.isEmpty(a)||(r[t]=a)}},e.prototype.addOperation=function(e,t,n,i){var r=Core.operationToString(n,i.args);e.mbean.opByString[r]=i,t.push(r)},e.prototype.applyCanInvoke=function(i,e){var t=e.request.arguments[0];if(t&&_.isString(t)){var n=e.value;i[t].mbean.canInvoke=e.value,this.addCanInvokeToClass(i[t],n)}else{var r=e.value;a.log.debug("Batch canInvoke response:",r),_.forEach(r,function(e,n){_.forEach(e,function(e,t){i[n].mbean.opByString[t].canInvoke=e.CanInvoke})})}},e.prototype.addCanInvokeToClass=function(e,t){var n=t?"can-invoke":"cant-invoke";e.class=this.addClass(this.stripClasses(e.class),n),t||(e.icon="fa fa-lock")},e.prototype.stripClasses=function(e){if(Core.isBlank(e))return e;var t=e.split(" "),n=[];return t.forEach(function(e){"can-invoke"!==e&&"cant-invoke"!==e&&n.push(e)}),n.join(" ").trim()},e.prototype.addClass=function(e,t){if(Core.isBlank(e))return t;var n=e.split(" ");return n.push(t),_.uniq(n).join(" ").trim()},e}();a.JmxTreeProcessor=e}(RBAC||(RBAC={})),function(a){var o="canInvoke(java.lang.String)",s="canInvoke(java.lang.String,java.lang.String)",l="canInvoke(java.lang.String,java.lang.String,[Ljava.lang.String;)",e=function(){function t(e){this.workspace=e,this.restrict="A"}return t.factory=["workspace",function(e){return new t(e)}],t.prototype.link=function(e,n,i){var r=this,t=i.objectName,o=i.objectNameModel;a.log.debug("hawtio-show: object-name=",t,"object-name-model=",o),(t||o)&&(t?this.applyInvokeRights(n,t,i):e.$watch(o,function(e,t){e&&e!==t&&r.applyInvokeRights(n,e,i)}))},t.prototype.applyInvokeRights=function(e,t,n){var i=n.methodName,r=n.argumentTypes,o=n.mode||"hide",a=this.getCanInvokeOperation(i,r),s=(this.getArguments(a,t,i,r),Core.parseMBean(t)),l=this.workspace.findMBeanWithProperties(s.domain,s.attributes);if(l){var c=i?this.workspace.hasInvokeRights(l,i):this.workspace.hasInvokeRights(l);this.changeDisplay(e,c,o)}},t.prototype.getCanInvokeOperation=function(e,t){var n=o;return Core.isBlank(e)||(n=s),Core.isBlank(t)||(n=l),n},t.prototype.getArguments=function(e,t,n,i){var r=[];return e===o?r.push(t):e===s?(r.push(t),r.push(n)):e===l&&(r.push(t),r.push(n),r.push(i.split(",").map(function(e){return e.trim()}))),r},t.prototype.changeDisplay=function(e,t,n){t?"inverse"===n&&e.css({display:"none"}):"remove"===n?e.css({display:"none"}):"hide"===n&&e.css({visibility:"hidden"})},t}();a.HawtioShow=e}(RBAC||(RBAC={})),function(o){var e=function(){function e(){}return e.create=["postLoginTasks","jolokia","$q",function(e,t,n){var i=new r(n.defer());return e.addTask("FetchJMXSecurityMBeans",function(){return i.fetchJMXSecurityMBeans(t)}),i}],e}();o.RBACTasksFactory=e;var t=function(){function e(){}return e.create=["rbacTasks",function(e){return e.getACLMBean()}],e}();o.RBACACLMBeanFactory=t;var r=function(n){function e(e){var t=n.call(this,"RBAC")||this;return t.deferred=e,t.ACLMBean=null,t}return __extends(e,n),e.prototype.fetchJMXSecurityMBeans=function(e){var r=this;e.request({type:"search",mbean:"*:type=security,area=jmx,*"},Core.onSuccess(function(e){o.log.debug("Fetching JMXSecurity MBeans...",e);var t=e.value,n="";if(0===t.length)o.log.info("Didn't discover any JMXSecurity mbeans, client-side role based access control is disabled");else if(1===t.length)n=t[0];else if(1<t.length){var i=!1;t.forEach(function(e){i||_.includes(e,"HawtioDummy")||_.includes(e,"rank=")||(n=e,i=!0)})}null!=n&&""!=n?o.log.info("Using mbean",n,"for client-side role based access control"):o.log.info("Didn't discover any effective JMXSecurity mbeans, client-side role based access control is disabled"),r.initialize(n)}))},e.prototype.initialize=function(e){this.ACLMBean=e,this.deferred.resolve(this.ACLMBean),n.prototype.execute.call(this)},e.prototype.getACLMBean=function(){return this.deferred.promise},e}(Core.Tasks)}(RBAC||(RBAC={})),function(a){e.$inject=["jolokia","jolokiaStatus","rbacTasks","preLogoutTasks","workspace"],a.pluginName="hawtio-jmx-rbac",a.log=Logger.get(a.pluginName),angular.module(a.pluginName,[]).directive("hawtioShow",a.HawtioShow.factory).service("rbacTasks",a.RBACTasksFactory.create).service("rbacACLMBean",a.RBACACLMBeanFactory.create).run(e);var s="rbac";function e(e,t,n,i,r){i.addTask("ResetRBAC",function(){a.log.debug("Resetting RBAC tasks"),n.reset(),r.removeNamedTreePostProcessor(s)});var o=new a.JmxTreeProcessor(e,t,n);n.addTask("JMXTreePostProcess",function(){return r.addNamedTreePostProcessor(s,function(e){return o.process(e)})})}hawtioPluginLoader.addModule(a.pluginName)}(RBAC||(RBAC={})),function(e){var t=function(){function e(e){this.workspace=e}return e.$inject=["workspace"],e.prototype.getTabs=function(){var e=[new Nav.HawtioTab("System Properties","/runtime/sysprops"),new Nav.HawtioTab("Metrics","/runtime/metrics")];return this.workspace.treeContainsDomainAndProperties("java.lang",{type:"Threading"})&&e.push(new Nav.HawtioTab("Threads","/runtime/threads")),e},e}();e.RuntimeService=t}(Runtime||(Runtime={})),function(e){var t=function(){function e(e){this.runtimeService=e}return e.$inject=["runtimeService"],e.prototype.$onInit=function(){this.tabs=this.runtimeService.getTabs()},e}();e.RuntimeController=t,e.runtimeComponent={template:'<hawtio-tabs-layout tabs="$ctrl.tabs"></hawtio-tabs-layout>',controller:t}}(Runtime||(Runtime={})),function(e){function t(e){e.when("/runtime/sysprops",{template:"<runtime-system-properties></runtime-system-properties>"}).when("/runtime/metrics",{template:"<runtime-metrics></runtime-metrics>"}).when("/runtime/threads",{template:"<runtime-threads></runtime-threads>"})}function n(e){e.addUserDoc("runtime","plugins/runtime/doc/help.md")}function i(e,t){e.addItem({title:"Runtime",basePath:"/runtime",template:"<runtime></runtime>",isValid:function(){return t.treeContainsDomainAndProperties("java.lang")}})}t.$inject=["$routeProvider"],n.$inject=["helpRegistry"],i.$inject=["mainNavService","workspace"],e.configureRoutes=t,e.configureHelp=n,e.configureMainNav=i}(Runtime||(Runtime={})),function(e){var t=function(){function e(e){this.jolokiaService=e}return e.$inject=["jolokiaService"],e.prototype.getSystemProperties=function(){return this.jolokiaService.getAttribute("java.lang:type=Runtime",null).then(function(e){var i=[];return angular.forEach(e.SystemProperties,function(e,t){var n={name:t,value:e};i.push(n)}),i})},e}();e.SystemPropertiesService=t}(Runtime||(Runtime={})),function(e){var t=function(){function e(e){var t=this;this.systemPropertiesService=e,this.toolbarConfig={filterConfig:{fields:[{id:"name",title:"Name",placeholder:"Filter by name...",filterType:"text"},{id:"value",title:"Value",placeholder:"Filter by value...",filterType:"text"}],onFilterChange:function(e){t.applyFilters(e)},resultsCount:0},isTableView:!0},this.tableConfig={selectionMatchProp:"name",showCheckboxes:!1},this.pageConfig={pageSize:20},this.tableColumns=[{header:"Property",itemField:"name"},{header:"Value",itemField:"value"}],this.tableDtOptions={order:[[0,"asc"]]},this.sysprops=[],this.tableItems=[]}return e.$inject=["systemPropertiesService"],e.prototype.$onInit=function(){this.loadData()},e.prototype.loadData=function(){var t=this;this.systemPropertiesService.getSystemProperties().then(function(e){t.sysprops=e,t.tableItems=e,t.toolbarConfig.filterConfig.resultsCount=e.length}).catch(function(e){return Core.notification("danger",e)})},e.prototype.applyFilters=function(e){var n=this.sysprops;e.forEach(function(e){var t=new RegExp(e.value,"i");switch(e.id){case"name":n=n.filter(function(e){return null!==e.name.match(t)});break;case"value":n=n.filter(function(e){return null!==e.value.match(t)})}}),this.tableItems=n,this.toolbarConfig.filterConfig.resultsCount=n.length},e}();e.SystemPropertiesController=t,e.systemPropertiesComponent={template:'\n      <div class="table-view runtime-sysprops-main">\n        <h1>System Properties</h1>\n        <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n        <pf-table-view config="$ctrl.tableConfig"\n                       columns="$ctrl.tableColumns"\n                       items="$ctrl.tableItems"\n                       page-config="$ctrl.pageConfig"\n                       dt-options="$ctrl.tableDtOptions">\n        </pf-table-view>\n      </div>\n    ',controller:t}}(Runtime||(Runtime={})),function(e){e.systemPropertiesModule=angular.module("runtime-system-properties",[]).component("runtimeSystemProperties",e.systemPropertiesComponent).service("systemPropertiesService",e.SystemPropertiesService).name}(Runtime||(Runtime={})),function(r){var e=function(){function e(e,t){this.jolokia=e,this.workspace=t}return e.$inject=["jolokia","workspace"],e.prototype.registerJolokiaRequests=function(e,t){var n=[this.createMBeanRequest("java.lang:type=Threading"),this.createMBeanRequest("java.lang:type=Memory"),this.createMBeanRequest("java.lang:type=OperatingSystem"),this.createMBeanRequest("java.lang:type=ClassLoading"),this.createMBeanRequest("java.lang:type=Runtime"),this.createMBeanRequest("org.springframework.boot:type=Endpoint,name=metricsEndpoint")];Core.register(this.jolokia,e,n,Core.onSuccess(t))},e.prototype.unregisterJolokiaRequests=function(e){Core.unregister(this.jolokia,e)},e.prototype.createMetric=function(e,t,n){return new r.Metric(e,t,n)},e.prototype.createUtilizationMetric=function(e,t,n,i){return new r.UtilizationMetric(e,t,n,i)},e.prototype.createMBeanRequest=function(e){return{type:"read",mbean:e,arguments:[]}},e}();r.MetricsService=e}(Runtime||(Runtime={})),function(e){var t;(t=e.MetricType||(e.MetricType={})).JVM="JVM",t.SYSTEM="System",t.SPRING_BOOT="Spring Boot";var n=function(){function e(e,t,n){this.name=e,this.value=t,this.unit=n}return e.prototype.getDescription=function(){return this.name+": "+this.value+(null!=this.unit?" "+this.unit:"")},e}(),i=function(o){function e(e,t,n,i){var r=o.call(this,e,t,i)||this;return r.name=e,r.value=t,r.available=n,r.unit=i,r}return __extends(e,o),e.prototype.getDescription=function(){var e=null!=this.unit?" "+this.unit:"",t=this.name+": "+this.value;return t+=" "+e+" of",t+=" "+this.available+e},e}(e.Metric=n);e.UtilizationMetric=i;var r=function(){function e(e,t){void 0===t&&(t=[]),this.type=e,this.metrics=t}return e.prototype.updateMetrics=function(e){var n=this;e.forEach(function(e){var t=n.metrics.map(function(e){return e.name}).indexOf(e.name);-1===t?n.metrics.push(e):n.metrics[t]=e})},e}();e.MetricGroup=r}(Runtime||(Runtime={})),function(p){var e=function(){function e(e,t,n,i){this.$scope=e,this.metricsService=t,this.$filter=n,this.humanizeService=i,this.metricGroups=[]}return e.$inject=["$scope","metricsService","$filter","humanizeService"],e.prototype.$onInit=function(){var t=this;this.loading=!0,this.metricsService.registerJolokiaRequests(this.$scope,function(e){t.loading=!1,t.loadMetrics(e)})},e.prototype.$onDestroy=function(){this.metricsService.unregisterJolokiaRequests(this.$scope)},e.prototype.loadMetrics=function(e){var t,n=this,i=e.value,r=[];switch(e.request.mbean){case"java.lang:type=Threading":t=p.MetricType.JVM,r.push(this.metricsService.createMetric("Thread count",i.ThreadCount));break;case"java.lang:type=Memory":t=p.MetricType.JVM;var o=this.formatBytes(i.HeapMemoryUsage.used);r.push(this.metricsService.createMetric("Heap used",o[0],o[1]));break;case"java.lang:type=OperatingSystem":var a=this.$filter("number"),s=a(100*i.SystemCpuLoad,2),l=a(i.SystemLoadAverage,2),c=this.formatBytes(i.FreePhysicalMemorySize),d=this.formatBytes(i.TotalPhysicalMemorySize);t=p.MetricType.SYSTEM,r.push(this.metricsService.createMetric("Available processors",i.AvailableProcessors)),r.push(this.metricsService.createMetric("CPU load",s,"%")),r.push(this.metricsService.createMetric("Load average",l)),r.push(this.metricsService.createUtilizationMetric("Memory used",c[0],d[0],c[1])),r.push(this.metricsService.createUtilizationMetric("File descriptors used",i.OpenFileDescriptorCount,i.MaxFileDescriptorCount));break;case"java.lang:type=ClassLoading":t=p.MetricType.JVM,r.push(this.metricsService.createMetric("Classes loaded",i.LoadedClassCount));break;case"java.lang:type=Runtime":var u=this.$filter("date");t=p.MetricType.JVM,r.push(this.metricsService.createMetric("Start time",u(i.StartTime,"yyyy-MM-dd HH:mm:ss"))),r.push(this.metricsService.createMetric("Uptime",Core.humanizeMilliseconds(i.Uptime)));break;case"org.springframework.boot:type=Endpoint,name=metricsEndpoint":t=p.MetricType.SPRING_BOOT,Object.keys(i.Data).filter(function(e){return!/^(mem|processors|instance|uptime|heap|nonheap|threads|classes|gc|systemload)/.test(e)}).forEach(function(e){r.push(n.metricsService.createMetric(n.humanizeService.toSentenceCase(e),i.Data[e]))})}this.getMetricGroup(t).updateMetrics(r),Core.$apply(this.$scope)},e.prototype.getMetricGroup=function(t){var e=this.metricGroups.filter(function(e){return e.type===t});if(0<e.length)return e[0];var n=new p.MetricGroup(t);return this.metricGroups.push(n),n},e.prototype.formatBytes=function(e){if(0==e)return[0,"Bytes"];var t=Math.floor(Math.log(e)/Math.log(1024));return[parseFloat((e/Math.pow(1024,t)).toFixed(2)),["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][t]]},e}();p.MetricsController=e,p.metricsComponent={template:'\n      <div class="runtime-metrics-main">\n        <h1>Metrics</h1>\n        <div class="blank-slate-pf no-border" ng-if="$ctrl.loading === false && $ctrl.metricGroups.length === 0">\n          <div class="blank-slate-pf-icon">\n            <span class="pficon pficon pficon-warning-triangle-o"></span>\n          </div>\n          <h1>No Metrics</h1>\n          <p>There are no metrics to display.</p>\n          <p>Wait for some metrics to be generated or check your application configuration.</p>\n        </div>\n        <div class="cards-pf" ng-if="$ctrl.metricGroups.length > 0">\n          <div class="container-fluid container-cards-pf">\n            <div class="row row-cards-pf">\n              <div ng-if="group.metrics.length > 0" class="col-xs-12 col-sm-6 col-md-4 col-lg-3" ng-repeat="group in $ctrl.metricGroups | orderBy: \'type\'">\n                <pf-card\n                  head-title="{{group.type}}"\n                  spinner-text="Loading">\n                  <div class="card-pf-info-item" ng-repeat="metric in group.metrics | orderBy: \'name\'">\n                    {{metric.getDescription()}}\n                  </div>\n                </pf-card>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',controller:e}}(Runtime||(Runtime={})),function(e){e.metricsModule=angular.module("runtime-metrics",[]).component("runtimeMetrics",e.metricsComponent).service("metricsService",e.MetricsService).name}(Runtime||(Runtime={})),function(e){var t=function(){};(Runtime||(Runtime={})).Thread=t}(),function(e){var t=function(){function t(e){this.jolokiaService=e}return t.$inject=["jolokiaService"],t.prototype.getThreads=function(){return this.jolokiaService.execute("java.lang:type=Threading","dumpAllThreads(boolean,boolean)",!1,!1).then(function(e){return e.forEach(function(e){e.threadState=t.STATE_LABELS[e.threadState],e.waitedTime=0<e.waitedTime?Core.humanizeMilliseconds(e.waitedTime):"",e.blockedTime=0<e.blockedTime?Core.humanizeMilliseconds(e.blockedTime):""}),e})},t.prototype.isThreadContentionMonitoringEnabled=function(){return this.jolokiaService.getAttribute("java.lang:type=Threading","ThreadContentionMonitoringEnabled")},t.prototype.enableThreadContentionMonitoring=function(){return this.jolokiaService.setAttribute("java.lang:type=Threading","ThreadContentionMonitoringEnabled",!0)},t.prototype.disableThreadContentionMonitoring=function(){return this.jolokiaService.setAttribute("java.lang:type=Threading","ThreadContentionMonitoringEnabled",!1)},t.STATE_LABELS={BLOCKED:"Blocked",NEW:"New",RUNNABLE:"Runnable",TERMINATED:"Terminated",TIMED_WAITING:"Timed waiting",WAITING:"Waiting"},t}();e.ThreadsService=t}(Runtime||(Runtime={})),function(e){var t=function(){function e(e,t,n){var i=this;this.$interval=e,this.$uibModal=t,this.threadsService=n,this.FILTER_FUNCTIONS={state:function(e,t){return e.filter(function(e){return e.threadState===t})},name:function(e,t){var n=new RegExp(t,"i");return e.filter(function(e){return n.test(e.threadName)})}},this.toolbarActions=[],this.enableThreadContentionMonitoringAction={name:"Enable thread contention monitoring",actionFn:function(){return i.enableThreadContentionMonitoring()}},this.disableThreadContentionMonitoringAction={name:"Disable thread contention monitoring",actionFn:function(){return i.disableThreadContentionMonitoring()}},this.toolbarConfig={filterConfig:{fields:[{id:"state",title:"State",placeholder:"Filter by state...",filterType:"select",filterValues:["Blocked","New","Runnable","Terminated","Timed waiting","Waiting"]},{id:"name",title:"Name",placeholder:"Filter by name...",filterType:"text"}],onFilterChange:function(e){i.applyFilters(e)},resultsCount:0,appliedFilters:[]},actionsConfig:{primaryActions:this.toolbarActions},isTableView:!0},this.tableConfig={selectionMatchProp:"threadId",showCheckboxes:!1},this.tableDtOptions={order:[[0,"desc"]]},this.tableColumns=[{header:"ID",itemField:"threadId"},{header:"State",itemField:"threadState"},{header:"Name",itemField:"threadName",templateFn:function(e){return'<span class="table-cell-truncated" title="'+e+'">'+e+"</span>"}},{header:"Waited Time",itemField:"waitedTime"},{header:"Blocked Time",itemField:"blockedTime"},{header:"Native",itemField:"inNative",templateFn:function(e){return e?'<span class="fa fa-circle" aria-hidden="true"></span><span class="hidden">b</span>':'<span class="hidden">a</span>'}},{header:"Suspended",itemField:"suspended",templateFn:function(e){return e?'<span class="fa fa-circle" aria-hidden="true"></span><span class="hidden">b</span>':'<span class="hidden">a</span>'}}],this.tableActionButtons=[{name:"More",title:"View more information about this thread",actionFn:function(e,t){i.$uibModal.open({component:"threadModal",size:"lg",resolve:{thread:t}})}}]}return e.$inject=["$interval","$uibModal","threadsService"],e.prototype.$onInit=function(){this.showThreadContentionMonitoringView(),this.loadThreads()},e.prototype.$onDestroy=function(){this.threadContentionMonitoringEnabled&&this.disableThreadContentionMonitoring()},e.prototype.showThreadContentionMonitoringView=function(){var t=this;this.threadsService.isThreadContentionMonitoringEnabled().then(function(e){return e?t.showThreadContentionMonitoringEnabledView():t.showThreadContentionMonitoringDisabledView()})},e.prototype.loadThreads=function(){var t=this;this.threadsService.getThreads().then(function(e){t.allThreads=e,t.applyFilters(t.toolbarConfig.filterConfig.appliedFilters)})},e.prototype.applyFilters=function(e){var t=this,n=this.allThreads;e.forEach(function(e){n=t.FILTER_FUNCTIONS[e.id](n,e.value)}),this.filteredThreads=n,this.toolbarConfig.filterConfig.resultsCount=n.length},e.prototype.enableThreadContentionMonitoring=function(){var e=this;this.threadsService.enableThreadContentionMonitoring().then(function(){return e.showThreadContentionMonitoringEnabledView()})},e.prototype.showThreadContentionMonitoringEnabledView=function(){var e=this;this.threadContentionMonitoringEnabled=!0,this.toolbarActions[0]=this.disableThreadContentionMonitoringAction,this.intervalId=this.$interval(function(){return e.loadThreads()},5e3)},e.prototype.disableThreadContentionMonitoring=function(){var e=this;this.threadsService.disableThreadContentionMonitoring().then(function(){return e.showThreadContentionMonitoringDisabledView()})},e.prototype.showThreadContentionMonitoringDisabledView=function(){this.threadContentionMonitoringEnabled=!1,this.toolbarActions[0]=this.enableThreadContentionMonitoringAction,this.$interval.cancel(this.intervalId)},e}();e.ThreadsController=t,e.threadsComponent={template:'\n      <div class="table-view">\n        <h1>Threads</h1>\n        <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n        <pf-table-view class="runtime-threads-table"\n                       config="$ctrl.tableConfig"\n                       dt-options="$ctrl.tableDtOptions"\n                       columns="$ctrl.tableColumns"\n                       items="$ctrl.filteredThreads"\n                       action-buttons="$ctrl.tableActionButtons">\n        </pf-table-view>\n      </div>\n    ',controller:t}}(Runtime||(Runtime={})),function(e){var t=function(){function e(){}return Object.defineProperty(e.prototype,"thread",{get:function(){return this.resolve.thread},enumerable:!0,configurable:!0}),e}();e.ThreadModalController=t,e.threadModalComponent={bindings:{resolve:"<",close:"&"},template:'\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$ctrl.close()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <h4 class="modal-title">Thread</h4>\n      </div>\n      <div class="modal-body">\n        <div class="row">\n          <div class="col-md-12">\n            <dl class="dl-horizontal">\n              <dt>ID</dt>\n              <dd>{{$ctrl.thread.threadId}}</dd>\n              <dt>State</dt>\n              <dd>{{$ctrl.thread.threadState}}</dd>\n              <dt>Name</dt>\n              <dd>{{$ctrl.thread.threadName}}</dd>\n              <dt>Native</dt>\n              <dd>{{$ctrl.thread.inNative ? \'yes\' : \'no\'}}</dd>\n              <dt>Suspended</dt>\n              <dd>{{$ctrl.thread.suspended ? \'yes\' : \'no\'}}</dd>\n              <dt>Waited Count</dt>\n              <dd>{{$ctrl.thread.waitedCount}}</dd>\n              <dt ng-show="$ctrl.thread.waitedTime">Waited Time</dt>\n              <dd ng-show="$ctrl.thread.waitedTime">{{$ctrl.thread.waitedTime}}</dd>\n              <dt>Blocked Count</dt>\n              <dd>{{$ctrl.thread.blockedCount}}</dd>\n              <dt ng-show="$ctrl.thread.blockedTime">Blocked Time</dt>\n              <dd ng-show="$ctrl.thread.blockedTime">{{$ctrl.thread.blockedTime}}</dd>\n              <div ng-show="$ctrl.thread.lockInfo != null">\n                <dt>Lock Name</dt>\n                <dd>{{$ctrl.thread.lockName}}</dd>\n                <dt>Lock Class Name</dt>\n                <dd>{{$ctrl.thread.lockInfo.className}}</dd>\n                <dt>Lock Identity Hash Code</dt>\n                <dd>{{$ctrl.thread.lockInfo.identityHashCode}}</dd>\n              </div>\n              <div ng-show="$ctrl.thread.lockOwnerId > 0">\n                <dt>Waiting for lock owned by</dt>\n                <dd><a href="" ng-click="selectThreadById($ctrl.thread.lockOwnerId)">{{$ctrl.thread.lockOwnerId}} - {{$ctrl.thread.lockOwnerName}}</a></dd>\n              </div>\n              <div ng-show="$ctrl.thread.lockedSynchronizers.length > 0">\n                <dt>Locked Synchronizers</dt>\n                <dd>\n                  <ol class="list-unstyled">\n                    <li ng-repeat="synchronizer in $ctrl.thread.lockedSynchronizers">\n                      <span title="Class Name">{{synchronizer.className}}</span> -\n                      <span title="Identity Hash Code">{{synchronizer.identityHashCode}}</span>\n                    </li>\n                  </ol>\n                </dd>\n              </div>\n            </dl>\n          </div>\n        </div>\n        <div class="row" ng-if="$ctrl.thread.lockedMonitors.length > 0">\n          <div class="col-md-12">\n            <dl>\n              <dt>Locked Monitors</dt>\n              <dd>\n                <ol>\n                  <li ng-repeat="monitor in $ctrl.thread.lockedMonitors">\n                    Frame: <strong>{{monitor.lockedStackDepth}}</strong>\n                    <span class="green">{{monitor.lockedStackFrame.className}}</span>\n                    <span class="bold">.</span>\n                    <span class="blue bold">{{monitor.lockedStackFrame.methodName}}</span>\n                    ({{monitor.lockedStackFrame.fileName}}<span ng-show="frame.lineNumber > 0">:{{monitor.lockedStackFrame.lineNumber}}</span>)\n                    <span class="orange" ng-show="monitor.lockedStackFrame.nativeMethod">(Native)</span>\n                  </li>\n                </ol>\n              </dd>\n            </dl>\n          </div>\n        </div>\n        <div class="row" ng-if="$ctrl.thread.stackTrace.length > 0">\n          <div class="col-md-12">\n            <dl>\n              <dt>Stack Trace</dt>\n              <dd>\n                <ol>\n                  <li ng-repeat="frame in $ctrl.thread.stackTrace">\n                    <span class="green">{{frame.className}}</span>\n                    <span class="bold">.</span>\n                    <span class="blue bold">{{frame.methodName}}</span>\n                    ({{frame.fileName}}<span ng-show="frame.lineNumber > 0">:{{frame.lineNumber}}</span>)\n                    <span class="orange" ng-show="frame.nativeMethod">(Native)</span>\n                  </li>\n                </ol>\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    ',controller:t}}(Runtime||(Runtime={})),function(e){e.threadsModule=angular.module("runtime-threads",[]).component("runtimeThreads",e.threadsComponent).component("threadModal",e.threadModalComponent).service("threadsService",e.ThreadsService).name}(Runtime||(Runtime={})),function(e){var t=angular.module("hawtio-jmx-runtime",[e.systemPropertiesModule,e.metricsModule,e.threadsModule]).config(e.configureRoutes).run(e.configureHelp).run(e.configureMainNav).component("runtime",e.runtimeComponent).service("runtimeService",e.RuntimeService).name;hawtioPluginLoader.addModule(t),e.log=Logger.get(t)}(Runtime||(Runtime={})),angular.module("hawtio-integration-templates",[]).run(["$templateCache",function(e){e.put("plugins/activemq/html/browseQueue.html",'<div ng-controller="ActiveMQ.BrowseQueueController">\n\n  <h1>Browse Queue</h1>\n\n  <div ng-hide="showMessageDetails">\n    <div class="row toolbar-pf table-view-pf-toolbar">\n      <div class="col-sm-12">\n        <form class="toolbar-pf-actions search-pf">\n          <div class="form-group toolbar-pf-filter has-clear">\n            <div class="search-pf-input-group">\n              <label for="filterByKeyword" class="sr-only">Filter by keyword</label>\n              <input id="filterByKeyword" type="search" ng-model="gridOptions.filterOptions.filterText"\n                    class="form-control" placeholder="Filter by keyword..." autocomplete="off">\n              <button type="button" class="clear" aria-hidden="true" ng-click="clearFilter()">\n                <span class="pficon pficon-close"></span>\n              </button>\n            </div>\n          </div>\n          <div class="toolbar-pf-action-right">\n            <div class="form-group">\n              <button class="btn btn-default" ng-disabled="!gridOptions.selectedItems.length" ng-show="dlq" ng-click="retryMessages()"\n                hawtio-show object-name="{{workspace.selection.objectName}}" method-name="retryMessage" mode="remove"\n                title="Moves the dead letter queue message back to its original destination so it can be retried" data-placement="bottom">\n                Retry\n              </button>\n              <button class="btn btn-default" ng-disabled="gridOptions.selectedItems.length !== 1" ng-show="showButtons" ng-click="resendMessage()"\n                hawtio-show object-name="{{workspace.selection.objectName}}" method-name="sendTextMessage" mode="remove"\n                title="Edit the message to resend it" data-placement="bottom">\n                Resend\n              </button>\n\n              <button class="btn btn-default" ng-disabled="!gridOptions.selectedItems.length" ng-show="showButtons"\n                ng-click="moveDialog = true"\n                hawtio-show object-name="{{workspace.selection.objectName}}" method-name="moveMessageTo" mode="remove"\n                title="Move the selected messages to another destination" data-placement="bottom">\n                Move\n              </button>\n              <button class="btn btn-default" ng-disabled="!gridOptions.selectedItems.length" ng-show="showButtons"\n                ng-click="deleteDialog = true"\n                hawtio-show object-name="{{workspace.selection.objectName}}" method-name="removeMessage" mode="remove"\n                title="Delete the selected messages">\n                Delete\n              </button>\n              <button class="btn btn-default" ng-click="refresh()"\n                hawtio-show object-name="{{workspace.selection.objectName}}" method-name="browse" mode="remove"\n                title="Refreshes the list of messages">\n                <i class="fa fa-refresh"></i>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n    <table class="table table-striped table-bordered table-hover activemq-browse-table" hawtio-simple-table="gridOptions"></table>\n  </div>\n\n  <div ng-show="showMessageDetails">\n    <div class="row toolbar-pf">\n      <div class="col-sm-12">\n        <form class="toolbar-pf-actions">\n          <div class="form-group">\n            <button class="btn btn-primary" ng-click="showMessageDetails = false">\n              Back\n            </button>\n          </div>\n\n          <div class="toolbar-pf-action-right">\n            <div class="form-group">\n              <button class="btn btn-default" ng-disabled="!gridOptions.selectedItems.length" ng-show="showButtons"\n                ng-click="moveDialog = true"\n                hawtio-show object-name="{{workspace.selection.objectName}}" method-name="moveMessageTo" mode="remove"\n                title="Move the selected messages to another destination" data-placement="bottom">\n                Move\n              </button>\n              <button class="btn btn-danger" ng-disabled="!gridOptions.selectedItems.length" ng-show="showButtons"\n                ng-click="deleteDialog = true"\n                hawtio-show object-name="{{workspace.selection.objectName}}" method-name="removeMessage" mode="remove"\n                title="Delete the selected messages">\n                Delete\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <div hawtio-pager="messages" on-index-change="selectRowIndex" row-index="rowIndex"></div>\n\n    <div class="expandable closed">\n      <div title="Headers" class="title">\n        <h3><i class="expandable-indicator"></i> Headers & Properties</h3>\n      </div>\n      <div class="expandable-body well">\n        <table class="table table-condensed table-striped table-bordered table-hover">\n          <thead>\n            <tr>\n              <th>Header</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody compile="row.headerHtml"></tbody>\n        </table>\n      </div>\n    </div>\n\n    <h3>Displaying body as <span ng-bind="row.textMode"></span></h3>\n    <div hawtio-editor="row.bodyText" read-only="true" mode=\'mode\'></div>\n\n  </div>\n\n  <div hawtio-confirm-dialog="deleteDialog" title="Delete messages?"\n       ok-button-text="Delete"\n       cancel-button-text="Cancel"\n       on-ok="deleteMessages()">\n    <div class="dialog-body">\n      <p class="alert alert-warning">\n        <span class="pficon pficon-warning-triangle-o"></span>\n        This operation cannot be undone so please be careful.\n      </p>\n      <p>You are about to delete\n        <ng-pluralize count="gridOptions.selectedItems.length"\n                      when="{\'1\': \'a message!\', \'other\': \'{} messages!\'}">\n        </ng-pluralize>\n      </p>\n    </div>\n  </div>\n\n  <div hawtio-confirm-dialog="moveDialog" title="Move messages?"\n       ok-button-text="Move"\n       cancel-button-text="Cancel"\n       on-ok="moveMessages()">\n    <div class="dialog-body">\n      <p class="alert alert-warning">\n        <span class="pficon pficon-warning-triangle-o"></span>\n        You cannot undo this operation.<br/>\n        Though after the move you can always move the\n        <ng-pluralize count="gridOptions.selectedItems.length"\n                      when="{\'1\': \'message\', \'other\': \'messages\'}"></ng-pluralize>\n        back again.\n      </p>\n      <p>Move\n        <ng-pluralize count="gridOptions.selectedItems.length"\n                      when="{\'1\': \'message\', \'other\': \'{} messages\'}"></ng-pluralize>\n        to: <select ng-model="queueName" ng-options="qn for qn in queueNames" ng-init="queueName=queueNames[0]"></select>\n      </p>\n    </div>\n  </div>\n\n</div>\n\n'),e.put("plugins/activemq/html/destinations.html",'<div class="table-view" ng-controller="ActiveMQ.QueuesController">\n\n  <h2 class="destination-heading">{{destinationType}}</h2>\n\n  <div>\n    <pf-toolbar config="toolbarConfig"></pf-toolbar>\n    <pf-table-view config="tableConfig"\n                   page-config="pageConfig"\n                   columns="tableColumns"\n                   items="destinations">\n    </pf-table-view>\n  </div>\n</div>'),e.put("plugins/activemq/html/durableSubscribers.html",'<div class="table-view" ng-controller="ActiveMQ.DurableSubscriberController">\n    <h2>Durable Subscribers</h2>\n    <pf-toolbar config="toolbarConfig"></pf-toolbar>\n    <table class="table table-striped table-bordered">\n      <thead>\n        <tr>\n          <th>\n            <input type="checkbox" ng-model="model.allSelected" ng-change="selectAll()">\n          </th>\n          <th>Topic</th>\n          <th>Client ID</th>\n          <th>Consumer ID</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="subscriber in durableSubscribers">\n          <td>\n            <input type="checkbox" ng-model="subscriber.selected" ng-click="toggleDeleteActionDisabled()">\n          </td>\n          <td>{{subscriber.destinationName}}</td>\n          <td>{{subscriber.clientId}}</td>\n          <td>\n              <div class="ngCellText">\n                <span ng-hide="subscriber.status != \'Offline\'">{{subscriber.consumerId}}</span>\n                <a href="" ng-show="subscriber.status != \'Offline\'" ng-click="openSubscriberDialog(subscriber)">{{subscriber.consumerId}}</a>\n              </div>\n          </td>\n          <td>{{subscriber.status}}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <script type="text/ng-template" id="createSubscriberDialog.html">\n      <form name="createSubscriber" class="form-horizontal" ng-submit="doCreateSubscriber(clientId, subscriberName, topicName, subSelector)">\n        <div class="modal-header">\n          <button type="button" class="close" aria-label="Close" ng-click="$dismiss()">\n            <span class="pficon pficon-close" aria-hidden="true"></span>\n          </button>\n          <h4 class="modal-title">Create durable subscriber</h4>\n        </div>\n        <div class="modal-body">\n          <div class="form-group">\n            <label class="col-sm-3 control-label" for="clientId">Client ID</label>\n            <div class="col-sm-9">\n              <input id="clientId" class="form-control" type="text" ng-model="clientId" required>\n            </div>\n          </div>\n          <div class="form-group">\n            <label class="col-sm-3 control-label" for="subscriberName">Subscriber name</label>\n            <div class="col-sm-9">\n              <input id="subscriberName" class="form-control" type="text" ng-model="subscriberName" required>\n            </div>\n          </div>\n          <div class="form-group">\n            <label class="col-sm-3 control-label" for="topicName">Topic name</label>\n            <div class="col-sm-9">\n              <input id="topicName" class="form-control" type="text" ng-model="topicName" required required uib-typeahead="title for title in topicNames($viewValue) | filter:$viewValue">\n            </div>\n          </div>\n          <div class="form-group">\n            <label class="col-sm-3 control-label" for="subSelector">Selector</label>\n            <div class="col-sm-9">\n              <input id="subSelector" class="form-control" type="text" ng-model="subSelector" required>\n            </div>\n          </div>\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-default" ng-click="$close()">Cancel</button>\n          <button type="submit" class="btn btn-primary" ng-click="$close()">Create</button>\n        </div>\n      </form>\n    <\/script>\n\n    <script type="text/ng-template" id="showSubscriberDialog.html">\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$close()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <h4 class="modal-title">Durable subscriber</h4>\n      </div>\n      <div class="modal-body">\n        <dl class="dl-horizontal">\n          <dt>Client Id</dt>\n          <dd>{{selectedSubscriber.ClientId}}</dd>\n          <dt>Subscription Name</dt>\n          <dd>{{selectedSubscriber.SubscriptionName}}</dd>\n          <dt>Topic Name</dt>\n          <dd>{{selectedSubscriber.DestinationName}}</dd>\n          <dt ng-if="selectedSubscriber.Selector">Selector</dt>\n          <dd ng-if="selectedSubscriber.Selector">{{selectedSubscriber.Selector}}</dd>\n          <dt>Status</dt>\n          <dd>{{selectedSubscriber.Status}}</dd>\n          <dt>Enqueue Counter</dt>\n          <dd>{{selectedSubscriber.EnqueueCounter}}</dd>\n          <dt>Dequeue Counter</dt>\n          <dd>{{selectedSubscriber.DequeueCounter}}</dd>\n          <dt>Dispatched Counter</dt>\n          <dd>{{selectedSubscriber.DispatchedCounter}}</dd>\n          <dt>Pending Size</dt>\n          <dd>{{selectedSubscriber.PendingQueueSize}}</dd>\n        </dl>\n      </div>\n    <\/script>\n\n    <div hawtio-confirm-dialog="deleteSubscriberDialog.show"\n         title="Delete durable subscriber"\n         ok-button-text="Yes"\n         cancel-button-text="No"\n         on-ok="deleteSubscribers()">\n      <div class="dialog-body">\n        <p>Are you sure you want to delete the subscriber(s)?</p>\n      </div>\n    </div>\n\n</div>'),e.put("plugins/activemq/html/jobs.html",'<div ng-controller="ActiveMQ.JobSchedulerController">\n\n    <div class="row">\n      <div class="col-md-12">\n        <div class="pull-right">\n            <form class="form-inline">\n                <button class="btn btn-default" ng-disabled="!gridOptions.selectedItems.length"\n                        hawtio-show object-name="{{workspace.selection.objectName}}" method-name="removeJob"\n                        ng-click="deleteJobsDialog.open()"\n                        title="Delete the selected jobs">\n                  <i class="fa fa-remove"></i> Delete\n                </button>\n                <button class="btn btn-default" ng-click="refresh()"\n                        title="Refreshes the list of subscribers">\n                    <i class="fa fa-refresh"></i>\n                </button>\n            </form>\n        </div>\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="gridStyle" ng-grid="gridOptions"></div>\n    </div>\n\n    <div hawtio-confirm-dialog="deleteJobsDialog.show" ok-button-text="Yes" cancel-button-text="No" on-ok="deleteJobs()">\n      <div class="dialog-body">\n        <p>Are you sure you want to delete the jobs</p>\n      </div>\n    </div>\n\n</div>'),e.put("plugins/activemq/html/preferences.html",'<form class="form-horizontal activemq-preferences-form" ng-controller="ActiveMQ.PreferencesController">\n\n  <div class="form-group">\n    <label class="col-md-2 control-label" for="activemqUserName">\n      ActiveMQ user name\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="The user name to be used when connecting to the broker"></span>\n    </label>\n    <div class="col-md-6">\n      <input id="activemqUserName" type="text" class="form-control" ng-model="activemqUserName"/>\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="col-md-2 control-label" for="activemqPassword">\n      ActiveMQ password\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="The user name to be used when connecting to the broker"></span>\n    </label>\n    <div class="col-md-6">\n      <input id="activemqPassword" type="password" class="form-control" ng-model="activemqPassword"/>\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="col-md-2 control-label" for="activemqFilterAdvisoryTopics">\n      Filter advisory topics\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="Whether to exclude advisory topics in tree/table"></span>\n    </label>\n    <div class="col-md-6">\n      <input type="checkbox" id="activemqFilterAdvisoryTopics" ng-model="activemqFilterAdvisoryTopics">\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="col-md-2 control-label" for="activemqBrowseBytesMessages">\n      Display message body as\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="Browsing byte messages should display the message body as"></span>\n    </label>\n    <div class="col-md-6">\n      <select id="activemqBrowseBytesMessages"\n              ng-model="activemqBrowseBytesMessages"\n              ng-options="key for (key, value) in messageBodyDisplayOptions"\n              ng-selected="activemqBrowseBytesMessages === value">\n      </select>\n    </div>\n  </div>\n\n</form>\n'),e.put("plugins/camel/html/browseEndpoint.html",'<div class="table-view" ng-controller="Camel.BrowseEndpointController">\n\n  <div ng-class="{\'wiki-fixed\' : !isJmxTab}">\n\n    <h2>Browse</h2>\n\n    <p ng-if="!messages">Loading...</p>\n    <div ng-if="messages">\n      <pf-toolbar config="toolbarConfig"></pf-toolbar>\n      <table class="table table-striped table-bordered camel-browse-endpoints-table">\n        <thead>\n          <tr>\n            <th>\n              <input type="checkbox" ng-model="model.allSelected" ng-change="selectAll(model.allSelected)">\n            </th>\n            <th>\n              Message ID\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="message in messages track by $index">\n            <td>\n              <input type="checkbox" ng-model="message.selected" ng-change="refreshForwardActionDisabledProperty()">\n            </td>\n            <td>\n              <div class="ngCellText">\n                <a href="" ng-click="openMessageDialog(message, $index)">{{message.id}}</a>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <script type="text/ng-template" id="camelBrowseEndpointMessageDetails.html">\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$close()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <div class="row">\n          <div class="col-md-4">\n            <h4 class="modal-title" id="myModalLabel">Message</h4>\n          </div>\n          <div class="col-md-7">\n            <div hawtio-pager="messages"\n                 on-index-change="selectRowIndex"\n                 row-index="rowIndex">\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="modal-body camel-forward-message">\n        <div class="row">\n          <div class="col-md-12">\n            <dl>\n              <dt>Forward to endpoint</dt>\n              <dd>\n                <form class="form-horizontal" ng-submit="forwardMessage(row, endpointUri)">\n                  <label class="sr-only" for="endpointUri">URI</label>\n                  <div class="input-group">\n                    <input type="text" id="endpointUri" class="form-control" ng-model="endpointUri" placeholder="URI"\n                            uib-typeahead="title for title in endpointUris() | filter:$viewValue">\n                    <div class="input-group-btn">\n                      <button type="submit" class="btn btn-default" hawtio-show ng-disabled="!endpointUri"\n                              object-name="{{camelContextMBean}}" method-name="sendBodyAndHeaders" mode="remove"\n                              data-placement="bottom" title="Forward the selected messages to another endpoint">\n                        Forward\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </dd>\n            </dl>\n          </div>\n        </div>\n        <div class="row">\n          <div class="col-md-12">\n            <dl>\n              <dt>ID</dt>\n              <dd>{{row.id}}</dd>\n            </dl>\n          </div>\n        </div>\n        <div class="row">\n          <div class="col-md-12">\n            <dl>\n              <dt>Body</dt>\n              <dd><div hawtio-editor="row.body" read-only="true" mode="mode"></div></dd>\n            </dl>\n          </div>\n        </div>\n        <div class="row">\n          <div class="col-md-12">\n            <dl>\n              <dt>Headers</dt>\n              <dd>\n                <table class="table table-bordered">\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Type</th>\n                      <th>Value</th>\n                    </tr>\n                  </thead>\n                  <tbody compile="row.headerHtml"></tbody>\n                </table>\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    <\/script>\n\n    <script type="text/ng-template" id="camelBrowseEndpointForwardMessage.html">\n      <form class="form-horizontal" ng-submit="forwardMessages(endpointUri); $close();">\n        <div class="modal-header">\n          <button type="button" class="close" aria-label="Close" ng-click="$close()">\n            <span class="pficon pficon-close" aria-hidden="true"></span>\n          </button>\n          <h4 class="modal-title">\n            Forward to endpoint\n          </h4>\n        </div>\n        <div class="modal-body">\n            <div class="form-group">\n              <label class="col-sm-1 control-label" for="endpointUri">URI</label>\n              <div class="col-sm-11">\n                <input type="text" id="endpointUri" class="form-control" ng-model="endpointUri"\n                        uib-typeahead="title for title in endpointUris() | filter:$viewValue">\n              </div>\n            </div>\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-default" ng-click="$close()">Cancel</button>\n          <button type="submit" class="btn btn-primary" ng-disabled="!endpointUri">Forward</button>\n        </div>\n      </form>\n    <\/script>\n\n  </div>\n\n</div>\n'),e.put("plugins/camel/html/createEndpoint.html",'<h1>Add Endpoint</h1>\n<div ng-controller="Camel.EndpointController" ng-switch="hasComponentNames">\n  <div ng-switch-when="true">\n    <div class="radio">\n      <label>\n        <input type="radio" ng-model="inputSource" value="uri">\n        From URI\n      </label>\n    </div>\n    <div ng-show="inputSource === \'uri\'">\n      <ng-include src="\'plugins/camel/html/createEndpointURL.html\'"></ng-include>\n    </div>\n    <div class="radio">\n      <label>\n        <input type="radio" ng-model="inputSource" value="wizard">\n        From data\n      </label>\n    </div>\n    <div ng-show="inputSource === \'wizard\'">\n      <ng-include src="\'plugins/camel/html/createEndpointWizard.html\'"></ng-include>\n    </div>\n    </tabs>\n  </div>\n  <div ng-switch-default="false">\n    <ng-include src="\'plugins/camel/html/createEndpointURL.html\'"></ng-include>\n  </div>\n</div>\n'),e.put("plugins/camel/html/createEndpointURL.html",'<form class="form-horizontal">\n  <div class="form-group">\n    <label class="col-sm-2 control-label" for="endpointName">URI</label>\n    <div class="col-sm-10">\n      <input type="text" class="form-control" size="255" ng-model="endpointName">\n    </div>\n  </div>\n  <div class="form-group">\n    <div class="col-sm-offset-2 col-sm-10">\n      <button type="button" class="btn btn-default" ng-click="cancel()">\n        Cancel\n      </button>\n      <button type="submit" class="btn btn-primary" ng-click="createEndpoint(endpointName)"\n              ng-disabled="!endpointName">\n        Add\n      </button>\n    </div>\n  </div>\n</form>\n'),e.put("plugins/camel/html/createEndpointWizard.html",'<div ng-controller="Camel.EndpointController">\n  <form name="endpointForm" class="form-horizontal">\n    <div class="form-group">\n      <label class="col-sm-2 control-label" for="componentName">Component</label>\n      <div class="col-sm-5">\n        <select id="componentName" class="form-control" ng-model="selectedComponentName"\n                ng-options="componentName for componentName in componentNames"></select>\n      </div>\n    </div>\n    <div ng-show="selectedComponentName">\n      <div class="form-group" ng-class="{\'has-error\': endpointForm.$invalid}">\n        <label class="col-sm-2 control-label" for="endpointPath">Endpoint</label>\n        <div class="col-sm-10">\n          <input id="endpointPath" class="form-control" type="text" ng-model="endpointPath" placeholder="name"\n                  uib-typeahead="title for title in endpointCompletions($viewValue) | filter:$viewValue"\n                  min-length="1" ng-pattern="/^[\\w-]*$/">\n          <span class="help-block">\n            <span ng-show="endpointForm.$valid">Only alphanumeric characters, underscore, and hyphen</span>\n            <span ng-show="endpointForm.$invalid">Invalid character</span>\n          </span>\n        </div>\n      </div>\n      <div simple-form name="formEditor" entity=\'endpointParameters\' data=\'endpointSchema\' schema="schema"></div>\n      <div class="form-group">\n        <div class="col-sm-offset-2 col-sm-10">\n          <button type="button" class="btn btn-default" ng-click="cancel()">\n            Cancel\n          </button>\n          <button type="submit" class="btn btn-primary" ng-click="createEndpointFromData()"\n                  ng-disabled="!endpointPath || !selectedComponentName">\n            Add\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n'),e.put("plugins/camel/html/debug.html",'<div class="camel-debug-main" ng-controller="Camel.DebugRouteController">\n\n  <div class="row camel-debug-header">\n    <div class="col-sm-6">\n      <h2>Debug</h2>\n    </div>\n    <div class="col-sm-6">\n      <button type="button" class="btn btn-primary pull-right" ng-if="debugging" ng-click="stopDebugging()">\n        Stop debugging\n      </button>\n    </div>\n  </div>\n\n  <div ng-if="!debugging">\n    <p>Debugging allows you to step through camel routes to diagnose issues.</p>\n    <button type="button" class="btn btn-primary" ng-click="startDebugging()"\n      hawtio-show object-name="{{camelDebugMBean}}" method-name="enableDebugger" mode="remove">\n      Start debugging\n    </button>\n    <div class="alert alert-info"\n      hawtio-show object-name="{{camelDebugMBean}}" method-name="enableDebugger" mode="inverse">\n      <span class="pficon pficon-info"></span>\n      Debugging is not allowed for this user.\n    </div>\n  </div>\n\n  <div class="toolbar-pf camel-debug-toolbar" ng-if="debugging">\n    <form class="toolbar-pf-actions">\n      <div class="form-group">\n        <div ng-switch="hasBreakpoint">\n          <button type="button" ng-switch-when="true" class="btn btn-default" ng-disabled="!selectedDiagramNodeId"\n                  ng-click="removeBreakpoint()" title="Remove the breakpoint on the selected node">\n            Remove breakpoint\n          </button>\n          <button type="button" ng-switch-default="false" class="btn btn-default" ng-disabled="shouldDisableAddBreakpoint()"\n                  ng-click="addBreakpoint()" title="Add a breakpoint on the selected node">\n            Add breakpoint\n          </button>\n          <button type="button" ng-switch-default="false" class="btn btn-default" ng-disabled="shouldDisableAddBreakpoint()"\n            ng-click="addConditionalBreakpoint()" title="Add a conditional breakpoint on the selected node">\n            Add conditional breakpoint\n          </button>\n        </div>\n      </div>\n      <div class="form-group camel-debug-icon-buttons">\n        <button type="button" class="btn btn-default" ng-click="step()" ng-disabled="!stopped"\n                title="Step into the next node">\n          <i class="fa fa-arrow-down" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="btn btn-default" ng-click="resume()" ng-disabled="!stopped"\n                title="Resume running">\n          <i class="fa fa-play" aria-hidden="true"></i>\n        </button>\n        <button type="button" class="btn btn-default" ng-click="suspend()" ng-disabled="stopped"\n                title="Suspend all threads in this route">\n          <i class="fa fa-pause" aria-hidden="true"></i>\n        </button>\n      </div>\n    </form>\n  </div>\n\n  <div class="camel-debug-diagram-wrapper" ng-include src="graphView" ng-if="debugging"></div>\n\n  <div class="camel-debug-bottom-panel" resizable r-directions="[\'top\']" r-flex="true" ng-if="debugging"\n    ng-show="showDebugPanel">\n    <div class="camel-debug-bottom-panel-left">\n      <ul class="nav nav-tabs" ng-init="activeTab = \'headers\'">\n        <li ng-class="{\'active\': activeTab === \'headers\' && stopped}">\n          <a href="" ng-click="activeTab = \'headers\'" ng-class="{\'disabled\': !stopped}">Headers</a>\n        </li>\n        <li ng-class="{\'active\': activeTab === \'body\' && stopped}">\n          <a href="" ng-click="activeTab = \'body\'" ng-class="{\'disabled\': !stopped}">Body</a>\n        </li>\n      </ul>\n      <div class="camel-debug-headers-contents" ng-show="activeTab === \'headers\'">\n        <div ng-repeat="(key, value) in row.headers"><label>{{key}}:</label> {{value}}</div>\n      </div>\n      <div class="camel-debug-body-contents" ng-show="activeTab === \'body\'">\n        <em class="camel-debug-no-body-text" ng-show="row.body === \'[Body is null]\'">No Body</em>\n        <pre ng-show="row.body !== \'[Body is null]\'">{{row.body}}</pre>\n      </div>\n    </div>\n    <div class="camel-debug-bottom-panel-right">\n      <ul class="nav nav-tabs">\n        <li>\n          <a>Breakpoints</a>\n        </li>\n      </ul>\n      <ul class="camel-debug-breakpoints-list list-unstyled">\n        <li ng-class="{\'suspended\': isSuspendedAt(b)}"\n          ng-repeat="b in breakpoints">\n          <span>{{b}}</span>\n          <button type="button" class="close" aria-label="Close" title="Remove breakpoint"\n            ng-click="removeBreakpointById(b)">\n            <span aria-hidden="true">&times;</span>\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n</div>\n'),e.put("plugins/camel/html/deleteContextWarningModal.html",'<div class="modal-header">\n  <button type="button" class="close" aria-label="Close" ng-click="$dismiss()">\n    <span class="pficon pficon-close" aria-hidden="true"></span>\n  </button>\n  <h4 class="modal-title">Are you sure?</h4>\n</div>\n<div class="modal-body">\n  <p>You are about to delete this Camel Context.</p>\n  <p>This operation cannot be undone so please be careful.</p>\n</div>\n<div class="modal-footer">\n  <button type="button" class="btn btn-default" ng-click="$dismiss()">Cancel</button>\n  <button type="button" class="btn btn-danger" ng-click="$close()">Delete</button>\n</div>\n'),e.put("plugins/camel/html/deleteRouteWarningModal.html",'<div class="modal-header">\n  <button type="button" class="close" aria-label="Close" ng-click="$dismiss()">\n    <span class="pficon pficon-close" aria-hidden="true"></span>\n  </button>\n  <h4 class="modal-title">Are you sure?</h4>\n</div>\n<div class="modal-body">\n  <p>You are about to delete this Camel route.</p>\n  <p>This operation cannot be undone so please be careful.</p>\n</div>\n<div class="modal-footer">\n  <button type="button" class="btn btn-default" ng-click="$dismiss()">Cancel</button>\n  <button type="button" class="btn btn-danger" ng-click="$close()">Delete</button>\n</div>\n'),e.put("plugins/camel/html/nodePropertiesEdit.html",'<div class="row-fluid">\n\n  \x3c!-- the label and input fields needs to be wider --\x3e\n  <style>\n    input, textarea, .uneditable-input {\n      width: 600px;\n    }\n    input, textarea, .editable-input {\n      width: 600px;\n    }\n\n    .form-horizontal .control-label {\n      width: 180px;\n    }\n\n    .form-horizontal .controls {\n      margin-left: 200px;\n    }\n  </style>\n\n  <h3>\n    <img src="{{icon}}" width="48" height="48" ng-show="icon"/> {{model.title}}\n    <span style="margin-left: 10px" ng-repeat="label in labels track by $index" class="pod-label badge" title="{{label}}">{{label}}</span>\n  </h3>\n\n  <div simple-form name="formViewer" mode=\'edit\' entity=\'nodeData\' data=\'model\' schema="schema"\n       showhelp="!hideHelp"></div>\n</div>\n'),e.put("plugins/camel/html/nodePropertiesView.html",'<header class="camel-properties-header">\n  <h2>Properties</h2>\n  <h3>\n    <img ng-src="{{icon}}" width="24" height="24" ng-show="icon"/>\n    <span>{{title}}</span>\n  </h3>\n  <span class="label label-default" ng-repeat="label in labels track by $index">{{label}}<span>\n</header>\n<p>{{description}}</p>\n<property-list title="Defined Properties" properties="definedProperties"></property-list>\n<property-list title="Default Properties" properties="defaultProperties"></property-list>\n<property-list title="Undefined Properties" properties="undefinedProperties"></property-list>\n<div class="camel-properties-empty-space-for-tooltip"></div>'),e.put("plugins/camel/html/preferences.html",'<form class="form-horizontal camel-preferences-form" ng-controller="Camel.PreferencesController">\n\n  <div class="form-group">\n    <label class="col-md-4 control-label" for="camelHideOptionDocumentation">\n      Hide option documentation\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="Whether to hide documentation in the properties view and Camel route editor"></span>\n    </label>\n    <div class="col-md-4">\n      <input type="checkbox" id="camelHideOptionDocumentation" ng-model="camelHideOptionDocumentation">\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="col-md-4 control-label" for="camelHideOptionDefaultValue">\n      Hide default option values\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="Whether to hide options that are using a default value in the properties view"></span>\n    </label>\n    <div class="col-md-4">\n      <input type="checkbox" id="camelHideOptionDefaultValue" ng-model="camelHideOptionDefaultValue">\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="col-md-4 control-label" for="camelHideOptionUnusedValue">\n      Hide unused option values\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="Whether to hide unused/empty options in the properties view"></span>\n    </label>\n    <div class="col-md-4">\n      <input type="checkbox" id="camelHideOptionUnusedValue" ng-model="camelHideOptionUnusedValue">\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="col-md-4 control-label" for="camelTraceOrDebugIncludeStreams">\n      Include trace / debug streams\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="Whether to include stream based message body when using the tracer and debugger"></span>\n    </label>\n    <div class="col-md-4">\n      <input type="checkbox" id="camelTraceOrDebugIncludeStreams" ng-model="camelTraceOrDebugIncludeStreams">\n    </div>\n  </div>\n\n  <div class="form-group" ng-class="{\'has-error\': camelMaximumTraceOrDebugBodyLength === null || camelMaximumTraceOrDebugBodyLength === undefined}">\n    <label class="col-md-4 control-label" for="camelMaximumTraceOrDebugBodyLength">\n      Maximum trace / debug body length\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="The maximum length of the body before its clipped when using the tracer and debugger"></span>\n    </label>\n    <div class="col-md-4">\n      <input id="camelMaximumTraceOrDebugBodyLength" type="number" class="form-control" ng-model="camelMaximumTraceOrDebugBodyLength" min="0"/>\n      <span class="help-block" ng-show="camelMaximumTraceOrDebugBodyLength === null || camelMaximumTraceOrDebugBodyLength === undefined">Invalid value</span>\n    </div>\n  </div>\n\n  <div class="form-group" ng-class="{\'has-error\': camelMaximumLabelWidth === null || camelMaximumLabelWidth === undefined}">\n    <label class="col-md-4 control-label" for="camelMaximumLabelWidth">\n      Maximum label width\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="The maximum length of a label in Camel diagrams before it is clipped"></span>\n    </label>\n    <div class="col-md-4">\n      <input id="camelMaximumLabelWidth" type="number" class="form-control" ng-model="camelMaximumLabelWidth" min="0"/>\n      <span class="help-block" ng-show="camelMaximumLabelWidth === null || camelMaximumLabelWidth === undefined">Invalid value</span>\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="col-md-4 control-label" for="camelIgnoreIdForLabel">\n      Ignore ID for label\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="If enabled then we will ignore the ID value when viewing a pattern in a Camel diagram; otherwise we will use the ID value as the label (the tooltip will show the actual detail"></span>\n    </label>\n    <div class="col-md-4">\n      <input type="checkbox" id="camelIgnoreIdForLabel" ng-model="camelIgnoreIdForLabel">\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="col-md-4 control-label" for="camelShowInflightCounter">\n      Show inflight counter\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="Whether to show inflight counter in route diagram"></span>\n    </label>\n    <div class="col-md-4">\n      <input type="checkbox" id="camelShowInflightCounter" ng-model="camelShowInflightCounter">\n    </div>\n  </div>\n\n  <div class="form-group" ng-class="{\'has-error\': camelRouteMetricMaxSeconds === null || camelRouteMetricMaxSeconds === undefined}">\n    <label class="col-md-4 control-label" for="camelRouteMetricMaxSeconds">\n      Route metric maximum seconds\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="The maximum value in seconds used by the route metrics duration and histogram charts"></span>\n    </label>\n    <div class="col-md-4">\n      <input id="camelRouteMetricMaxSeconds" type="number" class="form-control" ng-model="camelRouteMetricMaxSeconds" min="0" max="100"/>\n      <span class="help-block" ng-show="camelRouteMetricMaxSeconds === null || camelRouteMetricMaxSeconds === undefined">Invalid value</span>\n    </div>\n  </div>\n\n</form>\n'),e.put("plugins/camel/html/propertiesComponent.html",'<div class="camel-properties" ng-controller="Camel.PropertiesComponentController">\n  <div ng-include="viewTemplate"></div>\n</div>\n'),e.put("plugins/camel/html/propertiesDataFormat.html",'<div class="camel-properties" ng-controller="Camel.PropertiesDataFormatController">\n  <div ng-include="viewTemplate"></div>\n</div>\n'),e.put("plugins/camel/html/propertiesEndpoint.html",'<div class="camel-properties" ng-controller="Camel.PropertiesEndpointController">\n  <div ng-include="viewTemplate"></div>\n</div>\n'),e.put("plugins/camel/html/propertiesRoute.html",'<div class="camel-properties" ng-controller="Camel.PropertiesRouteController">\n  <div ng-include="viewTemplate"></div>\n</div>\n'),e.put("plugins/camel/html/routeDiagram.html",'<div class="camel-route-diagram-canvas" ng-controller="Camel.RouteController">\n  <svg class="camel-diagram" width="100%" height="100%" preserveAspectRatio="xMidYMid">\n    <defs>\n      <marker id="arrowhead"\n              viewBox="0 0 10 10"\n              refX="9"\n              refY="5"\n              markerUnits="strokeWidth"\n              markerWidth="5.3"\n              markerHeight="4"\n              orient="auto">\n        <path d="M 0 0 L 10 5 L 0 10 z"></path>\n      </marker>\n\n      <filter id="drop-shadow" width="300%" height="300%">\n        <feGaussianBlur in="SourceAlpha" result="blur-out" stdDeviation="19"/>\n        <feOffset in="blur-out" result="the-shadow" dx="2" dy="2"/>\n        <feComponentTransfer xmlns="http://www.w3.org/2000/svg">\n          <feFuncA type="linear" slope="0.2"/>\n        </feComponentTransfer>\n        <feMerge xmlns="http://www.w3.org/2000/svg">\n          <feMergeNode/>\n          <feMergeNode in="SourceGraphic"/>\n        </feMerge>\n      </filter>\n      <linearGradient id="rect-gradient" x1="0%" y1="0%" x2="0%" y2="100%">\n        <stop offset="0%" style="stop-color:rgb(254,254,255);stop-opacity:1"/>\n        <stop offset="100%" style="stop-color:rgb(247,247,255);stop-opacity:1"/>\n      </linearGradient>\n      <linearGradient id="rect-select-gradient" x1="0%" y1="0%" x2="0%" y2="100%">\n        <stop offset="0%" style="stop-color: #ffffa0; stop-opacity: 0.7"/>\n        <stop offset="100%" style="stop-color: #f0f0a0; stop-opacity: 0.7"/>\n      </linearGradient>\n    </defs>\n  </svg>\n</div>\n'),e.put("plugins/camel/html/routeMetrics.html",'<div ng-controller="Camel.RouteMetricsController">\n\n  <h2>Route Metrics</h2>\n \n  <p ng-show="!initDone">Loading...</p>\n\n  <div ng-show="initDone">\n    <p ng-show="metricDivs.length === 0">\n      This Camel context has no route metrics data.\n    </p>\n    <div ng-show="metricDivs.length > 0">\n      <div class="row toolbar-pf">\n        <div class="col-md-12">\n          <form class="toolbar-pf-actions search-pf">\n            <div>\n              <div class="form-group has-clear">\n                <div class="search-pf-input-group">\n                  <label for="search1" class="sr-only">Filter</label>\n                  <input id="search1" type="search" class="form-control" ng-model="filterText"\n                        placeholder="Filter by route ID...">\n                  <button type="button" class="clear" aria-hidden="true" ng-click="filterText = \'\'">\n                    <span class="pficon pficon-close"></span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div id="{{metric.id}}" ng-repeat="metric in metricDivs track by metric.id" ng-show="metricVisible(metric)"></div>\n    </div>\n  </div>\n\n</div>\n'),e.put("plugins/camel/html/sendMessage.html",'<div ng-controller="Camel.SendMessageController">\n\n  <h2>Send Message</h2>\n\n  <div class="alert alert-warning" ng-show="noCredentials">\n    <span class="pficon pficon-warning-triangle-o"></span>\n    <strong>No credentials set for endpoint!</strong>\n    Please set your username and password in the\n    <a href="#" class="alert-link" ng-click="openPrefs()">Preferences</a> page.\n  </div>\n\n  <h3>Headers</h3>\n\n  <div class="row camel-message-headers" ng-if="headers.length > 0">\n    <div class="col-sm-5">\n      <form>\n        <div class="form-group">\n          <label>Name</label>\n          <input type="text" class="form-control" ng-model="header.name" ng-repeat="header in headers"\n                 uib-typeahead="completion for completion in defaultHeaderNames() | filter:$viewValue"\n                 pf-focused="$last">\n        </div>\n      </form>\n    </div>\n    <div class="col-sm-5">\n      <form>\n        <div class="form-group">\n          <label>Value</label>\n          <input type="text" class="form-control" ng-model="header.value" ng-repeat="header in headers">\n        </div>\n      </form>\n    </div>\n    <div class="col-sm-2">\n      <form>\n        <div class="form-group">\n          <label>&nbsp;</label>\n          <button type="button" class="btn btn-default" title="Delete" ng-click="removeHeader(header)"\n                  ng-repeat="header in headers">\n            <span class="pficon pficon-delete"></span>\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div>\n    <a href="" ng-click="addHeader()">Add header</a>\n  </div>\n\n  <h3>Body</h3>\n\n  <form>\n    <div class="form-group">\n      <div hawtio-editor="message" mode="codeMirrorOptions.mode.name"></div>\n    </div>\n    <div class="form-group">\n      <select class="form-control camel-send-message-format" ng-model="codeMirrorOptions.mode.name">\n        <option value="javascript">JSON</option>\n        <option value="xml">XML</option>\n      </select>\n      <button class="btn btn-default" ng-click="formatMessage()"\n              title="Automatically pretty prints the message so its easier to read">Format\n      </button>\n    </div>\n  </form>\n\n  <p>\n    <button type="button" class="btn btn-primary camel-send-message-button" ng-click="sendMessage()">Send message</button>\n  </p>\n\n</div>\n'),e.put("plugins/camel/html/source.html",'<div class="table-view" ng-controller="Camel.SourceController">\n  \n  <h2>Source</h2>\n  \n  <form>\n    <div class="form-group">\n      <div hawtio-editor="source" mode="\'xml\'" read-only="!showUpdateButton"></div>\n    </div>\n  </form>\n  \n  <button class="btn btn-primary" hawtio-show object-name="{{camelContextMBean}}"\n          method-name="addOrUpdateRoutesFromXml" ng-click="saveRouteXml()" ng-if="showUpdateButton">\n    Update\n  </button>\n\n</div>\n'),e.put("plugins/camel/html/traceRoute.html",'<div class="camel-trace-main" ng-controller="Camel.TraceRouteController">\n  \n  <div class="row camel-trace-header">\n    <div class="col-sm-6">\n      <h2>Trace</h2>\n    </div>\n    <div class="col-sm-6">\n      <button type="button" class="btn btn-primary pull-right" ng-if="tracing" ng-click="stopTracing()">\n        Stop tracing\n      </button>\n    </div>\n  </div>\n  \n  <div ng-if="!tracing">\n    <p>Tracing allows you to send messages to a route and then step through and see the messages flow through a route\n      to aid debugging and to help diagnose issues.\n    </p>\n    <p>Once you start tracing, you can send messages to the input endpoints, then come back to this page and see the\n      flow of messages through your route.\n    </p>\n    <p>As you click on the message table, you can see which node in the flow it came through; moving the selection up\n      and down in the message table lets you see the flow of the message through the diagram.\n    </p>\n    <button type="button" class="btn btn-primary" ng-click="startTracing()"\n      hawtio-show object-name="{{camelTraceMBean}}" method-name="setEnabled" mode="remove">\n      Start tracing\n    </button>\n    <div class="alert alert-info"\n      hawtio-show object-name="{{camelTraceMBean}}" method-name="setEnabled" mode="inverse">\n      <span class="pficon pficon-info"></span>\n      Tracing is not allowed for this user.\n    </div>\n  </div>\n  \n  <div class="camel-trace-diagram-wrapper" ng-include src="graphView" ng-if="tracing"></div>\n\n  <div class="camel-trace-bottom-panel" resizable r-directions="[\'top\']" r-flex="true" ng-if="tracing">\n    <table class="table table-striped table-bordered camel-trace-messages-table-header" ng-show="!message">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>To Node</th>\n        </tr>\n      </thead>\n    </table>\n    <div class="camel-trace-messages-table-body-container" ng-show="!message">\n      <table class="table table-striped table-bordered">\n        <tbody>\n          <tr ng-repeat="message in messages">\n            <td>\n              <a href="" title="View message" ng-click="openMessageDialog(message, $index)">\n                {{message.headers.breadcrumbId}}\n              </a>\n            </td>\n            <td>{{message.toNode}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class="camel-trace-message-details" ng-if="message">\n      <button type="button" class="close" aria-hidden="true" ng-click="closeMessageDetails()">\n        <span class="pficon pficon-close"></span>\n      </button>\n      <ul class="pagination">\n        <li ng-class="{disabled: messageIndex === 0}">\n          <a href="#" title="First" ng-disabled="messageIndex === 0" ng-click="changeMessage(0)">\n            <span class="i fa fa-angle-double-left"></span>\n          </a>\n        </li>\n        <li ng-class="{disabled: messageIndex === 0}">\n          <a href="#" title="Previous" ng-disabled="messageIndex === 0" ng-click="changeMessage(messageIndex - 1)">\n            <span class="i fa fa-angle-left"></span>\n          </a>\n        </li>\n        <li ng-class="{disabled: messageIndex === messages.length - 1}">\n          <a href="#" title="Next" ng-disabled="messageIndex === messages.length - 1" ng-click="changeMessage(messageIndex + 1)">\n            <span class="i fa fa-angle-right"></span>\n          </a>\n        </li>\n        <li ng-class="{disabled: messageIndex === messages.length - 1}">\n          <a href="#" title="Last" ng-disabled="messageIndex === messages.length - 1" ng-click="changeMessage(messages.length - 1)">\n            <span class="i fa fa-angle-double-right"></span>\n          </a>\n        </li>\n      </ul>\n      <ul class="nav nav-tabs" ng-init="activeTab = \'headers\'">\n        <li ng-class="{\'active\': activeTab === \'headers\'}">\n          <a href="" ng-click="activeTab = \'headers\'">Headers</a>\n        </li>\n        <li ng-class="{\'active\': activeTab === \'body\'}">\n          <a href="" ng-click="activeTab = \'body\'">Body</a>\n        </li>\n      </ul>\n      <div class="camel-trace-headers-contents" ng-show="activeTab === \'headers\'">\n        <div ng-repeat="(key, value) in message.headers"><label>{{key}}:</label> {{value}}</div>\n      </div>\n      <div class="camel-trace-body-contents" ng-show="activeTab === \'body\'">\n        <em class="camel-trace-no-body-text" ng-show="message.body === \'[Body is null]\'">No Body</em>\n        <pre ng-show="message.body !== \'[Body is null]\'">{{message.body}}</pre>\n      </div>\n    </div>\n  </div>\n\n</div>\n'),e.put("plugins/diagnostics/html/flags.html",'<div ng-controller="DiagnosticsFlagsController">\n  <h1>Hotspot Diagnostics</h1>\n  <table class="table table-striped table-bordered">\n    <thead>\n      <tr>\n        <th>VM Flag</th>\n        <th>Origin</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="flag in flags track by flag.name">\n        <td>{{flag.name}}</td>\n        <td>{{flag.origin}}</td>\n        <td>\n          <div ng-switch on="flag.dataType">\n            <span ng-switch-when="readonly">{{flag.value}}</span>\n            <input ng-switch-when="boolean" type="checkbox" ng-model="flag.value"></input>\n            <input ng-switch-when="string" type="text" ng-model="flag.value"></input>\n            <input ng-switch-when="number" type="number" ng-model="flag.value"></input>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>  \n</div>'),e.put("plugins/diagnostics/html/heap.html",'<div ng-controller="DiagnosticsHeapController" class="table-view">\n  <h1>Class Histogram</h1>\n  <p>\n    <strong>Please note:</strong> Loading class histogram may be very expensive, depending on the size and\n    layout of the heap. Alternatively, use the <samp>jcmd</samp> utility:<br>\n    <samp>jcmd &lt;process id/main class&gt; GC.class_histogram<samp>\n  </p>\n  <p>\n    <button type="button" class="btn btn-primary" ng-click="loadClassStats()" ng-disabled="loading">\n      Load class histogram\n    </button>\n  </p>\n  <p ng-show="loading">\n    Loading...\n  </p>\n  <div ng-show="!loading && items.length > 0">\n    <pf-toolbar config="toolbarConfig">\n      <span ng-show="lastLoaded">\n        Last loaded: {{lastLoaded | date: \'yyyy-MM-dd hh:mm:ss\'}}\n      </span>\n    </pf-toolbar>\n    <pf-table-view class="diagnostics-class-histogram-table" config="tableConfig" dt-options="tableDtOptions"\n                   page-config="pageConfig" columns="tableColumns" items="items"></pf-table-view>\n  </div>\n</div>\n'),e.put("plugins/diagnostics/html/jfr.html",'<div ng-controller="DiagnosticsJfrController">\n  <h1>Flight Recorder</h1>\n  <div class="row-fluid jfr-column-container"\n       hawtio-auto-columns=".jfr-column">\n\n    <div class="jfr-column">\n      <div class="alert alert-info alert-dismissable" ng-show="isMessageVisible(\'jfrShowJcmd\')">\n        <button type="button"\n                class="close"\n                data-dismiss="alert"\n                aria-hidden="true" ng-click="closeMessageForGood(\'jfrShowJcmd\')"><span class="pficon pficon-close"></span></button>\n        <span class="pficon pficon-info"></span>\n        <strong>Info:</strong>Equivalent command of last action: <code>{{jcmd}}</code>\n      </div>\n      <div class="casettePlayer">\n        <div class="casette">\n          <svg role="img"\n               aria-label="recording indicator"\n               xmlns="http://www.w3.org/2000/svg"\n               version="1.1"\n               viewBox="0 0 24 24"\n               width="25"\n               height="25"\n               id="recordingIndicator">\n            <circle cx="12"\n                    cy="12"\n                    r="11"\n                    fill="red"\n                    ng-show="isRunning">\n              <animate attributeType="XML"\n                       attributeName="fill"\n                       from="#ff0000"\n                       to="#000000"\n                       dur="2s"\n                       repeatCount="indefinite"></animate>\n            </circle>\n          </svg>\n          <div class="cassetteLabelCutCorners"></div>\n          <div class="casetteLabel">\n            {{jfrStatus}}\n            <div class="notLabel">\n              <div class="wrapCog">\n                <svg role="img"\n                     aria-label="cassette wheel"\n                     xmlns="http://www.w3.org/2000/svg"\n                     version="1.1"\n                     viewBox="0 0 24 24"\n                     width="50"\n                     height="50"\n                     ng-class="{\'spinning\': isRecording}"\n                     id="leftcog">\n                  <circle cx="12"\n                          cy="12"\n                          r="11"\n                          fill="white"></circle>\n                  <circle cx="12"\n                          cy="12"\n                          r="8"\n                          fill="black"></circle>\n                  <rect x="2"\n                        y="10"\n                        width="20"\n                        height="4"\n                        fill="black"\n                        stroke="none"></rect>\n                  <rect x="2"\n                        y="10"\n                        width="20"\n                        height="4"\n                        fill="black"\n                        stroke="none"\n                        transform="rotate(45,12,12)"></rect>\n                  <rect x="2"\n                        y="10"\n                        width="20"\n                        height="4"\n                        fill="black"\n                        stroke="none"\n                        transform="rotate(90,12,12)"></rect>\n                  <rect x="2"\n                        y="10"\n                        width="20"\n                        height="4"\n                        fill="black"\n                        stroke="none"\n                        transform="rotate(135,12,12)"></rect>\n                </svg>\n              </div>\n              <div class="wrapCog"\n                   id="rightCogWrapper">\n                <svg role="img"\n                     aria-label="cassette wheel"\n                     xmlns="http://www.w3.org/2000/svg"\n                     version="1.1"\n                     viewBox="0 0 24 24"\n                     width="50"\n                     height="50"\n                     ng-class="{\'spinning\': isRecording}">\n                  <circle cx="12"\n                          cy="12"\n                          r="11"\n                          fill="white"></circle>\n                  <circle cx="12"\n                          cy="12"\n                          r="8"\n                          fill="black"></circle>\n                  <rect x="2"\n                        y="10"\n                        width="20"\n                        height="4"\n                        fill="black"\n                        stroke="none"></rect>\n                  <rect x="2"\n                        y="10"\n                        width="20"\n                        height="4"\n                        fill="black"\n                        stroke="none"\n                        transform="rotate(45,12,12)"></rect>\n                  <rect x="2"\n                        y="10"\n                        width="20"\n                        height="4"\n                        fill="black"\n                        stroke="none"\n                        transform="rotate(90,12,12)"></rect>\n                  <rect x="2"\n                        y="10"\n                        width="20"\n                        height="4"\n                        fill="black"\n                        stroke="none"\n                        transform="rotate(135,12,12)"></rect>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id="casetteButtons">\n\n          <button class="recorderButton btn"\n                  tooltip="Unlock commercial features to be able to record"\n                  ng-click="unlock()"\n                  ng-disabled="jfrEnabled"\n                  ng-class="jfrEnabled ? \'disabledJfrButton\' : \'raisedButton\'">\n            <i class="fa-5x"\n               ng-class="jfrEnabled ? \'pficon-unlocked\' : \'pficon-locked\'"></i>\n          </button>\n          <button class="recorderButton btn"\n                  ng-enabled="!isRunning"\n                  ng-class="!jfrEnabled || isRunning ? \'disabledJfrButton\' : \'raisedButton\'"\n                  tooltip="Start recording"\n                  ng-click="startRecording()"\n                  ng-disabled="isRunning">\n            <div class="recordingSymbol"\n                 id="rec"></div>\n          </button>\n          <button class="recorderButton btn"\n                  title="Dump recording to disk"\n                  ng-class="jfrEnabled && isRecording ? \'raisedButton\' : \'disabledJfrButton\'"\n                  ng-disabled="!isRecording"\n                  tooltip="Dump {{jfrSettings.name}} to disk"\n                  ng-click="dumpRecording()">\n            <i class="pficon-save fa-5x"></i>\n          </button>\n          <button class="recorderButton btn"\n                  ng-disabled="!isRecording"\n                  ng-class="jfrEnabled && isRecording ? \'raisedButton\' : \'disabledJfrButton\'"\n                  tooltip="Stop {{jfrSettings.name}}"\n                  ng-click="stopRecording()">\n            <div class="recordingSymbol"\n                 id="stop"></div>\n          </button>\n          <button class="recorderButton btn"\n                  ng-class="jfrEnabled && !settingsVisible ? \'raisedButton\' : \'disabledJfrButton\'"\n                  tooltip="Show/hide settings"\n                  ng-click="toggleSettingsVisible()">\n            <i class="pficon-settings fa-5x"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class="jfr-column"\n         ng-show="settingsVisible">\n\n\n      <dl>\n        <dt>Recorder Settings</dt>\n        <dd>\n          <div simple-form\n               name="jfrForm"\n               data="formConfig"\n               entity="jfrSettings">\n              </div>\n\n        </dd>\n      </dl>\n\n    </div>\n    <table ng-show="!!recordings.length"\n           class="table table-condensed table-striped">\n      <tr>\n        <th>Rec#</th>\n        <th>Size</th>\n        <th>Time</th>\n        <th>File/Download</th>\n      </tr>\n      <tr ng-repeat="aRecording in recordings">\n        <td>{{aRecording.number}}</td>\n        <td>{{aRecording.size}}</td>\n        <td>{{aRecording.time | date: \'yyyy-MM-dd HH:mm:ss\' }}</td>\n        <td ng-if="!!aRecording.file"><a href="file://{{aRecording.file}}">{{aRecording.file}}</a></td>\n        <td ng-if="aRecording.canDownload">\n          <a href="{{aRecording.downloadLink}}" class="pficon-save fa-1x" target="_blank" download="recording{{aRecording.number}}.jfr">\n          </a>\n        </td>\n      </tr>\n    </table>\n\n  </div>\n\n</div>\n'),e.put("plugins/jvm/html/connect-edit.html",'<div class="modal-header">\n  <button type="button" class="close" aria-label="Close" ng-click="$ctrl.cancel()">\n    <span class="pficon pficon-close" aria-hidden="true"></span>\n  </button>\n  <h4 class="modal-title" ng-show="$ctrl.operation === \'add\'">Add Connection</h4>\n  <h4 class="modal-title" ng-show="$ctrl.operation === \'edit\'">Edit Connection</h4>\n</div>\n<form name="connectForm" class="form-horizontal jvm-connection-form" ng-submit="$ctrl.saveConnection($ctrl.connection)">\n  <div class="modal-body">\n    <div class="form-group" ng-class="{\'has-error\': $ctrl.errors.name}">\n      <label class="col-sm-3 control-label" for="connection-name">Name</label>\n      <div class="col-sm-8">\n        <input type="text" id="connection-name" class="form-control" name="name" ng-model="$ctrl.connection.name" pf-focused="!$ctrl.connection.name">\n        <span class="help-block" ng-show="$ctrl.errors.name">{{$ctrl.errors.name}}</span>\n      </div>\n    </div>\n    <div class="form-group">\n      <label class="col-sm-3 control-label" for="connection-scheme">Scheme</label>\n      <div class="col-sm-8">\n        <select id="connection-scheme" class="form-control" name="scheme" ng-model="$ctrl.connection.scheme">\n          <option>http</option>\n          <option>https</option>\n        </select>\n      </div>\n    </div>\n    <div class="form-group" ng-class="{\'has-error\': $ctrl.errors.host}">\n      <label class="col-sm-3 control-label" for="connection-host">Host</label>\n      <div class="col-sm-8">\n        <input type="text" id="connection-host" class="form-control" name="host" ng-model="$ctrl.connection.host" ng-change="">\n        <span class="help-block" ng-show="$ctrl.errors.host">{{$ctrl.errors.host}}</span>\n      </div>\n    </div>\n    <div class="form-group" ng-class="{\'has-error\': $ctrl.errors.port}">\n      <label class="col-sm-3 control-label" for="connection-port">Port</label>\n      <div class="col-sm-8">\n        <input type="number" id="connection-port" class="form-control" name="port" ng-model="$ctrl.connection.port" ng-change="resetTestConnection()">\n        <span class="help-block" ng-show="$ctrl.errors.port">{{$ctrl.errors.port}}</span>\n      </div>\n    </div>\n    <div class="form-group">\n      <label class="col-sm-3 control-label" for="connection-path">Path</label>\n      <div class="col-sm-8">\n        <input type="text" id="connection-path" class="form-control" name="path" ng-model="$ctrl.connection.path" ng-change="resetTestConnection()">\n      </div>\n    </div>\n    <div class="form-group">\n      <div class="col-sm-offset-3 col-sm-8">\n        <button type="button" class="btn btn-default" ng-click="$ctrl.testConnection($ctrl.connection)">\n          Test Connection\n        </button>\n        <span class="jvm-connection-test-msg" ng-show="$ctrl.connectionTestResult.message">\n          <span class="pficon" ng-class="{\'pficon-ok\': $ctrl.connectionTestResult.ok, \'pficon-warning-triangle-o\': !$ctrl.connectionTestResult.ok}"></span>\n          {{$ctrl.connectionTestResult.message}}\n        </span>\n      </div>\n    </div>\n  </div>\n  <div class="modal-footer">\n    <button type="button" class="btn btn-default" ng-click="$ctrl.cancel()">Cancel</button>\n    <button type="submit" class="btn btn-primary" ng-show="$ctrl.operation === \'add\'">Add</button>\n    <button type="submit" class="btn btn-primary" ng-show="$ctrl.operation === \'edit\'">Save</button>\n  </div>\n</form>\n'),e.put("plugins/jvm/html/connect.html",'<h1>\n  Remote\n  <button type="button" class="btn btn-link jvm-title-popover"\n          uib-popover-template="\'jvm-connect-instructions.html\'" popover-placement="bottom-left"\n          popover-title="Instructions" popover-trigger="\'outsideClick\'">\n    <span class="pficon pficon-help"></span>\n  </button>\n</h1>\n<pf-toolbar class="jvm-connect-toolbar" config="$ctrl.toolbarConfig"></pf-toolbar>\n<pf-list-view class="jvm-connection-list" items="$ctrl.connections" config="$ctrl.listConfig"\n              action-buttons="$ctrl.listActionButtons" menu-actions="$ctrl.listActionDropDown">\n  <div class="list-view-pf-left">\n    <span class="pficon list-view-pf-icon-sm"\n          ng-class="{\'pficon-plugged\': item.reachable,\n                      \'list-view-pf-icon-success\': item.reachable,\n                      \'pficon-unplugged\': !item.reachable,\n                      \'list-view-pf-icon-danger\': !item.reachable}"\n          title="Endpoint {{item.reachable ? \'reachable\' : \'unreachable\'}}"></span>\n  </div>\n  <div class="list-view-pf-body">\n    <div class="list-view-pf-description">\n      <div class="list-group-item-heading">\n        {{item.name}}\n      </div>\n      <div class="list-group-item-text">\n        {{item | connectionUrl}}\n      </div>\n    </div>\n  </div>\n</pf-list-view>\n\n<script type="text/ng-template" id="jvm-connect-instructions.html">\n  <div>\n    <p>\n      This page allows you to connect to remote processes which <strong>already have a\n      <a href="https://jolokia.org/agent.html" target="_blank">Jolokia agent</a> running inside them</strong>.\n      You will need to know the host name, port and path of the Jolokia agent to be able to connect.\n    </p>\n    <p>\n      If the process you wish to connect to does not have a Jolokia agent inside, please refer to the\n      <a href="http://jolokia.org/agent.html" target="_blank">Jolokia documentation</a> for how to add a JVM,\n      servlet or OSGi based agent inside it.\n    </p>\n    <p>\n      If you are using <a href="https://developers.redhat.com/products/fuse/overview/" target="_blank">Red Hat Fuse</a>\n      or <a href="http://activemq.apache.org/" target="_blank">Apache ActiveMQ</a>,\n      then a Jolokia agent is included by default (use context path of Jolokia agent, usually\n      <code>jolokia</code>). Or you can always just deploy hawtio inside the process (which includes the Jolokia agent,\n      use Jolokia servlet mapping inside hawtio context path, usually <code>hawtio/jolokia</code>).\n    </p>\n  </div>\n<\/script>\n'),e.put("plugins/jvm/html/discover.html",'<div ng-controller="JVM.DiscoveryController">\n\n  <h1>Discover</h1>\n\n  <p ng-if="discovering">Please wait, discovering agents...</p>\n  <div ng-if="!discovering">\n    <p ng-show="agents.length === 0">\n      No agents discovered.\n    </p>\n    <div ng-show="agents.length > 0">\n      <div class="row toolbar-pf">\n        <div class="col-sm-12">\n          <form class="toolbar-pf-actions">\n            <div class="form-group">\n              <input type="text" class="form-control" ng-model="filter" placeholder="Filter..." autocomplete="off">\n            </div>\n            <div class="form-group">\n              <button class="btn btn-default" ng-click="fetch()" title="Refresh"><i class="fa fa-refresh"></i> Refresh</button>\n            </div>\n          </form>\n        </div>\n      </div>\n      <ul class="discovery zebra-list">\n        <li ng-repeat="agent in agents track by $index" ng-show="filterMatches(agent)">\n\n          <div class="inline-block">\n            <img ng-src="{{getLogo(agent)}}">\n          </div>\n\n          <div class="inline-block">\n            <p ng-hide="!hasName(agent)">\n            <span class="strong"\n                  ng-show="agent.server_vendor">\n              {{agent.server_vendor}} {{_.startCase(agent.server_product)}} {{agent.server_version}}\n            </span>\n            </p>\n          <span ng-class="getAgentIdClass(agent)">\n            <strong ng-show="hasName(agent)">Agent ID: </strong>{{agent.agent_id}}<br/>\n            <strong ng-show="hasName(agent)">Agent Version: </strong><span ng-hide="hasName(agent)"> Version: </span>{{agent.agent_version}}</span><br/>\n            <strong ng-show="hasName(agent)">Agent Description: </strong><span\n              ng-hide="hasName(agent)"> Description: {{agent.agent_description}}</span><br/>\n                <div ng-hide="!agent.startTime"><strong>JVM Started: </strong>{{agent.startTime | date: \'yyyy-MM-dd HH:mm:ss\'}}</div>\n                <div ng-hide="!agent.command"><strong>Java Command: </strong>{{agent.command}}</div>\n\n            <p ng-hide="!agent.url"><strong>Agent URL: </strong><a ng-href="{{agent.url}}"\n                                                                  target="_blank">{{agent.url}}</a>\n            </p>\n          </div>\n\n          <div class="inline-block lock" ng-show="agent.secured">\n            <i class="fa-4x pficon-locked" title="A valid username and password will be required to connect"></i>\n          </div>\n\n          <div class="inline-block" ng-hide="!agent.url">\n            <div class="connect-button"\n                ng-click="gotoServer($event, agent)"\n                hawtio-template-popover\n                content="authPrompt"\n                trigger="manual"\n                placement="auto"\n                data-title="Please enter your username and password">\n              <i ng-show="agent.url" class="fa-4x pficon-on-running" tooltip="Connect to process"></i>\n            </div>\n          </div>\n\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <script type="text/ng-template" id="authPrompt">\n    <div class="auth-form">\n      <form name="authForm">\n        <input type="text"\n                class="input-sm"\n                placeholder="Username..."\n                ng-model="agent.username"\n                required>\n        <input type="password"\n                class="input-sm"\n                placeholder="Password..."\n                ng-model="agent.password"\n                required>\n        <button ng-disabled="!authForm.$valid"\n                ng-click="connectWithCredentials($event, agent)"\n                class="btn btn-success">\n          <i class="fa fa-share"></i> Connect\n        </button>\n        <button class="btn" ng-click="closePopover($event)"><i class="fa fa-remove"></i></button>\n      </form>\n    </div>\n  <\/script>\n\n</div>\n'),e.put("plugins/jvm/html/jolokia-preferences.html",'<div ng-controller="JVM.JolokiaPreferences">\n  <div class="alert alert-success jvm-jolokia-preferences-alert" ng-if="showAlert">\n    <span class="pficon pficon-ok"></span>\n    Settings applied successfully!\n  </div>\n  <form class="form-horizontal jvm-jolokia-preferences-form">\n    <div class="form-group">\n      <label class="col-md-2 control-label" for="updateRate">\n        Update rate\n        <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="The period between polls to jolokia to fetch JMX data"></span>\n      </label>\n      <div class="col-md-6">\n        <select id="updateRate" class="form-control" ng-model="updateRate">\n          <option value="0">Off</option>\n          <option value="5000">5 Seconds</option>\n          <option value="10000">10 Seconds</option>\n          <option value="30000">30 Seconds</option>\n          <option value="60000">60 seconds</option>\n        </select>\n      </div>\n    </div>\n    <div class="form-group" ng-class="{\'has-error\': maxDepth === null || maxDepth === undefined}">\n      <label class="col-md-2 control-label" for="maxDepth">\n        Max depth\n        <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="The number of levels jolokia will marshal an object to json on the server side before returning"></span>\n      </label>\n      <div class="col-sm-6">\n        <input type="number" id="maxDepth" class="form-control" min="1" ng-model="maxDepth">\n        <span class="help-block" ng-show="maxDepth === null || maxDepth === undefined">Invalid value</span>\n      </div>\n    </div>\n    <div class="form-group" ng-class="{\'has-error\': maxCollectionSize === null || maxCollectionSize === undefined}">\n      <label class="col-md-2 control-label" for="maxCollectionSize">\n        Max collection size\n        <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="The maximum number of elements in an array that jolokia will marshal in a response"></span>\n      </label>\n      <div class="col-sm-6">\n        <input type="number" id="maxCollectionSize" class="form-control" min="1" ng-model="maxCollectionSize">\n        <span class="help-block" ng-show="maxCollectionSize === null || maxCollectionSize === undefined">Invalid value</span>\n      </div>\n    </div>\n    <div class="form-group">\n      <label class="col-md-2">\n      </label>\n      <div class="col-md-6">\n        <button type="button" class="btn btn-primary" ng-click="reboot()">Apply</button>\n        <span class="help-block">Restart hawtio with the new values in effect</span>\n      </div>\n    </div>\n  </form>\n</div>\n'),e.put("plugins/jvm/html/local.html",'<div ng-controller="JVM.JVMsController">\n  <h1>Local</h1>\n  <p ng-if="!initDone">\n    Please wait, discovering local JVM processes...\n  </p>\n  <div ng-if="initDone">\n    <p ng-if=\'status\'>\n      {{status}}\n    </p>\n    <div ng-if=\'data.length > 0\'>\n      <div class="row toolbar-pf">\n        <div class="col-sm-12">\n          <form class="toolbar-pf-actions">\n            <div class="form-group">\n              <input type="text" class="form-control" ng-model="filter" placeholder="Filter..." autocomplete="off">\n            </div>  \n            <div class="form-group">\n              <button class="btn btn-default" ng-click="fetch()" title="Refresh"><i class="fa fa-refresh"></i> Refresh</button>\n            </div>  \n          </form>  \n        </div>  \n      </div>  \n      <table class=\'centered table table-bordered table-condensed table-striped\'>\n        <thead>\n        <tr>\n          <th style="width: 70px">PID</th>\n          <th>Name</th>\n          <th style="width: 300px">Agent URL</th>\n          <th style="width: 50px"></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr ng-repeat="jvm in data track by $index" ng-show="filterMatches(jvm)">\n          <td>{{jvm.id}}</td>\n          <td title="{{jvm.displayName}}">{{jvm.alias}}</td>\n          <td><a href=\'\' title="Connect to this agent"\n                 ng-click="connectTo(jvm.url, jvm.scheme, jvm.hostname, jvm.port, jvm.path)">{{jvm.agentUrl}}</a></td>\n          <td>\n            <a class=\'btn control-button\' href="" title="Stop agent" ng-show="jvm.agentUrl"\n             ng-click="stopAgent(jvm.id)"><i class="pficon-close"></i></a>\n            <a class=\'btn control-button\' href="" title="Start agent" ng-hide="jvm.agentUrl"\n             ng-click="startAgent(jvm.id)"><i class="pficon-running"></i></a>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n'),e.put("plugins/jvm/html/navbarHeaderExtension.html",'<style>\n  .navbar-header-hawtio-jvm {\n    float: left;\n    margin: 0;\n  }\n\n  .navbar-header-hawtio-jvm h4 {\n    color: white;\n    margin: 0px;\n  }\n\n  .navbar-header-hawtio-jvm li {\n    list-style-type: none;\n    display: inline-block;\n    margin-right: 10px;\n    margin-top: 4px;\n  }\n</style>\n<ul class="navbar-header-hawtio-jvm" ng-controller="JVM.HeaderController">\n  <li ng-show="containerName"><h4 ng-bind="containerName"></h4></li>\n  <li ng-show="goBack"><strong><a href="" ng-click="goBack()">Back</a></strong></li>\n</ul>\n'),e.put("plugins/jvm/html/reset.html",'<div ng-controller="JVM.ResetController">\n  <div class="alert alert-success jvm-reset-connections-alert" ng-if="showAlert">\n    <span class="pficon pficon-ok"></span>\n    Connections cleared successfully!\n  </div>\n  <h3>Clear saved connections</h3>\n  <p>\n    Clear all saved connection settings stored in your browser\'s local storage.\n  </p>\n  <p>\n    <button class="btn btn-danger" ng-click="doClearConnectSettings()">Clear saved connections</button>\n  </p>\n</div>'),e.put("plugins/jmx/html/chartEdit.html",'<div class="jmx-charts-edit-view" ng-controller="Jmx.ChartEditController">\n  <h2>Chart</h2>\n  <div ng-show="canEditChart()">\n    <p ng-if="showElements() && showAttributes()">\n      Please select the elements and attributes you want to see in the chart.\n    </p>\n    <p ng-if="!showElements() && showAttributes()">\n      Please select the attributes you want to see in the chart.\n    </p>\n    <p ng-if="!showElements() && !showAttributes()">\n      This chart cannot be edited.\n    </p>\n    <form>\n      <div class="row">\n        <div class="form-group col-md-6" ng-show="showElements()">\n          <label for="mbeans">Elements</label>\n          <select id="mbeans" class="form-control" size="20" multiple ng-model="selectedMBeans"\n                  ng-options="name for (name, value) in mbeans"\n                  ng-change="onSelectedMBeansChange()"></select>\n        </div>\n        <div class="form-group col-md-6" ng-show="showAttributes()">\n          <label for="attributes">Attributes</label>\n          <select id="attributes" class="form-control" size="20" multiple ng-model="selectedAttributes"\n                  ng-options="name | humanize for (name, value) in metrics"\n                  ng-change="onSelectedAttributesChange()"></select>\n        </div>\n      </div>\n      <div class="form-group">\n        <button type="submit" class="btn btn-primary" ng-click="viewChart()"\n                ng-disabled="!selectedAttributes.length && !selectedMBeans.length">\n          View Chart\n        </button>\n      </div>\n    </form>\n  </div>\n  <p ng-show="!canEditChart()">\n    No numeric metrics available. Please select another item to chart on.\n  </p>\n</div>\n'),e.put("plugins/jmx/html/charts.html",'<div ng-controller="Jmx.ChartController">\n  <h2>Chart</h2>\n  <div ng-switch="errorMessage()">\n    <div ng-switch-when="metrics">No valid metrics to show for this mbean.</div>\n    <div ng-switch-when="updateRate">Charts aren\'t available when the update rate is set to "No refreshes", go to the <a ng-href="#/preferences{{hash}}">Preferences</a> panel and set a refresh rate to enable charts</div>\n    <div ng-switch-default>\n      <hawtio-action-bar>\n        <button type="button" class="btn btn-default" ng-click="edit()">Edit</button>\n      </hawtio-action-bar>\n    </div>\n    <div id="charts"></div>\n  </div>\n</div>\n'),e.put("plugins/karaf/html/feature-details.html",'<div class="toolbar-pf">\n  <form class="toolbar-pf-actions">\n    <div class="form-group">\n      <button ng-click="install(name,version)"\n              ng-disabled="row.Installed"\n              class="btn btn-default"\n              title="install"\n              hawtio-show\n              object-name="{{featuresMBean}}"\n              method-name="installFeature">Install</button>\n      <button ng-click="uninstall(name,version)"\n              ng-disabled="!row.Installed"\n              class="btn btn-default"\n              title="uninstall"\n              hawtio-show\n              object-name="{{featuresMBean}}"\n              method-name="uninstallFeature">Uninstall</button>\n    </div>\n  </form>\n</div>\n\n<h2>Details</h2>\n<dl class="dl-horizontal">\n  <dt>ID</dt>\n  <dd>{{row.Id}}</dd>\n  <dt>Name</dt>\n  <dd>{{row.Name}}</dd>\n  <dt>State</dt>\n  <dd>{{row.Installed ? \'Installed\' : \'Uninstalled\'}}</dd>\n  <dt>Repository Name</dt>\n  <dd>{{row.RepositoryName}}</dd>\n  <dt>Repository URI</dt>\n  <dd>{{row.RepositoryURI}}</dd>\n  <dt>Version</dt>\n  <dd>{{row.Version}}</dd>\n</dl>\n\n<h2>Dependencies</h2>\n<ul class="list-unstyled">\n  <li ng-if="!row.Dependencies.length">none</li>\n  <li ng-repeat="feature in row.Dependencies" ng-switch on="isVersionRange(feature.Version)">\n    <span ng-switch-when="true">\n      {{feature.Name}}/{{feature.Version}}\n    </span>\n    <a ng-switch-when="false" ng-href=\'osgi/features/{{feature.Name}}/{{feature.Version}}\'>\n      {{feature.Name}}/{{feature.Version}}\n    </a>\n  </li>\n</ul>\n\n<h2>Bundles</h2>\n<ul class="list-unstyled">\n  <li ng-if="!row.BundleDetails.length">none</li>\n  <li ng-repeat="bundle in row.BundleDetails">\n    <div ng-switch="bundle.Installed">\n      <a ng-switch-when="true" ng-href=\'osgi/bundles/{{bundle.Identifier}}\'>{{bundle.Location}}</a>\n      <span ng-switch-default>{{bundle.Location}}</span>\n    </div>\n  </li>\n</ul>\n\n<h2>Configurations</h2>\n<p ng-if="!row.Configurations.length">none</p>\n<table class="table table-striped table-bordered" ng-if="row.Configurations.length">\n  <thead>\n    <tr>\n      <th>PID</th>\n      <th>Properties</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="(pid, value) in row.Configurations">\n      <td><a ng-href="osgi/configurations/{{value.Pid}}">{{value.Pid}}</a></td>\n      <td>\n        <ul class="list-unstyled">\n          <li ng-repeat="(key, value) in value.Elements">{{key}} = {{value.Value}}</li>\n        </ul>\n    </tr>\n  </tbody>\n</table>\n\n<h2>Configuration Files</h2>\n<ul class="list-unstyled">\n  <li ng-if="!Object.keys(row[\'Configuration Files\']).length">none</li>\n  <li ng-repeat="(key, value) in row[\'Configuration Files\']">{{value.Files}}</li>\n</ul>\n'),e.put("plugins/karaf/html/feature.html",'<div class="controller-section" ng-controller="Karaf.FeatureController">\n\n  <ol class="breadcrumb">\n    <li>\n      <a ng-href="osgi/features">Features</a>\n    </li>\n    <li class="page-title">\n      {{row.Id}}\n    </li>\n  </ol>\n\n  <div ng-include src="\'plugins/karaf/html/feature-details.html\'"></div>\n\n</div>\n\n'),e.put("plugins/karaf/html/features.html",'<div class="list-view">\n\n  <h1>Features</h1>\n\n  <p ng-if="$ctrl.loading">Loading...</p>\n\n  <div ng-if="!$ctrl.loading">\n    <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n    <pf-list-view items="$ctrl.listItems"\n                  config="$ctrl.listConfig"\n                  page-config="$ctrl.pageConfig"\n                  action-buttons="$ctrl.listItemActionButtons"\n                  enable-button-for-item-fn="$ctrl.enableButtonForItem">\n      <div class="list-view-pf-description">\n        <div class="list-view-pf-left">\n          <span class="list-view-pf-icon-sm fa"\n                ng-class="{\'list-view-pf-icon-success fa-check\': item.installed}"\n                title="Feature {{item.id}} {{item.getState()}}">\n          </span>\n        </div>\n        <div class="list-group-item-heading"><a ng-href=osgi/features/{{item.id}}>{{item.id}}</a></div>\n      </div>\n      </pf-list-view>\n  </div>\n</div>\n'),e.put("plugins/karaf/html/scr-component-details.html",'<div class="row toolbar-pf">\n  <div class="col-sm-12">\n    <form class="toolbar-pf-actions">\n      <div class="form-group">\n        <button class="btn btn-default"\n                ng-click="$ctrl.enableComponent()"\n                ng-disabled="$ctrl.disableComponentEnable()"\n                hawtio-show\n                object-name="{{$ctrl.scrMBean}}"\n                method-name="enableComponent">\n          Enable\n        </button>\n        <button class="btn btn-default"\n                ng-click="$ctrl.disableComponent()"\n                ng-disabled="$ctrl.disableComponentDisable()"\n                hawtio-show\n                object-name="{{$ctrl.scrMBean}}"\n                method-name="disableComponent">\n          Disable\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n\n<h2>Details</h2>\n\n<div class="row">\n  <div class="col-md-12">\n    <dl class="dl-horizontal">\n      <dt ng-if="$ctrl.component.id >= 0">ID</dt>\n      <dd ng-if="$ctrl.component.id >= 0">{{$ctrl.component.id}}</dd>\n      <dt>Bundle ID</dt>\n      <dd><a ng-href="osgi/bundles/{{$ctrl.component.bundleId}}">{{$ctrl.component.bundleId}}</a></dd>\n      <dt>Name</dt>\n      <dd>{{$ctrl.component.name}}</dd>\n      <dt>State</dt>\n      <dd>{{$ctrl.component.state}}</dd>\n    </dl>\n  </div>\n</div>\n\n<h2>Properties</h2>\n<div class="row">\n  <div class="col-md-12">\n    <dl class="dl-horizontal">\n      <dt ng-repeat-start="(key, value) in $ctrl.component.properties">{{key}}</dt>\n      <dd ng-repeat-end>{{value.Value}}</dd>\n    </dl>\n  </div>\n</div>\n\n<h2>References</h2>\n\n<div class="row">\n  <div class="col-md-12">\n    <table class="scr-component-references-table table">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Cardinality</th>\n          <th>Policy</th>\n          <th>Bound Services</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="(key, value) in $ctrl.component.references">\n          <td>{{value.Name}}</td>\n          <td>{{value.Cardinality}}</td>\n          <td>{{value.Policy}}</td>\n          <td>\n            <ul class="list-unstyled">\n              <li ng-repeat="id in value[\'BoundServices\']">\n                <i class="fa fa-cog text-info" id="bound.service.{{id}}"> {{id}}</i>\n              </li>\n            </ul>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n'),e.put("plugins/karaf/html/scr-component.html",'<p ng-if="$ctrl.loading">Loading...</p>\n\n<div class="controller-section" ng-if="!$ctrl.loading">\n  <ol class="breadcrumb">\n    <li>\n      <a ng-href="{{$ctrl.srcComponentsUrl}}">Declarative Services</a>\n    </li>\n    <li class="page-title">\n      {{$ctrl.component.name}}\n    </li>\n  </ol>\n  <div ng-include src="\'plugins/karaf/html/scr-component-details.html\'"></div>\n</div>\n'),e.put("plugins/karaf/html/server.html",'<h1>Server</h1>\n\n<div class="controller-section" ng-controller="Karaf.ServerController">\n\n  <div class="row">\n    <div class="col-md-12">\n      <dl class="dl-horizontal">\n        <dt>Name</dt>\n        <dd>{{data.name}}</dd>\n        <dt>Version</dt>\n        <dd>{{data.version}}</dd>\n        <dt>State</dt>\n        <dd>{{data.state}}</dd>\n        <dt>Is root</dt>\n        <dd>{{data.root}}</dd>\n        <dt>Start Level</dt>\n        <dd>{{data.startLevel}}</dd>\n        <dt>Framework</dt>\n        <dd>{{data.framework}}</dd>\n        <dt>Framework Version</dt>\n        <dd>{{data.frameworkVersion}}</dd>\n        <dt>Location</dt>\n        <dd>{{data.location}}</dd>\n        <dt>SSH Port</dt>\n        <dd>{{data.sshPort}}</dd>\n        <dt>RMI Registry Port</dt>\n        <dd>{{data.rmiRegistryPort}}</dd>\n        <dt>RMI Server Port</dt>\n        <dd>{{data.rmiServerPort}}</dd>\n        <dt>PID</dt>\n        <dd>{{data.pid}}</dd>\n      </dl>\n    </div>\n  </div>\n\n</div>\n'),e.put("plugins/logs/html/logs-preferences.html",'<form class="form-horizontal logs-preferences-form" ng-controller="LogsPreferencesController">\n\n  <div class="form-group">\n    <label class="col-md-2 control-label" for="logSortAsc">\n      Sort ascending\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="Sort log entries by timestamp ascending"></span>\n    </label>\n    <div class="col-md-6">\n      <input type="checkbox" id="logSortAsc" ng-model="logSortAsc">\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label class="col-md-2 control-label" for="logAutoScroll">\n      Auto scroll\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="Automatically scroll when new log entries are added"></span>\n    </label>\n    <div class="col-md-6">\n      <input type="checkbox" id="logAutoScroll" ng-model="logAutoScroll">\n    </div>\n  </div>\n\n  <div class="form-group" ng-class="{\'has-error\': logCacheSize === null || logCacheSize === undefined}">\n    <label class="col-md-2 control-label" for="logCacheSize">\n      Log cache size\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="The number of log messages to keep in the browser"></span>\n    </label>\n    <div class="col-md-6">\n      <input id="logCacheSize" type="number" class="form-control" ng-model="logCacheSize" min="0"/>\n      <span class="help-block" ng-show="logCacheSize === null || logCacheSize === undefined">Invalid value</span>\n    </div>\n  </div>\n\n  <div class="form-group" ng-class="{\'has-error\': logBatchSize === null || logBatchSize === undefined}">\n    <label class="col-md-2 control-label" for="logBatchSize">\n      Log batch size\n      <span class="pficon pficon-info" data-toggle="tooltip" data-placement="top" title="The maximum number of log messages to retrieve when loading new log lines"></span>\n    </label>\n    <div class="col-md-6">\n      <input id="logBatchSize" type="number" class="form-control" ng-model="logBatchSize" min="1" max="1000"/>\n      <span class="help-block" ng-show="logBatchSize === null || logBatchSize === undefined">Invalid value</span>\n    </div>\n  </div>\n\n</form>\n'),e.put("plugins/osgi/html/bundle.html",'<div class="controller-section" ng-controller="Osgi.BundleController">\n\n  <ol class="breadcrumb">\n    <li>\n        <a ng-href="osgi/bundles">Bundles</a>\n    </li>\n    <li class="page-title">\n        {{row.Headers[\'Bundle-Name\'].Value}}\n    </li>\n  </ol>\n\n  <div class="toolbar-pf">\n    <form class="toolbar-pf-actions">\n      <div class="form-group">\n        <button ng-click="startBundle(bundleId)"\n                ng-disabled="row.State === \'ACTIVE\' || row.Fragment"\n                class="btn btn-default"\n                hawtio-show\n                object-name="{{frameworkMBean}}"\n                method-name="startBundle"\n                title="{{row.Fragment ? \'Fragment bundle cannot be started\' : \'\'}}">Start</button>\n        <button ng-click="stopBundle(bundleId)"\n                ng-disabled="row.State !== \'ACTIVE\'"\n                class="btn btn-default"\n                hawtio-show\n                object-name="{{frameworkMBean}}"\n                method-name="stopBundle">Stop</button>\n        <button ng-click="refreshBundle(bundleId)"\n                class="btn btn-default"\n                hawtio-show\n                object-name="{{frameworkMBean}}"\n                method-name="refreshBundle">Refresh</button>\n        <button ng-click="updateBundle(bundleId)"\n                class="btn btn-default"\n                hawtio-show\n                object-name="{{frameworkMBean}}"\n                method-name="updateBundle">Update</button>\n        <button ng-click="uninstallBundle(bundleId)"\n                class="btn btn-default"\n                hawtio-show\n                object-name="{{frameworkMBean}}"\n                method-name="uninstallBundle">Uninstall</button>\n      </div>\n    </form>\n  </div>\n\n  <h2>Details</h2>\n\n  <dl class="dl-horizontal osgi-bundle-details-dl">\n    <dt ng-switch="row.Fragment">\n      <span ng-switch-when="true">Fragment&nbsp;ID</span>\n      <span ng-switch-default>Bundle&nbsp;ID</span>\n    </dt>\n    <dd>\n      {{row.Identifier}}\n    </dd>\n    <dt>\n      Bundle&nbsp;Name\n    </dt>\n    <dd>\n      {{row.Headers[\'Bundle-Name\'].Value}}\n    </dd>\n    <dt>\n      Symbolic&nbsp;Name\n    </dt>\n    <dd>\n      {{row.SymbolicName}}\n    </dd>\n    <dt>\n      Version\n    </dt>\n    <dd>\n      {{row.Version}}\n    </dd>\n    <dt>\n      Start&nbsp;Level\n    </dt>\n    <dd>\n      {{row.StartLevel}}\n    </dd>\n    <dt>\n      Location\n    </dt>\n    <dd>\n      {{row.Location}}\n    </dd>\n    <dt>\n      State\n    </dt>\n    <dd>\n      {{row.State.toLowerCase()}}\n    </dd>\n    <dt>\n      Last&nbsp;Modified\n    </dt>\n    <dd>\n      {{row.LastModified | date:\'medium\'}}\n    </dd>\n    <div>\n    <dt ng-switch="row.Fragment">\n      <span ng-switch-when="true">Hosts</span>\n      <span ng-switch-default>Fragments</span>\n    </dt>\n    <dd ng-switch="row.Fragment">\n      <span ng-switch-when="true" ng-bind-html-unsafe="row.Hosts"></span>\n      <span ng-switch-default ng-bind-html-unsafe="row.Fragments"></span>\n    </dd>\n  </dl>\n\n  <h2>Inspect Classloading</h2>\n\n  <div class="alert alert-dismissable" ng-class="\'alert-\' + classLoadingAlert.type" ng-if="classLoadingAlert">\n    <span class="pficon" ng-class="classLoadingAlert.icon"></span>\n    <button type="button" class="close" aria-hidden="true" ng-click="dismissClassLoadingAlert()">\n      <span class="pficon pficon-close"></span>\n    </button>\n    <span ng-bind-html="classLoadingAlert.message"></span>\n  </div>\n\n  <form class="form-horizontal">\n    <div class="form-group"\n         hawtio-show object-name="{{osgiToolsMBean}}" operation-name="getLoadClassOrigin" mode="remove">\n      <label class="col-sm-2 control-label" for="classToLoad">Class Name</label>\n      <div class="col-sm-10">\n        <input type="text" id="classToLoad" class="form-control" ng-model="classToLoad">\n      </div>\n    </div>\n    <div hawtio-show object-name="{{osgiToolsMBean}}" operation-name="getLoadClassOrigin" mode="inverse">\n      <label class="col-sm-2 control-label" for="classToLoad">Class Name</label>\n      <div class="col-sm-10 alert alert-info">\n        <span class="pficon pficon-info"></span>\n        Loading class is not allowed for this user.\n      </div>\n    </div>\n    <div class="form-group"\n         hawtio-show object-name="{{osgiToolsMBean}}" operation-name="getLoadClassOrigin">\n      <div class="col-sm-offset-2 col-sm-10">\n        <button type="button" class="btn btn-primary" ng-click="executeLoadClass(classToLoad)" ng-disabled="!classToLoad">\n          Load Class\n        </button>\n      </div>\n    </div>\n    <div class="form-group"\n         hawtio-show object-name="{{osgiToolsMBean}}" operation-name="getResourceURL" mode="remove">\n      <label class="col-sm-2 control-label" for="resourceToLoad">Resource Name</label>\n      <div class="col-sm-10">\n        <input type="text" id="resourceToLoad" class="form-control" ng-model="resourceToLoad">\n      </div>\n    </div>\n    <div hawtio-show object-name="{{osgiToolsMBean}}" operation-name="getResourceURL" mode="inverse">\n      <label class="col-sm-2 control-label" for="resourceToLoad">Resource Name</label>\n      <div class="col-sm-10 alert alert-info">\n        <span class="pficon pficon-info"></span>\n        Getting resource is not allowed for this user.\n      </div>\n    </div>\n    <div class="form-group"\n         hawtio-show object-name="{{osgiToolsMBean}}" operation-name="getResourceURL">\n      <div class="col-sm-offset-2 col-sm-10">\n        <button type="button" class="btn btn-primary" ng-click="executeFindResource(resourceToLoad)" ng-disabled="!resourceToLoad">\n          Get Resource\n        </button>\n      </div>\n    </div>\n  </form>\n\n  <h2>Imported Packages</h2>\n\n  <p ng-if="isEmpty(row.ImportData)">none</p>\n  <table class="table table-striped table-bordered" ng-if="!isEmpty(row.ImportData)">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Imported Version</th>\n        <th>Version</th>\n        <th>Resolution</th>\n        <th>Dynamic Import</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="(package, data) in row.ImportData">\n        <td>{{package}}</td>\n        <td>{{data.ReportedVersion}}</td>\n        <td>{{data.headers.Aversion}}</td>\n        <td>{{data.headers.Dresolution}}</td>\n        <td>{{data.headers.reason}}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div ng-if="!isEmpty(unsatisfiedPackages)">\n    <h3>Imports not satisfied</h3>\n    <table class="table table-striped table-bordered">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Version</th>\n          <th>Resolution</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="(package, data) in unsatisfiedPackages">\n          <td>{{package}}</td>\n          <td>{{data.Aversion}}</td>\n          <td>{{data.Dresolution}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <h2>Exported Packages</h2>\n\n  <p ng-if="isEmpty(row.ExportData)">none</p>\n  <table class="table table-striped table-bordered" ng-if="!isEmpty(row.ExportData)">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Exported Version</th>\n        <th>Uses</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat="(package, data) in row.ExportData">\n        <td>{{package}}</td>\n        <td>{{data.ReportedVersion}}</td>\n        <td class="osgi-bundle-exported-package-uses">{{data.headers.Duses}}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <h2 ng-if="row.RegisteredServices.length > 0 || row.ServicesInUse.length > 0">Services</h2>\n\n  <div ng-if="row.RegisteredServices.length > 0">\n    <h3>Registered Services</h3>\n    <ul class="list-group labels">\n      <li class="list-group-item" ng-repeat="id in row.RegisteredServices">\n        <span id="registers.service.{{id}}" class="text-success">{{id}}</span>\n      </li>\n    </ul>\n  </div>\n\n  <div ng-if="row.ServicesInUse.length > 0">\n    <h3>Services used by this Bundle</h3>\n    <ul class="list-group labels">\n      <li class="list-group-item" ng-repeat="id in row.ServicesInUse">\n        <span id="uses.service.{{id}}" class="text-info">{{id}}</span>\n      </li>\n    </ul>\n  </div>\n\n  <div ng-if="row.RequiringBundles.length > 0">\n    <h2>Other Bundles using this Bundle</h2>\n    <ul class="list-unstyled">\n      <li ng-repeat="bundle in row.RequiringBundles"><a ng-href="{{bundle.url}}">{{bundle.label}}</a></li>\n    </ul>\n  </div>\n\n  <h2>Headers</h2>\n  <dl class="dl-horizontal osgi-bundle-headers-dl">\n    <dt ng-repeat-start="(key, value) in row.Headers" ng-show="showValue(key)">{{key}}</dt>\n    <dd ng-repeat-end ng-show="showValue(key)">{{value.Value}}</dd>\n  </dl>\n\n</div>\n'),e.put("plugins/osgi/html/configurations.html",'<h1>Configuration</h1>\n\n<div class="controller-section" ng-controller="Osgi.ConfigurationsController">\n\n  <p ng-if="!configurations">Loading...</p>\n  \n  <div ng-if="configurations">\n    <pf-toolbar config="toolbarConfig"></pf-toolbar>\n\n    <pf-list-view items="filteredConfigurations" config="listViewConfig" menu-actions="listViewMenuItems">\n      <div class="list-view-pf-left" ng-class="{\'osgi-configuration-factory-instance\': item.isFactoryInstance}">\n        <span class="list-view-pf-icon-sm" ng-class="item.kind.class" title="{{item.kind.title}}"></span>\n      </div>\n      <div class="list-view-pf-body">\n        <div class="list-view-pf-description">\n          <div class="list-group-item-heading" title="{{item.name}}">\n            <a ng-href="{{item.pidLink}}">{{item.name}}</a>\n          </div>\n          <div class="list-group-item-text">\n            {{item.description}}\n          </div>\n        </div>\n      </div>\n    </pf-list-view>\n  </div>\n  \n  <script type="text/ng-template" id="addPidDialog.html">\n    <form class="form-horizontal" ng-submit="$close(newPid)">\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$dismiss()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <h4 class="modal-title">Add configuration</h4>\n      </div>\n      <div class="modal-body">\n        <div class="form-group">\n          <label class="col-sm-3 control-label" for="newPid">Configuration ID</label>\n          <div class="col-sm-9">\n            <input type="text" id="newPid" class="form-control" ng-model="newPid" required/>\n          </div>\n        </div>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="$dismiss()">Cancel</button>\n        <button type="submit" class="btn btn-primary" ng-disabled="!(newPid !== \'\' && newPid !== undefined)">Add</button>\n      </div>\n    </form>\n  <\/script>\n\n  <script type="text/ng-template" id="deletePidDialog.html">\n    <form class="form-horizontal" ng-submit="$close()">\n      <div class="modal-header">\n        <button type="button" class="close" aria-label="Close" ng-click="$dismiss()">\n          <span class="pficon pficon-close" aria-hidden="true"></span>\n        </button>\n        <h4 class="modal-title">Delete configuration</h4>\n      </div>\n      <div class="modal-body">\n        <p>Delete \'{{item.name}}\' configuration?</p>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="$dismiss()">Cancel</button>\n        <button type="submit" class="btn btn-danger">Delete</button>\n      </div>\n    </form>\n  <\/script>\n  \n</div>\n'),e.put("plugins/osgi/html/packages.html",'<h1>Packages</h1>\n\n<div class="osgi-packages-main" ng-controller="Osgi.PackagesController">\n\n  <p ng-if="!packages">Loading...</p>\n\n  <div ng-if="packages">\n    <pf-toolbar config="toolbarConfig"></pf-toolbar>\n\n    <div class="list-group list-view-pf list-view-pf-view osgi-packages-list" infinite-scroll="appendItems()"\n      infinite-scroll-distance="2" infinite-scroll-container=\'"div[ng-view]"\'>\n      <div class="list-group-item" ng-repeat="package in scrollablePackages"\n        ng-class="{\'list-view-pf-expand-active\': package.exportsExpanded || package.importsExpanded}">\n        <div class="list-view-pf-main-info">\n          <div class="list-view-pf-body">\n            <div class="list-view-pf-description">\n              <div class="list-group-item-heading" title="{{package.Name}}">\n                {{package.Name}}\n              </div>\n              <div class="list-group-item-text">\n                {{package.Version}}\n              </div>\n            </div>\n            <div class="list-view-pf-additional-info">\n              <div class="list-view-pf-additional-info-item">\n                <div class="list-view-pf-expand" ng-class="{\'active\': package.exportsExpanded}"\n                  ng-click="package.exportsExpanded = !package.exportsExpanded; package.importsExpanded = false;">\n                  <span class="fa fa-angle-right" ng-class="{\'fa-angle-down\': package.exportsExpanded}"></span>\n                  <span class="pficon pficon-export"></span>\n                  <strong>{{package.ExportingBundles.length}}</strong>\n                  Exporting Bundle{{package.ExportingBundles.length !== 1 ? \'s\' : \'\'}}\n                </div>\n              </div>\n              <div class="list-view-pf-additional-info-item">\n                <div class="list-view-pf-expand" ng-class="{\'active\': package.importsExpanded}"\n                  ng-click="package.importsExpanded = !package.importsExpanded; package.exportsExpanded = false;">\n                  <span class="fa fa-angle-right" ng-class="{\'fa-angle-down\': package.importsExpanded}"></span>\n                  <span class="pficon pficon-import"></span>\n                  <strong>{{package.ImportingBundles.length}}</strong>\n                  Importing Bundle{{package.ImportingBundles.length !== 1 ? \'s\' : \'\'}}\n                </div>\n              </div>\n              <div class="list-view-pf-additional-info-item">\n                <div class="list-view-pf-expand">\n                  <span ng-show="package.RemovalPending">\n                    <span class="pficon pficon-warning-triangle-o"></span>\n                    Removal Pending\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="list-group-item-container" ng-if="package.exportsExpanded">\n          <div class="close" ng-click="package.exportsExpanded = false">\n            <span class="pficon pficon-close"></span>\n          </div>\n          <dl>\n            <dt>Exporting Bundles</dt>\n            <dd>\n              <ul class="package-bundles-list">\n                <li ng-repeat="bundle in package.ExportingBundles">\n                  <a title="Exported by bundle {{bundle.Identifier}}" ng-href="{{bundle.Url}}">{{bundle.SymbolicName}}</a>\n                </li>\n              </ul>\n            </dd>\n          </dl>\n        </div>\n        <div class="list-group-item-container" ng-if="package.importsExpanded">\n          <div class="close" ng-click="package.importsExpanded = false">\n            <span class="pficon pficon-close"></span>\n          </div>\n          <dl>\n            <dt>Importing Bundles</dt>\n            <dd>\n              <ul class="package-bundles-list">\n                <li ng-repeat="bundle in package.ImportingBundles">\n                  <a title="Imported by bundle {{bundle.Identifier}}" ng-href="{{bundle.Url}}">{{bundle.SymbolicName}}</a>\n                </li>\n              </ul>\n            </dd>\n          </dl>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n'),e.put("plugins/osgi/html/services.html",'<h1>Services</h1>\n\n<div class="controller-section" ng-controller="Osgi.ServiceController">\n\n  <p ng-if="!services">Loading...</p>\n\n  <div ng-if="services">\n    <pf-toolbar config="toolbarConfig"></pf-toolbar>\n\n    <div class="list-group list-view-pf list-view-pf-view">\n      <div class="list-group-item" ng-class="{\'list-view-pf-expand-active\': service.expanded}"\n          ng-repeat="service in filteredServices">\n        <div class="list-group-item-header" ng-click="service.expanded = !service.expanded">\n          <div class="list-view-pf-expand">\n            <span class="fa fa-angle-right" ng-class="{\'fa-angle-down\': service.expanded}"></span>\n          </div>\n          <div class="list-view-pf-main-info">\n            <div class="list-view-pf-body">\n              <div class="list-view-pf-description">\n                <div class="list-group-item-heading">\n                  ID {{service.Identifier}}\n                </div>\n                <div class="list-group-item-text" ng-bind-html="service.BundleLinks">\n                </div>\n              </div>\n              <div class="list-view-pf-additional-info">\n                <div class="list-view-pf-additional-info-item" title="Object Classes">\n                  {{service.objectClass[0]}}{{service.objectClass.length > 1 ? \'...\' : \'\'}}\n                </div>\n              </div>              \n            </div>\n          </div>\n        </div>\n        <div class="list-group-item-container" ng-if="service.expanded">\n          <div class="close" ng-click="service.expanded = false">\n            <span class="pficon pficon-close"></span>\n          </div>\n          <div class="col-md-5">\n            <dl>\n              <dt>Using Bundles</dt>\n              <dd>\n                <ul class="service-bundles-list">\n                  <li ng-repeat="bundle in service.UsingBundles">\n                    <a ng-href="{{bundle.Url}}">{{bundle.SymbolicName}}</a>\n                  </li>\n                </ul>\n              </dd>\n            </dl>\n          </div>\n          <div class="col-md-5">\n            <dl>\n              <dt>Object Classes</dt>\n              <dd>\n                <ul class="service-object-classes-list">\n                  <li ng-repeat="clazz in service.objectClass">\n                    {{clazz}}\n                  </li>\n                </ul>\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n'),e.put("plugins/quartz/jobs/jobs-details-dialog.html",'<table class="quartz-job-details-table table table-striped table-bordered">\n  <thead>\n    <th>Key</th>\n    <th>Value</th>\n  </thead>\n  <tbody>\n    <tr ng-repeat="key in $ctrl.modalBodyScope.keys">\n      <td>{{ key }}</td>\n      <td>{{ $ctrl.modalBodyScope.dataMap[key] }}</td>\n    </tr>\n  </tbody>\n</table>\n'),e.put("plugins/quartz/jobs/jobs.html",'<div class="quartz-jobs-main">\n  <h2>Jobs</h2>\n\n  <div class="blank-slate-pf" ng-hide="$ctrl.selectedScheduler">\n    <h2>No scheduler selected</h2>\n    <p>\n      The Quartz plugin allows you to see details about running Quartz Schedulers,\n      and their associated triggers and jobs.\n    </p>\n    <p>\n      Select a Quartz Scheduler in the tree to continue.\n    </p>\n  </div>\n\n  <div ng-show="$ctrl.selectedScheduler">\n    <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n    <table class="quartz-jobs-table table table-striped table-bordered table-hover mouse-pointer">\n      <thead>\n        <tr>\n          <th ng-repeat="col in $ctrl.tableColumns">\n            {{ col.header }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="job in $ctrl.filteredJobs track by $index" ng-click="$ctrl.onClick(job)">\n          <td ng-repeat="col in $ctrl.tableColumns">\n            {{ job[col.itemField] }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <pf-modal-overlay show-modal="$ctrl.showJobDetails" on-close="$ctrl.onClose()" modal-id="quartz-job-details-dialog"\n      modal-title="$ctrl.jobDetailsTitle" is-form="true" modal-body-template="$ctrl.jobDetailsTemplate"\n      modal-body-scope="$ctrl.jobDetailsScope" action-buttons="$ctrl.jobDetailsButtons">\n    </pf-modal-overlay>\n  </div>\n\n</div>\n'),e.put("plugins/quartz/scheduler/scheduler.html",'<div class="quartz-scheduler-main">\n  <h2>Scheduler</h2>\n\n  <div class="blank-slate-pf" ng-hide="$ctrl.selectedSchedulerMBean">\n    <h2>No scheduler selected</h2>\n    <p>\n      The Quartz plugin allows you to see details about running Quartz Schedulers,\n      and their associated triggers and jobs.\n    </p>\n    <p>\n      Select a Quartz Scheduler in the tree to continue.\n    </p>\n  </div>\n\n  <div class="cards-pf" ng-show="$ctrl.selectedSchedulerMBean">\n    <div class="container-fluid container-cards-pf">\n      <div class="row row-cards-pf">\n        <div class="card-pf card-pf-info-status card-pf-accented">\n          <div class="card-pf-info-image">\n            <span class="info-icon {{$ctrl.selectedScheduler.Started | quartzIconClass}}"></span>\n          </div>\n          <div class="card-pf-info-content card-pf-body">\n            <h3 class="card-pf-title">\n              {{$ctrl.selectedScheduler.SchedulerName}}\n            </h3>\n            <dl class="dl-horizontal">\n              <dt>Instance</dt>\n              <dd>{{$ctrl.selectedScheduler.SchedulerInstanceId}}</dd>\n              <dt>Version</dt>\n              <dd>{{$ctrl.selectedScheduler.Version}}</dd>\n            </dl>\n            <div class="btn-group">\n              <button type="button" class="btn btn-primary" ng-disabled="$ctrl.selectedScheduler.Started"\n                ng-click="$ctrl.startScheduler()">\n                Start\n              </button>\n              <button type="button" class="btn btn-danger" ng-disabled="!$ctrl.selectedScheduler.Started"\n                ng-click="$ctrl.pauseScheduler()">\n                Pause\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class="card-pf card-pf-info-status">\n          <div class="card-pf-info-image">\n            <span class="info-icon {{$ctrl.selectedScheduler.SampledStatisticsEnabled | quartzIconClass}}"></span>\n          </div>\n          <div class="card-pf-info-content card-pf-body">\n            <h3 class="card-pf-title">Sampled Statistics</h3>\n            <p class="card-pf-subtitle">Most recent samples:</p>\n            <dl class="dl-horizontal">\n              <dt>Jobs Completed</dt>\n              <dd>{{$ctrl.selectedScheduler.JobsCompletedMostRecentSample}}</dd>\n              <dt>Jobs Executed</dt>\n              <dd>{{$ctrl.selectedScheduler.JobsExecutedMostRecentSample}}</dd>\n              <dt>Jobs Scheduled</dt>\n              <dd>{{$ctrl.selectedScheduler.JobsScheduledMostRecentSample}}</dd>\n            </dl>\n            <div class="btn-group">\n              <button type="button" class="btn btn-primary"\n                ng-disabled="$ctrl.selectedScheduler.SampledStatisticsEnabled"\n                ng-click="$ctrl.enableSampleStatistics()">\n                Start\n              </button>\n              <button type="button" class="btn btn-danger"\n                ng-disabled="!$ctrl.selectedScheduler.SampledStatisticsEnabled"\n                ng-click="$ctrl.disableSampleStatistics()">\n                Pause\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class="card-pf card-pf-info-status">\n          <div class="card-pf-info-content card-pf-body">\n            <dl class="dl-horizontal">\n              <dt>JobStore ClassName</dt>\n              <dd>{{$ctrl.selectedScheduler.JobStoreClassName}}</dd>\n              <dt>Thread Pool ClassName</dt>\n              <dd>{{$ctrl.selectedScheduler.ThreadPoolClassName}}</dd>\n              <dt>Thread Pool Size</dt>\n              <dd>{{$ctrl.selectedScheduler.ThreadPoolSize}}</dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n'),e.put("plugins/quartz/triggers/triggers-manual-dialog.html",'<ng-form name="quartz-manual-trigger-form" class="form-horizontal">\n  <pf-form-group pf-label="Name" pf-label-class="col-sm-4" pf-input-class="col-sm-8">\n    <input id="name" name="name" ng-model="$ctrl.modalBodyScope.name" type="text" required />\n  </pf-form-group>\n  <pf-form-group pf-label="Group" pf-label-class="col-sm-4" pf-input-class="col-sm-8">\n    <input id="group" name="group" ng-model="$ctrl.modalBodyScope.group" type="text" required />\n  </pf-form-group>\n  <pf-form-group pf-label="Parameters" pf-label-class="col-sm-4" pf-input-class="col-sm-8">\n    <input id="parameters" name="parameters" ng-model="$ctrl.modalBodyScope.parameters" type="text" required />\n    <small class="form-text text-muted">Parameters if any (<tt>java.util.Map</tt> in JSON syntax).</small>\n  </pf-form-group>\n</ng-form>\n'),e.put("plugins/quartz/triggers/triggers-update-dialog.html",'<ng-form name="quartz-update-trigger-form" class="form-horizontal">\n  <pf-form-group ng-show="$ctrl.modalBodyScope.showCron" pf-label="Cron expression" pf-label-class="col-sm-4"\n    pf-input-class="col-sm-8">\n    <input id="cron" name="cron" ng-model="$ctrl.modalBodyScope.cron" type="text"\n      ng-required="$ctrl.modalBodyScope.showCron" />\n    <small class="form-text text-muted">Specify a cron expression for the trigger.</small>\n  </pf-form-group>\n  <pf-form-group ng-show="$ctrl.modalBodyScope.showRepeatCount" pf-label="Repeat count" pf-label-class="col-sm-4"\n    pf-input-class="col-sm-8">\n    <input id="repeatCount" name="repeatCount" ng-model="$ctrl.modalBodyScope.repeatCount" type="text"\n      ng-required="$ctrl.modalBodyScope.showRepeatCount" />\n    <small class="form-text text-muted">Number of times to repeat. Use -1 for forever.</small>\n  </pf-form-group>\n  <pf-form-group ng-show="$ctrl.modalBodyScope.showRepeatInterval" pf-label="Repeat interval" pf-label-class="col-sm-4"\n    pf-input-class="col-sm-8">\n    <input id="repeatInterval" name="repeatInterval" ng-model="$ctrl.modalBodyScope.repeatInterval" type="text"\n      ng-required="$ctrl.modalBodyScope.showRepeatInterval" />\n    <small class="form-text text-muted">Elapsed time in millis between triggering.</small>\n  </pf-form-group>\n  <pf-form-group pf-label="Misfire instruction" required pf-label-class="col-sm-4" pf-input-class="col-sm-8">\n    <select id="misfireInstruction" name="misfireInstruction" ng-model="$ctrl.modalBodyScope.misfireInstruction"\n      ng-options="m.id as m.title for m in $ctrl.modalBodyScope.misfireInstructions" ng-required="true" />\n    <small class="form-text text-muted">What to do when misfiring happens.</small>\n  </pf-form-group>\n</ng-form>\n'),e.put("plugins/quartz/triggers/triggers.html",'<div class="quartz-triggers-main">\n  <h2>Triggers</h2>\n\n  <div class="blank-slate-pf" ng-hide="$ctrl.selectedScheduler">\n    <h2>No scheduler selected</h2>\n    <p>\n      The Quartz plugin allows you to see details about running Quartz Schedulers,\n      and their associated triggers and jobs.\n    </p>\n    <p>\n      Select a Quartz Scheduler in the tree to continue.\n    </p>\n  </div>\n\n  <div ng-show="$ctrl.selectedScheduler">\n    <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n    <pf-table-view class="quartz-triggers-table" config="$ctrl.tableConfig" columns="$ctrl.tableColumns"\n      action-buttons="$ctrl.actionButtons" menu-actions="$ctrl.menuActions" items="$ctrl.filteredTriggers">\n    </pf-table-view>\n\n    <pf-modal-overlay show-modal="$ctrl.showUpdateTriggerDialog" on-close="$ctrl.onClose()"\n      modal-id="quartz-update-trigger-dialog" modal-title="$ctrl.updateTriggerTitle" is-form="true"\n      modal-body-template="$ctrl.updateTriggerTemplate" modal-body-scope="$ctrl.updateTriggerForm"\n      action-buttons="$ctrl.updateTriggerButtons">\n    </pf-modal-overlay>\n\n    <pf-modal-overlay show-modal="$ctrl.showManualTriggerDialog" on-close="$ctrl.onClose()"\n      modal-id="quartz-manual-trigger-dialog" modal-title="$ctrl.manualTriggerTitle" is-form="true"\n      modal-body-template="$ctrl.manualTriggerTemplate" modal-body-scope="$ctrl.manualTriggerForm"\n      action-buttons="$ctrl.manualTriggerButtons">\n    </pf-modal-overlay>\n  </div>\n\n</div>\n'),e.put("plugins/spring-boot/trace/trace.html",'<div class="spring-boot-trace-main">\n  <div class="spring-boot-trace-flex-container">\n    <div class="spring-boot-trace-fixed-toolbar">\n      <h1>Trace</h1>\n      <pf-toolbar config="$ctrl.toolbarConfig"></pf-toolbar>\n      <div class="blank-slate-pf no-border" ng-if="$ctrl.traces.length === 0">\n        <div class="blank-slate-pf-icon">\n          <span class="pficon pficon pficon-warning-triangle-o"></span>\n        </div>\n        <h1>No Spring Boot Traces</h1>\n        <p>There are no trace details to display for this application.</p>\n        <p>Wait for some trace events to be generated or revise your search filter criteria.</p>\n      </div>\n      <div ng-show="$ctrl.traces.length > 0">\n        <table class="table table-striped spring-boot-trace-header-table">\n          <thead>\n            <tr>\n              <th>Timestamp</th>\n              <th>HTTP Status</th>\n              <th>HTTP Method</th>\n              <th>Path</th>\n              <th>Time Taken</th>\n              <th></th>\n            </tr>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div class="spring-boot-trace-scrollable-table" ng-show="$ctrl.traces.length > 0">\n      <table class="table table-striped">\n        <tbody>\n          <tr ng-repeat="trace in $ctrl.tableItems">\n            <td>{{trace.timestamp | date: $ctrl.dateFormat}}</td>\n            <td ng-switch="trace.httpStatusCode === undefined">\n              <span ng-switch-when="true">Unknown</span>\n              <div ng-switch-default>\n                <span ng-class="$ctrl.getStatusClass(trace)"></span>\n                <span>{{trace.httpStatusCode}}</span>\n              </div>\n            </td>\n            <td>{{trace.method}}</td>\n            <td>{{trace.path}}</td>\n            <td ng-switch="trace.timeTaken === undefined">\n              <span ng-switch-when="true">Unknown</span>\n              <span ng-switch-default>{{trace.timeTaken}} ms</span>\n            </td>\n            <td>\n              <div class="table-view-pf-btn">\n                <button class="btn btn-default" type="button" ng-click="$ctrl.openTraceModal(trace)">Show Trace Detail</button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <script type="text/ng-template" id="traceDetailsModal.html">\n    <div class="modal-header">\n      <button type="button" class="close" aria-label="Close" ng-click="$dismiss()">\n        <span class="pficon pficon-close" aria-hidden="true"></span>\n      </button>\n      <h4 class="modal-title">Trace</h4>\n    </div>\n    <div class="modal-body">\n      <pre>{{trace.info | json}}</pre>\n    </div>\n  <\/script>\n</div>'),e.put("plugins/activemq/html/destination/create.html",'<p>\n  <div class="alert alert-info">\n    <span class="pficon pficon-info"></span>The JMS API does not define a standard\n    address syntax. Although a standard address syntax was considered, it was decided\n    that the differences in address semantics between existing message-oriented\n    middleware (MOM) products were too wide to bridge with a single syntax.\n  </div>\n</p>\n\n<form class="form-horizontal">\n\n  <div class="form-group">\n    <label class="col-sm-2 control-label" for="name-markup">{{$ctrl.destinationType}} name</label>\n\n    <div class="col-sm-10">\n      <input id="name-markup" class="form-control" type="text" maxlength="300"\n             name="destinationName" ng-model="$ctrl.destinationName" placeholder="{{$ctrl.destinationType}} name"/>\n    </div>\n  </div>\n  <div class="form-group">\n    <label class="col-sm-2 control-label">Destination type</label>\n\n    <div class="col-sm-10">\n      <label class="checkbox">\n        <input type="radio" ng-model="$ctrl.destinationType" value="Queue"> Queue\n      </label>\n      <label class="checkbox">\n        <input type="radio" ng-model="$ctrl.destinationType" value="Topic"> Topic\n      </label>\n    </div>\n  </div>\n\n  <div class="form-group">\n    <div class="col-sm-offset-2 col-sm-10">\n      <button type="submit" class="btn btn-primary"\n              ng-click="$ctrl.validateAndCreateDestination($ctrl.destinationName, $ctrl.destinationType)"\n              ng-disabled="!$ctrl.destinationName">Create {{$ctrl.destinationType}}\n      </button>\n    </div>\n  </div>\n\n  <div hawtio-confirm-dialog="$ctrl.createDialog"\n        ok-button-text="Create"\n        cancel-button-text="Cancel"\n        on-ok="$ctrl.createDestination($ctrl.destinationName, $ctrl.destinationType)">\n    <div class="dialog-body">\n      <p>{{$ctrl.destinationType}} name <b>{{$ctrl.destinationName}}</b> contains unrecommended characters: <code>:</code></p>\n      <p>This may cause unexpected problems. Are you really sure to create this {{$ctrl.uncapitalisedDestinationType()}}?</p>\n    </div>\n  </div>\n\n</form>\n'),e.put("plugins/activemq/html/destination/deleteQueue.html",'<p>\n  <div class="alert alert-warning">\n    <span class="pficon pficon-warning-triangle-o"></span>\n    These operations cannot be undone. Please be careful!\n  </div>\n</p>\n\n<h2>Purge queue</h2>\n<p>Purge all the current messages on the queue.</p>\n<button type="submit" class="btn btn-danger" ng-click="$ctrl.purgeDialog = true">\n  Purge queue\n</button>\n\n<hr />\n\n<h2>Delete queue</h2>\n<p>Remove the queue completely.</p>\n<button type="submit" class="btn btn-danger" ng-click="$ctrl.deleteDialog = true">\n  Delete queue\n</button>\n\n<div hawtio-confirm-dialog="$ctrl.deleteDialog"\n     title="Confirm delete queue"\n     ok-button-text="Delete"\n     cancel-button-text="Cancel"\n     on-ok="$ctrl.deleteDestination()">\n  <div class="dialog-body">\n    <p>You are about to delete the <b>{{$ctrl.selectedName()}}</b> queue.</p>\n    <p>This operation cannot be undone so please be careful.</p>\n  </div>\n</div>\n\n<div hawtio-confirm-dialog="$ctrl.purgeDialog"\n     title="Confirm purge queue"\n     ok-button-text="Purge"\n     cancel-button-text="Cancel"\n     on-ok="$ctrl.purgeDestination()">\n  <div class="dialog-body">\n    <p>You are about to purge the <b>{{$ctrl.selectedName()}}</b> queue</p>\n    <p>This operation cannot be undone so please be careful.</p>\n  </div>\n</div>\n'),e.put("plugins/activemq/html/destination/deleteTopic.html",'<p>\n  <div class="alert alert-warning">\n    <span class="pficon pficon-warning-triangle-o"></span>\n    This operation cannot be undone. Please be careful!\n  </div>\n</p>\n\n<h2>Delete topic</h2>\n<p>Remove the topic completely.</p>\n<button type="submit" class="btn btn-danger" ng-click="$ctrl.deleteDialog = true">\n  Delete topic\n</button>\n\n<div hawtio-confirm-dialog="$ctrl.deleteDialog"\n     title="Confirm delete topic"\n     ok-button-text="Delete"\n     cancel-button-text="Cancel"\n     on-ok="$ctrl.deleteDestination()">\n  <div class="dialog-body">\n    <p>You are about to delete the <b>{{$ctrl.selectedName()}}</b> topic.</p>\n    <p>This operation cannot be undone so please be careful.</p>\n  </div>\n</div>\n'),e.put("plugins/activemq/html/tree/content.html",'<div class="tree-nav-sidebar-content">\n  <div id="activemqtree" class="treeview-pf-hover treeview-pf-select"></div>\n</div>\n'),e.put("plugins/activemq/html/tree/header.html",'<div class="tree-nav-sidebar-header">\n  <form role="form" class="search-pf has-button">\n    <div class="form-group has-clear">\n      <div class="search-pf-input-group">\n        <label for="input-search" class="sr-only">Search Tree:</label>\n        <input id="input-search" type="search" class="form-control" placeholder="Search tree:"\n          ng-model="$ctrl.filter">\n        <button type="button" class="clear" aria-hidden="true"\n          ng-hide="$ctrl.filter.length === 0"\n          ng-click="$ctrl.filter = \'\'">\n          <span class="pficon pficon-close"></span>\n        </button>\n      </div>\n    </div>\n    <div class="form-group tree-nav-buttons">\n      <span class="badge" ng-class="{positive: $ctrl.result.length > 0}"\n        ng-show="$ctrl.filter.length > 0">\n        {{$ctrl.result.length}}\n      </span>\n      <i class="fa fa-plus-square-o" title="Expand All" ng-click="$ctrl.expandAll()"></i>\n      <i class="fa fa-minus-square-o" title="Collapse All" ng-click="$ctrl.contractAll()"></i>\n    </div>\n  </form>\n</div>\n'),e.put("plugins/components/editor/html/editor.html",'<div class="editor-autoresize">\n  <textarea name="{{name}}" ng-model="text"></textarea>\n</div>\n'),e.put("plugins/components/forms/html/formGrid.html",'<div>\n\n  <script type="text/ng-template" id="heroUnitTemplate.html">\n    <div class="hero-unit">\n      <h5>No Items Added</h5>\n      <p><a href="" ng-click="addThing()">Add an item</a> to the table</p>\n    </div>\n  <\/script>\n\n  <script type="text/ng-template" id="headerCellTemplate.html">\n    <th>{{label}}</th>\n  <\/script>\n\n  <script type="text/ng-template" id="emptyHeaderCellTemplate.html">\n    <th></th>\n  <\/script>\n\n  <script type="text/ng-template" id="deleteRowTemplate.html">\n    <td ng-click="removeThing({{index}})" class="align-center">\n      <i class="icon-remove red mouse-pointer"></i>\n    </td>\n  <\/script>\n\n  <script type="text/ng-template" id="cellTemplate.html">\n    <td>\n      <editable-property ng-model="{{row}}"\n                         type="{{type}}"\n                         property="{{key}}"></editable-property>\n    </td>\n  <\/script>\n\n  <script type="text/ng-template" id="cellNumberTemplate.html">\n    <td>\n      <editable-property ng-model="{{row}}"\n                         type="{{type}}"\n                         property="{{key}}" min="{{min}}" max="{{max}}"></editable-property>\n    </td>\n  <\/script>\n\n  <script type="text/ng-template" id="rowTemplate.html">\n    <tr></tr>\n  <\/script>\n\n  <div ng-show="configuration.rows.length == 0" class="row-fluid">\n    <div class="span12 nodata">\n    </div>\n  </div>\n  <div ng-hide="configuration.rows.length == 0" class="row-fluid">\n    <div class="span12">\n      <h3 ng-show="configuration.heading">{{getHeading()}}</h3>\n      <table class="table table-striped">\n        <thead>\n        </thead>\n        <tbody>\n        </tbody>\n      </table>\n    </div>\n    <div ng-click="addThing()" class="centered mouse-pointer">\n      <i class="icon-plus green"></i><span ng-show="configuration.rowName"> Add {{_.startCase(configuration.rowName)}}</span>\n    </div>\n  </div>\n</div>\n'),e.put("plugins/components/forms/html/formMapDirective.html",'<div class="control-group">\n  <label class="control-label" for="keyValueList">{{data[name].label || name | humanize}}:</label>\n  <div class="controls">\n    <ul id="keyValueList" class="zebra-list">\n      <li ng-repeat="(key, value) in entity[name]">\n        <strong>Key:</strong>&nbsp;{{key}}&nbsp;<strong>Value:</strong>&nbsp;{{value}}\n        <i class="pull-right icon-remove red mouse-pointer" ng-click="deleteKey(key)"></i>\n      </li>\n      <li>\n        <button class="btn btn-success"  ng-click="showForm = true" ng-hide="showForm"><i class="icon-plus"></i></button>\n        <div class="well" ng-show="showForm">\n          <form class="form-horizontal">\n            <fieldset>\n              <div class="control-group">\n                <label class="control-label" for="newItemKey">Key:</label>\n                <div class="controls">\n                  <input id="newItemKey" type="text" ng-model="newItem.key">\n                </div>\n              </div>\n              <div class="control-group">\n                <label class="control-label" for="newItemKey">Value:</label>\n                <div id="valueInput" class="controls">\n                  <input id="newItemValue" type="text" ng-model="newItem.value">\n                </div>\n              </div>\n              <p>\n              <input type="submit" class="btn btn-success pull-right" ng-disabled="!newItem.key && !newItem.value" ng-click="addItem(newItem)" value="Add">\n              <span class="pull-right">&nbsp;</span>\n              <button class="btn pull-right" ng-click="showForm = false">Cancel</button>\n              </p>\n            </fieldset>\n          </form>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n'),e.put("plugins/components/forms2/html/array.html",'<div class="row">\n  <div class="col-sm-12 col-md-12">\n    <div ng-hide="{{control.noLabel}}" class="row">\n      <div class="col-sm-12 col-md-12">\n        <h4>{{control.label || maybeHumanize(name)}}</h4>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-sm-12 col-md-12">\n        <div class="inline-array"></div>\n      </div>\n    </div>\n  </div>\n</div>\n'),e.put("plugins/components/forms2/html/arrayItemModal.html",'<div class="modal-header">\n  <h3 class="modal-title">{{header}}</h3>\n</div>\n<div class="modal-body">\n  <div ng-show="description" ng-bind-html="description"></div>\n  <div hawtio-form-2="schema" entity="newEntity"></div>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ok()">OK</button>\n  <button class="btn btn-warning" ng-click="cancel()">Cancel</button>\n</div>\n'),e.put("plugins/components/forms2/html/checkbox-horizontal.html",'<div class="form-group">\n  <div class="col-sm-offset-2 col-sm-10">\n    <div class="checkbox">\n      <label>\n        <input ng-disabled="config.mode == 0" type="checkbox" ng-model="{{model}}" name="{{name}}"> {{control.label || maybeHumanize(name)}}\n      </label>\n      <p class="help-block">{{control.description}}</p>\n    </div>\n  </div>\n</div>\n'),e.put("plugins/components/forms2/html/checkbox.html",'<div class="form-group">\n  <div class="checkbox">\n    <label>\n      <input ng-disabled="config.mode == 0" type="checkbox" ng-model="{{model}}" name="{{name}}"> {{control.label || maybeHumanize(name)}}\n    </label>\n    <p class="help-block">{{control.description}}</p>\n  </div>\n</div>\n'),e.put("plugins/components/forms2/html/form-horizontal.html",'<form ng-disabled="config.mode == 0" class="hawtio-form-2 form-horizontal" name="{{name}}">\n  <fieldset>\n    <legend ng-show="config.label || config.description" ng-hide="config.hideLegend">{{config.label || config.description}}</legend>\n  </fieldset>\n</form>\n'),e.put("plugins/components/forms2/html/form-inline.html",'<form class="hawtio-form-2 hawtio-form-2-inline" name="{{name}}">\n  <fieldset>\n    <legend ng-show="config.label || config.description" ng-hide="config.hideLegend">{{config.label || config.description}}</legend>\n  </fieldset>\n</form>\n'),e.put("plugins/components/forms2/html/form-standard.html",'<form class="hawtio-form-2 hawtio-form-2-standard" name="{{name}}">\n  <fieldset>\n    <legend ng-show="config.label || config.description" ng-hide="config.hideLegend">{{config.label || config.description}}</legend>\n  </fieldset>\n</form>\n'),e.put("plugins/components/forms2/html/form-unwrapped.html",'<div class="hawtio-form-2 hawtio-form-2-unwrapped">\n  <h4 ng-show="config.label || config.description" ng-hide="config.hideLegend || config.label == \'false\'">{{config.label || config.description}}</h4>\n\n</div>\n'),e.put("plugins/components/forms2/html/form2Map.html","<div>\n\n</div>\n"),e.put("plugins/components/forms2/html/forms2Array.html",'<div>\n  <script type="text/ng-template" id="header.html">\n    <th>{{control.label || name}}</th>\n  <\/script>\n  <script type="text/ng-template" id="emptyHeader.html">\n    <th></th>\n  <\/script>\n  <script type="text/ng-template" id="newItemHeader.html">\n    <th class="align-right">\n      <button ng-hide="config.mode == 0" class="button button-success" ng-click="createNewRow()">\n        <i class="fa fa-plus green" ></i>\n      </button>\n    </th>\n  <\/script>\n  <script type="text/ng-template" id="arrayRowTemplate.html">\n    <tr></tr>\n  <\/script>\n  <script type="text/ng-template" id="deleteRow.html">\n    <td class="align-right">\n      <button ng-hide="config.mode == 0" class=\'editRow\'><i class="fa fa-pencil yellow"></i></button>\n      <button ng-hide="config.mode == 0" class=\'deleteRow\'><i class="fa fa-minus red"></i></button>\n    </td>\n  <\/script>\n  <script type="text/ng-template" id="table.html">\n    <table class="table table-striped">\n      <thead>\n      </thead>\n      <tbody>\n      </tbody>\n    </table>\n  <\/script>\n</div> \n'),e.put("plugins/components/forms2/html/forms2Directive.html",'<div>\n  <script type="text/ng-template" id="wizardParent.html">\n    <div>\n      <div class="wizardParent" ng-switch="getCurrentPageId()">\n      </div>\n    </div>\n  <\/script>\n\n  <script type="text/ng-template" id="wizardButtons.html">\n    <div class="wizardButtons align-right">\n      <span>{{currentPageIndex + 1}} / {{pageIds.length}}</span>\n      <button class="btn btn-default back" ng-click="back()" ng-hide="atFront()">{{buttons.back}}</button>\n      <button class="btn btn-primary next" ng-click="next()" ng-hide="atBack()">{{buttons.next}}</button>\n      <button class="btn btn-primary finish" ng-click="onFinish()" ng-show="atBack()">{{buttons.finish}}</button>\n    </div>\n  <\/script>\n\n  <script type="text/ng-template" id="wizardPage.html">\n    <div class="wizardPage">\n      <h3></h3>\n      <div class="wizardPageBody">\n      </div>\n    </div>\n  <\/script>\n\n  <script type="text/ng-template" id="tabElement.html">\n    <div class="tabbable hawtio-form-tabs"></div>\n  <\/script>\n\n  <script type="text/ng-template" id="tabPage.html">\n    <div class="tab-pane"></div>\n  <\/script>\n</div>\n'),e.put("plugins/components/forms2/html/forms2Map.html",'<div>\n  <script type="text/ng-template" id="mapItemModal.html">\n    <div class="modal-header">\n      <h3 class="modal-title">{{header}}</h3>\n    </div>\n    <div class="modal-body">\n      <div class="row">\n        <div ng-show="description" ng-bind-html="description"></div>\n      </div>\n      <div class="row">\n        <div class="col-md-6">\n          <div hawtio-form-2="keySchema" entity="newKeyEntity"></div>\n        </div>\n        <div class="col-md-6">\n          <div hawtio-form-2="valueSchema" entity="newValueEntity"></div>\n        </div>\n      </div>\n    </div>\n    <div class="modal-footer">\n      <button class="btn btn-primary" ng-click="ok()">OK</button>\n      <button class="btn btn-warning" ng-click="cancel()">Cancel</button>\n    </div>\n  <\/script>\n  <script type="text/ng-template" id="table.html">\n    <table class="table table-striped">\n      <thead>\n        <tr>\n          <th>\n            Key\n          </th>\n          <th>\n            Value\n          </th>\n          <th class="align-right">\n            <button ng-hide="config.mode == 0" class="button button-success" ng-click="createRow()">\n              <i class="fa fa-plus green" ></i>\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n      </tbody>\n    </table>\n  <\/script>\n  <script type="text/ng-template" id="mapRowTemplate.html">\n    <tr>\n      <td>\n        <div class="inline form-map-key" hawtio-form-2="keySchema" entity="keys[\'{{key}}\']"></div>\n      </td>\n      <td>\n        <div class="inline form-map-value" hawtio-form-2="valueSchema" entity="values[\'{{key}}\']"></div>\n      </td>\n      <td class="align-right">\n        <button ng-hide="config.mode == 0" class="form-map-edit button button-warning" ng-click="editRow(\'{{key}}\')">\n          <i class="fa fa-pencil yellow"></i>\n        </button>\n        <button ng-hide="config.mode == 0" class="form-map-remove button button-danger" ng-click="deleteRow(\'{{key}}\')">\n          <i class="fa fa-remove red"></i>\n        </button>\n      </td>\n    </tr>\n  <\/script>\n\n</div>\n'),e.put("plugins/components/forms2/html/hidden.html",'<div class="form-group" ng-hide="true">\n  <input type="hidden" ng-model="{{model}}" name="{{name}}">\n</div>\n'),e.put("plugins/components/forms2/html/map.html",'<div class="row">\n  <div class="clearfix col-md-12">\n    <div class="row"><h4>{{control.label || maybeHumanize(name)}}</h4></div>\n    <div class="row">\n      <div class="inline-map"></div>\n    </div>\n  </div>\n</div>\n'),e.put("plugins/components/forms2/html/object.html",'<div class="row">\n  <div class="clearfix col-md-12">\n    <div class="inline-object"></div>\n  </div>\n</div>\n'),e.put("plugins/components/forms2/html/optionArray.html","<option>{{value}}</option>\n"),e.put("plugins/components/forms2/html/optionConfigObject.html",'<option value="{{value}}">{{label}}</option>\n'),e.put("plugins/components/forms2/html/optionObject.html",'<option value="{{value}}">{{key}}</option>\n'),e.put("plugins/components/forms2/html/radio-group-member.html",'<label>\n  <input type="radio" name="" value="">\n</label>\n'),e.put("plugins/components/forms2/html/radio-top-level.html",'<div class="radio">\n</div>\n'),e.put("plugins/components/forms2/html/select-horizontal.html",'<div class="form-group">\n  <label class="col-sm-2 control-label">{{control.label || maybeHumanize(name)}}</label>\n  <div class="col-sm-10">\n    <select ng-disabled="config.mode == 0" hawtio-combobox class="form-control" ng-model="{{model}}" name="{{name}}"></select>\n    <p class="help-block">{{control.description}}</p>\n  </div>\n</div>\n'),e.put("plugins/components/forms2/html/select.html",'<div class="form-group">\n  <label class="control-label">{{control.label || maybeHumanize(name)}}</label>\n  <select ng-disabled="config.mode == 0" hawtio-combobox class="form-control" ng-model="{{model}}" name="{{name}}"></select>\n  <p class="help-block">{{control.description}}</p>\n</div>\n'),e.put("plugins/components/forms2/html/standard-horizontal-input.html",'<div class="form-group">\n  <label ng-hide="{{control.noLabel}}" class="col-sm-2 control-label">{{control.label || maybeHumanize(name)}}</label>\n  <div class="col-sm-10">\n    <input ng-disabled="config.mode == 0" type="" class="form-control" placeholder="{{control.placeholder}}" ng-model="{{model}}" name="{{name}}">\n    <p class="help-block">{{control.description}}</p>\n  </div>\n</div>\n'),e.put("plugins/components/forms2/html/standard-input.html",'<div class="form-group">\n  <label ng-hide="{{control.noLabel}}" class="control-label">{{control.label || maybeHumanize(name)}}</label>\n  <input ng-disabled="config.mode == 0" type="" class="form-control" placeholder="{{control.placeholder}}" ng-model="{{model}}" name="{{name}}">\n  <p class="help-block">{{control.description}}</p>\n</div>\n'),e.put("plugins/components/forms2/html/static-horizontal-text.html",'<div class="form-group">\n  <label class="col-sm-2 control-label">{{control.label}}</label>\n  <div class="col-sm-10">\n    <p ng-hide="{{model}}" class="form-control-static">{{control.description}}</p>\n    <p ng-show="{{model}}" class="form-control-static" ng-bind="{{model}}"></p>\n  </div>\n</div>\n'),e.put("plugins/components/forms2/html/static-text.html",'<div class="form-group">\n  <label class="control-label">{{control.label}}</label>\n  <p ng-hide="{{model}}" class="form-control-static">{{control.description}}</p>\n  <p ng-show="{{model}}" class="form-control-static" ng-bind="{{model}}"></p>\n</div>\n'),e.put("plugins/components/ui/html/confirmDialog.html",'<div modal="show">\n  <div class="hawtio-ui-confirm-dialog modal-dialog {{sizeClass}}">\n    <div class="modal-content">    \n      <div class="modal-header">\n        <button type="button" class="close" aria-hidden="true" ng-click="cancel()">\n          <span class="pficon pficon-close"></span>\n        </button>\n        <h4 class="modal-title">{{title}}</h4>\n      </div>\n      <div class="modal-body">\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-default" ng-click="cancel()">\n          {{cancelButtonText}}\n        </button>\n        <button type="submit" class="btn btn-primary" ng-click="submit()" ng-hide="{{showOkButton === \'false\'}}">\n          {{okButtonText}}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n'),e.put("plugins/components/ui/html/developerPage.html",'<div ng-controller="UI.DeveloperPageController">\n\n  <div class="tocify" wiki-href-adjuster>\n    <div hawtio-toc-display\n         get-contents="getContents(filename, cb)">\n      <ul>\n        <li>\n          <a href="plugins/components/ui/html/test/auto-columns.html" chapter-id="auto-columns">auto-columns</a>\n        </li>\n        <li>\n          <a href="plugins/components/ui/html/test/auto-dropdown.html" chapter-id="auto-dropdown">auto-dropdown</a>\n        </li>\n        <li>\n          <a href="plugins/components/ui/html/test/confirm-dialog.html" chapter-id="confirm-dialog">confirm-dialog</a>\n        </li>\n        <li>\n          <a href="plugins/components/ui/html/test/drop-down.html" chapter-id="drop-down">drop-down</a>\n        </li>\n        <li>\n          <a href="plugins/components/ui/html/test/editable-property.html" chapter-id="editableProperty">editable-property</a>\n        </li>\n        <li>\n          <a href="plugins/components/ui/html/test/editor.html" chapter-id="editor">editor</a>\n        </li>\n        <li>\n          <a href="plugins/components/ui/html/test/file-upload.html" chapter-id="file-upload">file-upload</a>\n        </li>\n        <li>\n          <a href="plugins/components/ui/html/test/pager.html" chapter-id="pager">pager</a>\n        </li>\n        <li>\n          <a href="plugins/components/ui/html/test/template-popover.html" chapter-id="template-popover">template-popover</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class="toc-content" id="toc-content"></div>\n</div>\n'),e.put("plugins/components/ui/html/editableProperty.html",'<div ng-mouseenter="showEdit()" ng-mouseleave="hideEdit()" class="ep" ng-dblclick="doEdit()">\n  {{getText()}}&nbsp;&nbsp;<i class="ep-edit fa fa-pencil" title="Click to edit" ng-click="doEdit()" no-click></i>\n</div>\n<div class="ep editing" ng-show="editing" no-click>\n  <form class="form-inline no-bottom-margin" ng-submit="saveEdit()">\n    <fieldset>\n      <span ng-switch="inputType">\n        <span ng-switch-when="number">\n          <input type="number" size="{{text.length}}" ng-style="getInputStyle()" value="{{text}}" max="{{max}}" min="{{min}}">\n        </span>\n        <span ng-switch-when="password">\n          <input type="password" size="{{text.length}}" ng-style="getInputStyle()" value="{{text}}">\n        </span>\n        <span ng-switch-default>\n          <input type="text" size="{{text.length}}" ng-style="getInputStyle()" value="{{text}}">\n        </span>\n      </span>\n      <i class="blue clickable fa fa-check icon1point5x" title="Save changes" ng-click="saveEdit()"></i>\n      <i class="clickable fa fa-remove icon1point5x" title="Discard changes" ng-click="stopEdit()"></i>\n    </fieldset>\n  </form>\n</div>\n'),e.put("plugins/components/ui/html/editor.html",'<div class="editor-autoresize">\n  <textarea name="{{name}}" ng-model="text"></textarea>\n</div>\n'),e.put("plugins/components/ui/html/editorPreferences.html",'<div ng-controller="CodeEditor.PreferencesController">\n  <form class="form-horizontal">\n    <div class="control-group">\n      <label class="control-label" for="theme" title="The default theme to be used by the code editor">Theme</label>\n\n      <div class="controls">\n        <select id="theme" ng-model="preferences.theme">\n          <option value="default">Default</option>\n          <option value="ambiance">Ambiance</option>\n          <option value="blackboard">Blackboard</option>\n          <option value="cobalt">Cobalt</option>\n          <option value="eclipse">Eclipse</option>\n          <option value="monokai">Monokai</option>\n          <option value="neat">Neat</option>\n          <option value="twilight">Twilight</option>\n          <option value="vibrant-ink">Vibrant ink</option>\n        </select>\n      </div>\n    </div>\n  </form>\n\n  <form name="editorTabForm" class="form-horizontal">\n    <div class="control-group">\n      <label class="control-label" for="tabSIze">Tab size</label>\n\n      <div class="controls">\n        <input type="number" id="tabSize" name="tabSize" ng-model="preferences.tabSize" ng-required="ng-required" min="1" max="10"/>\n        <span class="help-block"\n            ng-hide="editorTabForm.tabSize.$valid">Please specify correct size (1-10).</span>\n      </div>\n    </div>\n  </form>\n\n  <div compile="codeMirrorEx"></div>\n\n\x3c!-- please do not change the tabs into spaces in the following script! --\x3e\n<script type="text/ng-template" id="exampleText">\nvar foo = "World!";\n\nvar myObject = {\n\tmessage: "Hello",\n\t\tgetMessage: function() {\n\t\treturn message + " ";\n \t}\n};\n\nwindow.alert(myObject.getMessage() + foo);\n<\/script>\n\n<script type="text/ng-template" id="codeMirrorExTemplate">\n  <div hawtio-editor="exampleText" mode="javascript"></div>\n<\/script>\n</div>\n\n</div>\n'),e.put("plugins/components/ui/html/filter.html",'<div class="inline-block section-filter">\n  <input type="text"\n         class="search-query"\n         ng-class="getClass()"\n         ng-model="ngModel"\n         placeholder="{{placeholder}}">\n  <i class="fa fa-remove clickable"\n     title="Clear Filter"\n     ng-click="ngModel = \'\'"></i>\n</div>\n'),e.put("plugins/components/ui/html/layoutUI.html","<div ng-view></div>\n"),e.put("plugins/components/ui/html/list.html",'<div>\n\n  \x3c!-- begin cell template --\x3e\n  <script type="text/ng-template" id="cellTemplate.html">\n    <div class="ngCellText">\n      {{row.entity}}\n    </div>\n  <\/script>\n  \x3c!-- end cell template --\x3e\n\n  \x3c!-- begin row template --\x3e\n  <script type="text/ng-template" id="rowTemplate.html">\n    <div class="hawtio-list-row">\n      <div ng-show="config.showSelectionCheckbox"\n           class="hawtio-list-row-select">\n        <input type="checkbox" ng-model="row.selected">\n      </div>\n      <div class="hawtio-list-row-contents"></div>\n    </div>\n  <\/script>\n  \x3c!-- end row template --\x3e\n\n  \x3c!-- must have a little margin in the top --\x3e\n  <div class="hawtio-list-root" style="margin-top: 15px"></div>\n\n</div>\n'),e.put("plugins/components/ui/html/multiItemConfirmActionDialog.html",'<div>\n  <form class="no-bottom-margin">\n    <div class="modal-header">\n      <span>{{options.title || \'Are you sure?\'}}</span>\n    </div>\n    <div class="modal-body">\n      <p ng-show=\'options.action\'\n         ng-class=\'options.actionClass\'\n         ng-bind=\'options.action\'></p>\n      <ul>\n        <li ng-repeat="item in options.collection" ng-bind="getName(item)"></li>\n      </ul>\n      <p ng-show="options.custom" \n         ng-class="options.customClass" \n         ng-bind="options.custom"></p>\n    </div>\n    <div class="modal-footer">\n      <button class="btn" \n              ng-class="options.okClass" \n              ng-click="close(true)">{{options.okText || \'Ok\'}}</button>\n      <button class="btn" \n              ng-class="options.cancelClass"\n              ng-click="close(false)">{{options.cancelText || \'Cancel\'}}</button>\n    </div>\n  </form>\n</div>\n'),e.put("plugins/components/ui/html/object.html",'<div>\n  <script type="text/ng-template" id="primitiveValueTemplate.html">\n    <span ng-show="data" object-path="{{path}}">{{data}}</span>\n  <\/script>\n  <script type="text/ng-template" id="arrayValueListTemplate.html">\n    <ul class="zebra-list" ng-show="data" object-path="{{path}}">\n      <li ng-repeat="item in data">\n        <div hawtio-object="item" config="config" path="path" row="row"></div>\n      </li>\n    </ul>\n  <\/script>\n  <script type="text/ng-template" id="arrayValueTableTemplate.html">\n    <table class="table table-striped" object-path="{{path}}">\n      <thead>\n      </thead>\n      <tbody>\n      </tbody>\n    </table>\n  <\/script>\n  <script type="text/ng-template" id="dateAttributeTemplate.html">\n    <dl class="" ng-show="data" object-path="{{path}}">\n      <dt>{{key}}</dt>\n      <dd ng-show="data && data.getTime() > 0">{{data | date:"EEEE, MMMM dd, yyyy \'at\' hh : mm : ss a Z"}}</dd>\n      <dd ng-show="data && data.getTime() <= 0"></dd>\n\n    </dl>\n  <\/script>\n  <script type="text/ng-template" id="dateValueTemplate.html">\n    <span ng-show="data">\n      <span ng-show="data && data.getTime() > 0" object-path="{{path}}">{{data | date:"EEEE, MMMM dd, yyyy \'at\' hh : mm : ss a Z"}}</span>\n      <span ng-show="data && data.getTime() <= 0" object-path="{{path}}"></span>\n    </span>\n  <\/script>\n  <script type="text/ng-template" id="primitiveAttributeTemplate.html">\n    <dl class="" ng-show="data" object-path="{{path}}">\n      <dt>{{key}}</dt>\n      <dd>{{data}}</dd>\n    </dl>\n  <\/script>\n  <script type="text/ng-template" id="objectAttributeTemplate.html">\n    <dl class="" ng-show="data" object-path="{{path}}">\n      <dt>{{key}}</dt>\n      <dd>\n        <div hawtio-object="data" config="config" path="path" row="row"></div>\n      </dd>\n    </dl>\n  <\/script>\n  <script type="text/ng-template" id="arrayAttributeListTemplate.html">\n    <dl class="" ng-show="data" object-path="{{path}}">\n      <dt>{{key}}</dt>\n      <dd>\n        <ul class="zebra-list">\n          <li ng-repeat="item in data" ng-init="path = path + \'/\' + $index">\n            <div hawtio-object="item" config="config" path="path" row="row"></div>\n          </li>\n        </ul>\n      </dd>\n    </dl>\n  <\/script>\n  <script type="text/ng-template" id="arrayAttributeTableTemplate.html">\n    <dl class="" ng-show="data" object-path="{{path}}">\n      <dt>{{key}}</dt>\n      <dd>\n        <table class="table table-striped">\n          <thead>\n          </thead>\n          <tbody>\n          </tbody>\n        </table>\n      </dd>\n    </dl>\n  <\/script>\n  <script type="text/ng-template" id="headerTemplate.html">\n    <th object-path="{{path}}">{{key}}</th>\n  <\/script>\n  <script type="text/ng-template" id="rowTemplate.html">\n    <tr object-path="{{path}}"></tr>\n  <\/script>\n  <script type="text/ng-template" id="cellTemplate.html">\n    <td object-path="{{path}}"></td>\n  <\/script>\n</div>\n'),e.put("plugins/components/ui/html/pane.html",'<div class="pane">\n  <div class="pane-wrapper">\n    <div class="pane-header-wrapper">\n    </div>\n    <div class="pane-viewport">\n      <div class="pane-content">\n      </div>\n    </div>\n    <div class="pane-bar"\n         ng-mousedown="startMoving($event)"\n         ng-click="toggle()"></div>\n  </div>\n</div>\n'),e.put("plugins/components/ui/html/tablePager.html",'<ul class="pagination">\n  <li ng-class="{disabled: isEmptyOrFirst()}">\n    <a href="#" ng-disabled="isEmptyOrFirst()" ng-click="first()">\n      <span class="i fa fa-angle-double-left"></span>\n    </a>\n  </li>\n  <li ng-class="{disabled: isEmptyOrFirst()}">\n    <a href="#" ng-disabled="isEmptyOrFirst()" ng-click="previous()">\n      <span class="i fa fa-angle-left"></span>\n    </a>\n  </li>\n  <li class="active">\n    <span>{{rowIndex() + 1}} / {{tableLength()}}</span>\n  </li>\n  <li ng-class="{disabled: isEmptyOrLast()}">\n    <a href="#" ng-disabled="isEmptyOrLast()" ng-click="next()">\n      <span class="i fa fa-angle-right"></span>\n    </a>\n  </li>\n  <li ng-class="{disabled: isEmptyOrLast()}">\n    <a href="#" ng-disabled="isEmptyOrLast()" ng-click="last()">\n      <span class="i fa fa-angle-double-right"></span>\n    </a>\n  </li>\n</ul>\n'),e.put("plugins/components/ui/html/toc.html",'<div>\n  <div ng-repeat="item in myToc">\n    <div id="{{item[\'href\']}}Target" ng-bind-html="item.text">\n    </div>\n  </div>\n</div>\n'),e.put("plugins/components/ui-bootstrap/html/message.html",'<div class="modal-header">\n\t<h3>{{ title }}</h3>\n</div>\n<div class="modal-body">\n\t<p>{{ message }}</p>\n</div>\n<div class="modal-footer">\n\t<button ng-repeat="btn in buttons" ng-click="close(btn.result)" class="btn" ng-class="btn.cssClass">{{ btn.label }}</button>\n</div>\n'),e.put("plugins/camel/html/tree/content.html",'<div class="tree-nav-sidebar-content">\n  <div id="cameltree" class="treeview-pf-hover treeview-pf-select"></div>\n</div>\n'),e.put("plugins/camel/html/tree/header.html",'<div class="tree-nav-sidebar-header">\n  <form role="form" class="search-pf has-button">\n    <div class="form-group has-clear">\n      <div class="search-pf-input-group">\n        <label for="input-search" class="sr-only">Search Tree:</label>\n        <input id="input-search" type="search" class="form-control" placeholder="Search tree:"\n          ng-model="$ctrl.filter">\n        <button type="button" class="clear" aria-hidden="true"\n          ng-hide="$ctrl.filter.length === 0"\n          ng-click="$ctrl.filter = \'\'">\n          <span class="pficon pficon-close"></span>\n        </button>\n      </div>\n    </div>\n    <div class="form-group tree-nav-buttons">\n      <span class="badge" ng-class="{positive: $ctrl.result.length > 0}"\n        ng-show="$ctrl.filter.length > 0">\n        {{$ctrl.result.length}}\n      </span>\n      <i class="fa fa-plus-square-o" title="Expand All" ng-click="$ctrl.expandAll()"></i>\n      <i class="fa fa-minus-square-o" title="Collapse All" ng-click="$ctrl.contractAll()"></i>\n    </div>\n  </form>\n</div>\n'),e.put("plugins/jmx/html/attributes/attributes.html",'<div class="table-view" ng-controller="Jmx.AttributesController">\n  <h2>Attributes</h2>\n  <div ng-if="gridData.length > 0">\n    <table class="table table-striped table-bordered jmx-attributes-table"\n           ng-class="{\'ht-table-extra-columns\': hasExtraColumns, \'table-hover mouse-pointer\': columnDefs.length <= 2}">\n      <thead>\n        <tr>\n          <th ng-repeat="columnDef in columnDefs track by columnDef.displayName">\n            {{ columnDef.displayName }}\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat="item in gridData track by $index" ng-click="onClick(item)">\n          <td ng-repeat="columnDef in columnDefs track by columnDef.displayName" title="{{item[columnDef.field]}}">\n            <i ng-class="folderIconClass(item)"></i>\n            {{ item[columnDef.field] }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<script type="text/ng-template" id="attributeModal.html">\n  <div class="modal-header">\n    <button type="button" class="close" aria-label="Close" ng-click="$dismiss()">\n      <span class="pficon pficon-close" aria-hidden="true"></span>\n    </button>\n    <h4 class="modal-title">Attribute: {{entity.key}}</h4>\n  </div>\n  <div class="modal-body">\n    <div simple-form ng-hide="!entity.rw" name="attributeEditor" mode="edit" entity=\'entity\' data=\'attributeSchemaEdit\'></div>\n    <div simple-form ng-hide="entity.rw" name="attributeViewer" mode="view" entity=\'entity\' data=\'attributeSchemaView\'></div>\n  </div>\n  <div class="modal-footer">\n    <button type="button" class="btn btn-default" ng-click="$dismiss()">Close</button>\n    <button type="button" class="btn btn-primary" ng-show="entity.rw" ng-click="$close()">Update</button>\n  </div>\n<\/script>\n'),e.put("plugins/jmx/html/operations/operation-form.html",'<p ng-hide="$ctrl.operation.args.length">\n  This JMX operation requires no arguments. Click the \'Execute\' button to invoke the operation.\n</p>\n<p ng-show="$ctrl.operation.args.length">\n  This JMX operation requires some parameters. Fill in the fields below and click the \'Execute\' button\n  to invoke the operation.\n</p>\n\n<form class="form-horizontal" ng-submit="$ctrl.execute()">\n  <div class="form-group" ng-repeat="formField in $ctrl.formFields">\n    <label class="col-sm-2 control-label" for="{{formField.label}}">{{formField.label}}</label>\n    <div class="col-sm-10">\n      <input type="{{formField.type}}" id="{{formField.label}}" ng-class="{\'form-control\': formField.type !== \'checkbox\'}"\n        ng-model="formField.value" ng-disabled="!$ctrl.operation.canInvoke">\n      <span class="help-block">{{formField.helpText}}</span>\n    </div>\n  </div>\n  <div class="form-group">\n    <div ng-class="{\'col-sm-offset-2 col-sm-10\': $ctrl.operation.args.length, \'col-sm-12\': !$ctrl.operation.args.length}">\n      <button type="submit" class="btn btn-primary" ng-disabled="!$ctrl.operation.canInvoke || $ctrl.isExecuting">Execute</button>\n    </div>\n  </div>\n</form>\n\n<form ng-show="$ctrl.operationResult">\n  <div class="form-group">\n    <label>Result</label>\n    <div class="hawtio-clipboard-container">\n      <button hawtio-clipboard="#operation-result-{{$id}}" class="btn btn-default btn-lg">\n        <i class="fa fa-clipboard" aria-hidden="true"></i>\n      </button>\n      <pre ng-if="$ctrl.isResultHtml()" ng-class="{\'jmx-operation-error\': $ctrl.operationFailed}" ng-bind-html="$ctrl.operationResult"></pre>\n      <pre ng-if="!$ctrl.isResultHtml()" ng-class="{\'jmx-operation-error\': $ctrl.operationFailed}">{{$ctrl.operationResult}}</pre>\n    </div>\n    <textarea id="operation-result-{{$id}}" class="hawtio-clipboard-hidden-target">{{$ctrl.operationResult}}</textarea>\n  </div>\n</form>\n'),e.put("plugins/jmx/html/operations/operations.html",'<h2>Operations</h2>\n<p ng-if="$ctrl.operations.length === 0">\n  This MBean has no JMX operations.\n</p>\n<div ng-if="$ctrl.operations.length > 0">\n  <p>\n    This MBean supports the following JMX operations. Expand an item in the list to invoke that operation.\n  </p>\n  <pf-list-view class="jmx-operations-list-view" items="$ctrl.operations" config="$ctrl.config"\n    menu-actions="$ctrl.menuActions">\n    <div class="list-view-pf-stacked">\n      <div class="list-group-item-heading">\n        <span class="pficon pficon-locked" ng-if="!item.canInvoke"></span>\n        {{item.readableName}}\n      </div>\n      <div class="list-group-item-text">\n        {{item.description}}\n      </div>\n    </div>\n    <list-expanded-content>\n      <operation-form operation="$parent.item"></operation-form>\n    </list-expanded-content>\n  </pf-list-view>\n</div>\n'),e.put("plugins/jmx/html/tree/content.html",'<div class="tree-nav-sidebar-content">\n  <div id="jmxtree" class="treeview-pf-hover treeview-pf-select"></div>\n</div>\n'),e.put("plugins/jmx/html/tree/header.html",'<div class="tree-nav-sidebar-header">\n  <form role="form" class="search-pf has-button">\n    <div class="form-group has-clear">\n      <div class="search-pf-input-group">\n        <label for="input-search" class="sr-only">Search Tree:</label>\n        <input id="input-search" type="search" class="form-control" placeholder="Search tree:"\n          ng-model="$ctrl.filter">\n        <button type="button" class="clear" aria-hidden="true"\n          ng-hide="$ctrl.filter.length === 0"\n          ng-click="$ctrl.filter = \'\'">\n          <span class="pficon pficon-close"></span>\n        </button>\n      </div>\n    </div>\n    <div class="form-group tree-nav-buttons">\n      <span class="badge" ng-class="{positive: $ctrl.result.length > 0}"\n        ng-show="$ctrl.filter.length > 0">\n        {{$ctrl.result.length}}\n      </span>\n      <i class="fa fa-plus-square-o" title="Expand All" ng-click="$ctrl.expandAll()"></i>\n      <i class="fa fa-minus-square-o" title="Collapse All" ng-click="$ctrl.contractAll()"></i>\n    </div>\n  </form>\n</div>\n'),e.put("plugins/activemq/doc/help.md","### ActiveMQ\n\nClick [ActiveMQ](#/jmx/attributes?tab=activmemq) in the top navigation bar to see the ActiveMQ specific plugin. (The ActiveMQ tab won't appear if there is no broker in this JVM).  The ActiveMQ plugin works very much the same as the JMX plugin however with a focus on interacting with an ActiveMQ broker.\n\nThe tree view on the left-hand side shows the top level JMX tree of each broker instance running in the JVM.  Expanding the tree will show the various MBeans registered by ActiveMQ that you can inspect via the **Attributes** tab.\n\nYou can then click on the **Queue** node to see the queues and **Topic** node to see the topics. From either of these nodes you should see **Create Queue** or **Create Topic** tabs to be able to create new destinations.\n\nOnce you have selected a destination you should be able to **Send** to it, **Browse** a queue or view the  **Attributes** or **Charts**\n\nYou can also see a graphical view of all producers, destinations and consumers for all queues (or if you select a Topic folder then topics) using the **Diagram** tab. Selecting a single queue or topic shows just all the producers and consumers on that destination. This diagram makes it easy to spot if producers are sending messages when there are no consumers, or that consumers are on the wrong destination etc.\n"),e.put("plugins/camel/doc/help.md","### Camel\n\nClick [Camel](jmx/attributes?main-tab=camel) in the top navigation bar to view all the running Camel Contexts in the current JVM. (The selection will not appear on the navigation bar if there is no Camel running).\n\nThe Camel plugin allows you to view all the running Camel applications in the current JVM.\nYou can among others see the following details:\n\n* Lists of all running Camel applications\n* Detailed information of each Camel Context such as Camel version number, runtime statics\n* Lists of all routes in each Camel applications and their runtime statistics\n* Manage the lifecycle of all Camel applications and their routes, so you can restart / stop / pause / resume, etc.\n* Graphical representation of the running routes along with real time metrics\n* Live tracing and debugging of running routes\n* Profile the running routes with real time runtime statics; detailed specified per processor\n* Browsing and sending messages to Camel endpoint\n"),e.put("plugins/diagnostics/doc/help.md","## Diagnostics\n\nThe Diagnostics plugin provides diagnostic information about the JVM via the JVM DiagnosticCommand and HotspotDiangostic interfaces. The functionality is similar to the Diagnostic Commands view in Java Mission Control (jmc) or the command line tool jcmd. The plugin will provide corresponding jcmd commands in some scenarios.\n\n### Flight recorder\n\nThe Java Flight Recorder can be used to record diagnostics from a running Java process.  \n\n#### Unlock\n\nCommercial features must be enabled in order to use the flight recorder. The padlock will be locked and no operations are available if commercial options are not enabled. Click the padlock to unlock and enable flight recordings. Note: Running commercial options on a production system requires a valid license.\n\n#### Start\n\nStarts a recording. \n\n#### Dump\n\nDumps the contents of the current recording to disk. The file path will be listed in a table below.\n\n#### Stop\n\nStops the current recording.\n\n#### Settings\n\nHide/show the options pane.\n\n### Class Histogram\n\nClass histogram retrieves the number of instances of loaded classes and the amount of bytes they take up. \nIf the operation is repeated it will also show the difference since last run.\n\n### JVM flags\n\nThis table shows the JVM diagnostic flag settings. Your are also able to modify the settings in a running JVM.\n"),e.put("plugins/jvm/doc/help.md",'## Connect\n\nThe Connect tab allows you to connect to local and remote Jolokia instances so you can examine JVMs.\n\nThe "Remote" sub-tab is used to manually add connection details for a Jolokia instance.  You can store connection details and quickly recall the details of a connection and connect.\n\nThe use proxy option should often be enabled, as Hawtio is running in your browser; usually due to CORS; you cannot open a different host or port from your browser (due to browse security restrictions); so we have to use a proxy servlet inside the Hawtio web app to proxy all requests for a different jolokia server - so we can communicate with a different jolokia agent.\n\nThe "Local" sub-tab lists local JVMs running on your machine and allows you to install the Jolokia JVM agent into a running JVM and connect to it. For this to actually work you need to have your JDK\'s "tools.jar" in the classpath, along with Jolokia\'s JVM agent jar.\n\nThe "Discover" sub-tab lists all JVMs which Jolokia could discover in the network, using its built-in discovery.\n'),e.put("plugins/jmx/doc/help.md","## JMX\n\nThe JMX plugin gives a raw view of the underlying JMX metric data, allowing access to the entire JMX domain tree of MBeans.\n"),e.put("plugins/karaf/doc/help.md","## Karaf\n\nThis plugin supports the [Apache Karaf](http://karaf.apache.org/) container."),e.put("plugins/logs/doc/help.md",'## Logs\n\nWhen we run middleware we spend an awful lot of time looking at and searching logs. With Hawtio we show nicely coloured logs that auto scroll, can be filtered and sorted ascending or descending. Go to the Preferences page to customize the behavior the way you want.\n\n### How to enable Hawtio logs\n\nHawtio uses an MBean usually called LogQuery which implements the [LogQuerySupportMBean](https://github.com/hawtio/hawtio/blob/master/hawtio-log/src/main/java/io/hawt/log/support/LogQuerySupportMBean.java) interface from either the [hawtio-log-osgi](https://github.com/hawtio/hawtio/tree/master/hawtio-log-osgi) or [hawtio-log](https://github.com/hawtio/hawtio/tree/master/hawtio-log) bundles depending on if you are working inside or outside of OSGi respectively.\n\nIf you are using Apache Karaf, just add the hawtio-log-osgi bundle. If you are not using OSGi, then you just need to ensure you have hawtio-log in your WAR when you deploy Hawtio.\n\nYou also need to ensure that the LogQuery bean is instantiated in whatever dependency injection framework you choose.\n\nFor example, this is how we initialise LogQuery using OSGi blueprint:\n\n```html\n<bean id="logFacade" class="io.hawt.log.log4j.Log4jLogQuery" init-method="start" destroy-method="stop" scope="singleton">\n  <property name="size" value="${hawtio.log.buffer.size}"/>\n</bean>\n```\n\nAnd this is how we initialise LogQuery using Spring XML:\n\n```html\n<bean id="logQuery" class="io.fabric8.insight.log.log4j.Log4jLogQuery" lazy-init="false" scope="singleton" init-method="start" destroy-method="stop"/>\n```\n'),e.put("plugins/osgi/doc/help.md","## OSGi\n\nThis plugin supports the various OSGi standards for working with bundles, Config Admin, services, packages, etc."),e.put("plugins/quartz/doc/help.md","### Quartz\n\nThe Quartz plugin offers functionality for viewing and managing [Quartz](http://www.quartz-scheduler.org/) schedulers.\n\n#### Scheduler\n\nHere you can see the scheduler its state and statistics. You can also pause and resume a scheduler.\n\n#### Jobs\n\nJobs lists and allows you to see information about job definitions.\n\n#### Triggers\n\nHere you see the existing triggers in the selected scheduler and their state, including previous and next fire times. Individual triggers can be paused and resumed.\nYou can also edit some properties of a scheduler or make it fire instantly regardless of the scheduler.\n"),e.put("plugins/runtime/doc/help.md","## Runtime\n\nThe Runtime plugin displays information about the JVM runtime.\n\n### System Properties\n\nDisplays a filterable and sortable list of system properties.\n\n### Metrics\n\nDisplays runtime metrics from the JVM, such as memory, CPU, garbage collection and more.\n\n### Threads\n\nInspects the threads running in the JVM.\n"),e.put("plugins/spring-boot/doc/help.md","## Spring Boot\n\nThe Spring Boot plugin provides the capability interact with [acutator](https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html) endpoints exposed by an application.\n\n### Health\n\nDisplays the current health status of the application together with details returned from any Spring Boot health checks.\n\n### Loggers\n\nLists all of the available loggers in the application. You can modify the level of a logger and the changes will take effect immediately.\n\n### Trace\n\nLists any HTTP traces for your application and lets you view information about the request / response such as headers, time taken etc.\n"),e.put("plugins/components/datatable/doc/developer.md",'### Datatable\n\nThis plugin provides a programming API similar to [ng-grid](http://angular-ui.github.com/ng-grid/) for writing table/grids in angularjs but uses [jQuery DataTables](http://datatables.net/) as the underlying implementation.\n\nFor example if you are using ng-grid in some HTML:\n\n    <div class="gridStyle" ng-grid="gridOptions"></div>\n\nYou can switch to jQuery DataTables using:\n\n    <div class="gridStyle" hawtio-datatable="gridOptions"></div>\n\nIt supports most things we use in ng-grid like cellTemplate / cellFilter / width etc (though width\'s with values starting with "*" are ignored). We also support specifying external search text field & keeping track of selected items etc. To see it in action try the [log plugin](http://hawt.io/plugins/logs/) or check its [HTML](https://github.com/hawtio/hawtio/blob/master/hawtio-web/src/main/webapp/app/log/html/logs.html#L47) or [column definitions](https://github.com/hawtio/hawtio/blob/master/hawtio-web/src/main/webapp/app/log/js/logs.ts#L64)\n\n### Simple Table\n\nIn addition, for cases where you don\'t want a fixed sized table but want a simple HTML table populated with the same JSON model as ng-grid or hawtio-datatable there is the simple table:\n\n    <table class="table table-striped" hawtio-simple-table="mygrid"></table>\n\nThis lets you create a regular table element with whatever metadata you like and the &lt;thead&gt; and &lt;tbody&gt; will be generated from the column definitions to render the table dynamically; using the same kind of JSON configuration.\n\nThis means you can switch between ng-grid, hawtio-datatable and hawtio-simple-table based on your requirements and tradeoffs (layout versus performance versus dynamic, user configurable views etc).\n\n#### Keep selection on data change\n\nThe simple table uses a function evaluated as a primary key for the selected row(s). This ensures that the rows can be kept selected, when the underlying data changes due live updated.\nWhen the data is changed, then it is often easier for a plugin to just create the data from scratch, instead of updating existing data. This allows developers to use the same logic\nin the plugin for the initial data load, as well for subsequent data updates.\n\nFor an example see the [quartz](https://github.com/hawtio/hawtio/tree/master/hawtio-web/src/main/webapp/app/quartz) plugin, using the function as shown below:\n\n    primaryKeyFn: (entity, idx) => { return entity.group + "/" + entity.name }\n\n'),e.put("plugins/components/forms/doc/developer.md",'### Forms\n\nThis plugin provides an easy way, given a [JSON Schema](http://json-schema.org/) model of generating a form with 2 way binding to some JSON data.\n\nFor an example of it in action, see the [test.html](https://github.com/hawtio/hawtio/blob/master/hawtio-web/src/main/webapp/app/forms/html/test.html) or run it via [http://localhost:8282/hawtio/#/forms/test](http://localhost:8282/hawtio/#/forms/test).\n\n## Customizing the UI with tabs\n\nThe easiest way to customise the generated form is to specify which order you want the fields to appear; or to move different fields onto different tabs using the **tabs** object on a json schema type.\ne.g.\n\n        tabs: {\n          \'Tab One\': [\'key\', \'value\'],\n          \'Tab Two\': [\'*\'],\n          \'Tab Three\': [\'booleanArg\'],\n\t\t\t\t\t\'Tab Four\': [\'foo\\\\..*\']\n        }\n\nYou can use "*" to refer to all the other properties not explicitly configured.\n\nIn addition you can use regular expressions to bind properties to a particular tab (e.g. so we match foo.* nested properties to Tab Four above). \n\n## Hiding fields\n\nYou can add a **hidden** flag on a property in a JSON schema to hide it from the auto-generated forms. Or you can set its type to be **hidden**.\n\ne.g.\n\n    properties: {\n      foo: {\n        type: "string",\n        label: "My Foo Thingy"\n     },\n     bar: {\n        type: "string",\n        hidden: true\n     }\n   }\n\nin the above, the _bar_ property will be hidden from the generated form\n\n## Customizing the labels and tooltips\n\nIf you wish to specify a custom label for a property (as by default it will just humanize the id of the property), you can just specify the \'label\' property inside the JSON Schema as follows:\n\n\n    properties: {\n      foo: {\n        type: "string",\n        label: "My Foo Thingy",\n        tooltip: "My tool tip thingy"\n     }\n   }\n\nThe **label** and **tooltip** properties are not part of JSON Schema; but an extension like the **tabs** property above.\n\n### Disabling the \'humanize\' of default labels\n\nIf your schema doesn\'t have actual labels the default behaviour is to take the property keys and to _humanize_ them; to turn camelCaseWords into "Camel case words" and so forth.\n\nHowever if you wish to preserve exactly the keys/ids of the model on the form, you can specify the **disableHumanizeLabel** flag on the schema...\n\n        schema: {\n          disableHumanizeLabel: true\n          properties: {\n            foo: {\n              type: "string",\n            }\n          }\n        }\n\n## Customising the element or attributes of the control\n\nThere are various extra directives you can add to &lt;input&gt; controls like [ng-hide](http://docs.angularjs.org/api/ng.directive:ngHide), [typeahead](http://angular-ui.github.io/bootstrap/#/typeahead) and so forth which you can do using a nested **input-attributes** object.\n\n    properties: {\n      foo: {\n        type: "string",\n\n        \'input-attributes\': {\n          typeahead: "title for title in myQuery($viewValue) | filter:$viewValue"\n        }\n     }\n   }\n\nThe above would use the typehead directive to present a pick list of possible values; passing the current text field value so we can more efficiently filter results back from any remote method invocation.\n\nTo define a custom [select widget](http://docs.angularjs.org/api/ng.directive:select) you can use the **input-element** value to specify a different element name to \'input\' such as \'select\':\n\n    properties: {\n      foo: {\n        type: "string",\n\n        \'input-element\': "select"\n        \'input-attributes\': {\n          \'ng-options\': "c.name for c in colors"\n        }\n     }\n   }\n\nThe above would generate HTML like this...\n\n```\n     <select ng-options="c.name for c in colors" ng-model="..." title="..."></select>\n```\n\n### Autofocus on a field\n\nYou can pass in the [autofocus attribute](http://davidwalsh.name/autofocus) on one of the fields so the browse will auto-focus on one field on startup via\n\n```\n# lets customise an existing schema\nCore.pathSet(schema.properties, [\'myField\', \'input-attributes\', \'autofocus\'], \'true\');\n```\n\nor explicitly via\n\n    properties: {\n      foo: {\n        type: "string",\n        \'input-attributes\': {\n          autofocus: "true"\n        }\n     }\n   }\n\n\n### Showing or hiding controls dynamically\n\nUse the **control-group-attributes** or **control-attributes** object to add ng-hide / ng-show expressions to controls to dynamically show/hide them based on the entity\'s values. e.g. to conditionally hide the entire control-group div with label and control use this:\n\n    properties: {\n      foo: {\n        type: "string",\n\n        \'control-group-attributes\': {\n          \'ng-hide\': "entity.bar == \'xyz\'"\n        }\n     }\n   }\n\n### Customising label attributes\n\nUse the **label-attributes** object to add custom attributes for labels such as for the css class\n\n    properties: {\n      foo: {\n        type: "string",\n\n        \'label-attributes\': {\n          \'class\': \'control-label\'\n        }\n     }\n   }\n\n### Ignoring prefix of deeply nested properties\n\n\nIf you use nested properties, the labels may include an unnecessary prefix if you use sub-tabs to show related nested properties.\n\nTo avoid this add a flag called **ignorePrefixInLabel** to the type which contains the **properties** you wish to ignore the prefixes of.\n\ne.g.\n\n    var myType = {\n      "type" : "object",\n      "properties" : {\n        "foo" : {\n          "properties" : {\n            "value" : {\n              "type" : "string"\n            }\n          }\n        },\n        "bar" : {\n         ...\n        }\n      },\n      ignorePrefixInLabel: true\n    }\n\nIn the above the label for **foo.value** would just show _value_ rather than _foo value_ as the label.\n\n## Using custom controls\n\nTo use a custom control use the **formTemplate** entry on a property to define the AngularJS partial to be used to render the form control. This lets you use any AngularJS directive or widget.\n\nFor example if you search for **formTemplate** in the [code generated Camel json schema file](https://github.com/hawtio/hawtio/blob/master/hawtio-web/src/main/webapp/lib/camelModel.js#L120) you will see how the **description** property uses a _textarea_\n\n## Live example\n<div ng-include="\'app/forms/html/test.html\'"></div>\n'),e.put("plugins/components/ui/doc/developerPage1.md","### UI\n\nThe **UI** plugin provides a number of [AngularJS](http://angularjs.org/) directives for creating a number of UI widgets.  The following examples can be edited and are re-compiled on the fly.\n\nFor details on form widgets take a look at the [Form documentation](index.html#/help/forms/developer)\n\n## General UI widgets\n<div ng-include=\"'app/ui/html/test1.html'\"></div>\n\n\n\n"),e.put("plugins/components/ui/doc/developerPage2.md","### UI\n\nThe **UI** plugin provides a number of [AngularJS](http://angularjs.org/) directives for creating a number of UI widgets.  The following examples can be edited and are re-compiled on the fly.\n\nFor details on form widgets take a look at the [Form documentation](index.html#/help/forms/developer)\n\n## General UI widgets (Page 2)\n<div ng-include=\"'app/ui/html/test2.html'\"></div>\n\n\n\n")}]),hawtioPluginLoader.addModule("hawtio-integration-templates"),function(n){var a="login",e=function(){function e(e,t,n,i,r){if(this.configManager=e,this.$http=t,this.$window=n,this.localStorage=i,this.documentBase=r,this.branding={appName:"",appLogoUrl:""},this.login={},this.entity={username:"",password:""},this.wrongPassword=!1,this.rememberMe=!1,a in i){var o=angular.fromJson(i[a]);o.username&&(this.entity.username=o.username,this.rememberMe=!0)}}return e.$inject=["configManager","$http","$window","localStorage","documentBase"],e.prototype.$onInit=function(){this.branding=this.configManager.branding,this.login=this.configManager.login},e.prototype.doLogin=function(){var t=this;""!==this.entity.username.trim()&&this.$http.post("auth/login",this.entity).then(function(e){n.log.debug("Server login success:",e.data),t.rememberMe?t.localStorage[a]=angular.toJson({username:t.entity.username}):delete t.localStorage[a],t.$window.location.href=t.documentBase},function(e){n.log.error("Failed to log in",e),t.wrongPassword=!0})},e}();n.LoginController=e,n.loginComponent={controller:e,templateUrl:"app/src/login/login.component.html"}}(Login||(Login={})),function(o){var a="keycloak/client-config";hawtioPluginLoader.registerPreBootstrapTask({name:"KeycloakLoginBootstrap",task:function(e){o.log.debug("Executing keycloak login bootstrap task"),function(r){$.ajax("keycloak/enabled",{type:"GET",success:function(e,t,n){o.log.debug("Keycloak enabled:",e);var i=!0===e||"true"===e;i?function(i){$.ajax(a,{type:"GET",success:function(e,t,n){o.log.debug("Loaded keycloak/client-config:",e),HawtioKeycloak.config=e,i()},error:function(e,t,n){o.log.error("Failed to retrieve keycloak/client-config:",n),i()}})}(r):r()},error:function(e,t,n){o.log.error("Failed to retrieve keycloak/enabled:",n),r()}})}(e)}},!0)}(Login||(Login={})),function(c){e.$inject=["authService","keycloakService","postLogoutTasks","$window","HawtioExtension","$compile","$rootScope"];var t="user",d="auth/logout";function e(i,e,r,o,a,s,l){e.enabled?u(i,a,s):$.ajax(t,{type:"GET",success:function(e,t,n){c.log.debug("Logged-in user:",e),i.login(e,null),i.isDefaultUser()||(function(e,t){c.log.debug("Register 'DefaultLogout' to postLogoutTasks"),e.addTask("DefaultLogout",function(){c.log.debug("Log out, redirecting to:",d),t.location.href=d})}(r,o),u(i,a,s),Core.$apply(l))},error:function(e,t,n){c.log.debug("Failed to get logged-in user from server",n)}})}function u(t,e,n){e.add("hawtio-logout",function(e){c.log.debug("Adding Logout item to menu"),e.authService=t;return n('<li><a class="pf-c-dropdown__menu-item" href="#" ng-focus="authService.logout()">Logout ({{authService.username}})</a></li>')(e)})}c.init=e}(Login||(Login={})),function(e){e.loginModule=angular.module("hawtio-login",[]).component("hawtioLogin",e.loginComponent).run(e.init).name,e.log=Logger.get(e.loginModule)}(Login||(Login={})),function(e){n.$inject=["locationChangeStartTasks","$http"],i.$inject=["aboutService","jolokiaService"];var t="hawtio-console-assembly",r=Logger.get(t);function n(e,i){e.addTask("RefreshUserSession",function(e,t,n){i({method:"post",url:"refresh"}).then(function(e){r.debug("Updated session. Response:",e)}).catch(function(e){r.debug("Failed to update session expiry. Response:",e)})})}function i(t,e){e.getAttribute("hawtio:type=About","HawtioVersion").then(function(e){return t.addProductInfo("Hawtio",e)})}angular.module(t,[Login.loginModule]).run(n).run(i),hawtioPluginLoader.addUrl("plugin").addModule(t)}(ConsoleAssembly||(ConsoleAssembly={})),angular.module("hawtio-console-assembly-templates",[]).run(["$templateCache",function(e){e.put("plugins/help/doc/CHANGES.md",'## Change Log\n\n#### 2.15.0 (To be released)\n\n#### 2.14.2\n\n* Upgrade dependencies\n\n#### 2.14.1\n\n* Bug fix\n\n#### 2.14.0\n\n* Enhancements for ActiveMQ Artemis console\n* Upgrade Hawtio components\n\n#### 2.13.6\n\n* Upgrade to Jolokia 1.17.0\n* Update dependencies\n\n#### 2.13.5\n\n* Upgrade Hawtio components\n* Bug fixes\n\n#### 2.13.4\n\n* Upgrade to Jackson 2.12.3\n\n#### 2.13.3\n\n* Upgrade to commons-io 2.8.0\n\n#### 2.13.2\n\n* Bug fixes\n\n#### 2.13.1\n\n* Bug fixes\n\n#### 2.13.0\n\n* Improve JFR Diagnostics plugin [hawtio-integration#109](https://github.com/hawtio/hawtio-integration/pull/109)\n\n#### 2.12.0\n\n* Add Quartz plugin [#2642](https://github.com/hawtio/hawtio/issues/2642)\n* Support client certificate authentication for Apache Artemis [#2469](https://github.com/hawtio/hawtio/issues/2469)\n* Bug fix\n\n#### 2.11.1\n\n* Upgrade to Jetty 9.4.32.v20200930\n\n#### 2.11.0\n\n* Performance improvement for distributions other than Karaf by removing `RBACRestrictor` from their `web.xml`.\n* Bundle installed with the `hawtio` Karaf feature is renamed from `hawtio-war` to `hawtio-osgi`.\n* Add "remember me" checkbox to Login page\n* Add user name to logout menu item\n* Upgrade Hawtio components\n* Upgrade to Spring Boot 2.3.4.RELEASE / Spring Framework 5.2.9\n* Upgrade to Keycloak adapter 11.0.2\n* Bug fixes\n\n#### 2.10.2\n\n* Upgrade Hawtio components\n* Upgrade to AngularJS 1.8.0\n* Upgrade to Keycloak adapter 10.0.2\n* Bug fixes\n\n#### 2.10.1\n\n* Upgrade to Spring Boot 2.3.0 / Spring Framework 5.2.6\n* Add [springboot-authentication-jar](examples/springboot-authentication-jar) example to demonstrate how to customise `hawtconfig.json` with Spring Boot jar app.\n* Change property `hawtio.proxyWhitelist` to `hawtio.proxyAllowlist`\n\n#### 2.10.0\n\n* Add config property `hawtio.disableProxy`. With this property set to `true`,\n  you can disable `ProxyServlet` (`/hawtio/proxy/*`) completely. (Default: `false`)\n* Support custom styles and background image via `hawtconfig.json`.\n  See [branding-plugin](examples/branding-plugin) and [springboot-authentication](examples/springboot-authentication) examples for more details.\n* Bug fixes\n\n#### 2.9.1\n\n* Support Karaf 4.3.0\n\n#### 2.9.0\n\n* Support login page customisation through `hawtconfig.json`.\n  Now you can add custom description and links to the standard login page as follows:\n  \n      {\n        ...\n        "login": {\n          "description": "This is placeholder text only. Use this area to place any information or introductory message about your application that may be relevant to users.",\n          "links": [\n            {\n              "url": "#",\n              "text": "Terms of use"\n            },\n            {\n              "url": "#",\n              "text": "Help"\n            },\n            {\n              "url": "#",\n              "text": "Privacy policy"\n            }\n          ]\n        },\n        ...\n      }\n* `hawtconfig.json` is now customisable through a custom plugin.\n  See [branding-plugin](examples/branding-plugin) and [springboot-authentication](examples/springboot-authentication) examples.\n* Support Spring Security and Keycloak authentications on Spring Boot.\n  See [springboot-security](examples/springboot-security) and [springboot-keycloak](examples/springboot-keycloak) examples.\n* Upgrade to Spring Boot 2.2.2 / Spring Framework 5.2.2\n* Bug fixes\n\n#### 2.8.0\n\n* Dynamic custom plugin support [#2508](https://github.com/hawtio/hawtio/issues/2508)\n* Add custom plugin example [simple-plugin](examples/simple-plugin)\n\n#### 2.7.1\n\n* Bug fixes\n\n#### 2.7.0\n\n* Upgrade Camel to 2.24.1\n* Upgrade Hawtio components\n* Upgrade Jolokia to 1.6.2\n* Bug fixes\n\n#### 2.6.0\n\n* Fix memory leak with sidemenu visible in v2.5.0 [#2573](https://github.com/hawtio/hawtio/issues/2573)\n* Apply Pattern Fly 4 styles to masthead, sidebar, and login page\n* Upgrade to Spring Boot 2.1.4 / Spring Framework 5.1.6\n* Upgrade Hawtio components\n* Bug fixes\n\n#### 2.5.0\n\n* Add config property `hawtio.localAddressProbing`. Now you can disable local address probing\n  for proxy whitelist upon startup by setting this property to `false` (default: `true`).\n* Upgrade Camel to 2.23.1\n* Upgrade Spring Framework to 5.1.3\n* Upgrade Spring Boot to 2.1.2\n* Bug fixes\n\n#### 2.4.0\n\n* Support Java 11\n* Upgrade @hawtio/integration, @hawtio/jmx to 4.2.x\n* Upgrade Spring Boot to 2.1.1\n\n#### 2.3.0\n\n* Add support for Spring Boot 2\n  **Note:** Spring Boot 2 is now the default Spring Boot version for Hawtio dependency `hawtio-spring-boot`.\n  If Spring Boot 1 is required, use dependency `hawtio-spring-boot-1`.\n* Bug fixes\n\n#### 2.2.0\n\n* Upgrade Hawtio components to 4.1.x\n* Minor improvements\n* Bug fixes\n\n#### 2.1.0\n\n* Upgrade Hawtio components to 4.0.x\n* Upgrade AngularJS to 1.7.x\n* Improve security-releated HTTP headers handling\n* Bug fixes\n\n#### 2.0.3\n\n- #2488: Allow using SSL by specifying a keyStore and keyStorePass from embedded Hawtio\n\n#### 2.0.2\n\n* **Official Hawtio v2 GA version!**\n\n#### 2.0.0, 2.0.1\n\n* These are old versions that were mistakenly released years ago. Please don\'t use these versions!\n\n#### 2.0 Beta3 (To be released)\n\n* Added hawtio BOM\n\n#### 2.0 Beta2\n\n* Keycloak integration support\n* Bug fixes\n\n#### 2.0 Beta1\n\n* hawtio Maven plugin\n* Improved Spring Boot support\n* Log plugin\n* Diagnostics plugin\n* Karaf RBAC support\n* PatternFly-based login page and logo\n* Upgrade to Servlet API 3.1\n* Port fixes from hawtio v1\n* Bug fixes\n\n#### 2.0 M3\n\n* Switch from bower to yarn\n* Help plugin\n* Port fixes from hawtio v1\n\n#### 2.0 M2\n\n* Migrate to PatternFly\n* Bug fixes\n* Port fixes from hawtio v1\n\n#### 2.0 M1\n\n* Initial 2.0 milestone release\n\n-----\n\n#### 1.x\n\nSee: https://github.com/hawtio/hawtio/blob/1.x/CHANGES.md\n')}]),hawtioPluginLoader.addModule("hawtio-console-assembly-templates"),angular.module("hawtio-console-assembly-templates",[]).run(["$templateCache",function(e){e.put("app/src/head-partial.html",'<head>\n  <meta charset="UTF-8" />\n  <title>Hawtio</title>\n  <base href=\'/hawtio/\'>\n  <link id="favicon" rel="icon" type="image/x-icon" href="img/favicon.ico?v=1">\n\n  \x3c!-- build:libCss css/lib.css --\x3e\n  \x3c!-- datatables --\x3e\n  <link rel="stylesheet" href="../node_modules/datatables.net-dt/css/jquery.dataTables.css" />\n  \x3c!-- patternfly 3 --\x3e\n  <link rel="stylesheet" href="../node_modules/patternfly/dist/css/patternfly.css">\n  <link rel="stylesheet" href="../node_modules/patternfly/dist/css/patternfly-additions.css">\n  \x3c!-- patternfly 4 --\x3e\n  <link rel="stylesheet" href="../node_modules/@hawtio/core/dist/css/patternfly.css">\n  \x3c!-- angular-patternfly --\x3e\n  <link rel="stylesheet" href="../node_modules/angular-patternfly/dist/styles/angular-patternfly.css" />\n  \x3c!-- codemirror --\x3e\n  <link rel="stylesheet" href="../node_modules/codemirror/lib/codemirror.css" />\n  \x3c!-- angular-resizable --\x3e\n  <link rel="stylesheet" href="../node_modules/angular-resizable/src/angular-resizable.css" />\n  \x3c!-- endbuild --\x3e\n\n  \x3c!-- build:appCss css/app.css --\x3e\n  \x3c!-- @hawtio/core --\x3e\n  <link rel="stylesheet" href="../node_modules/@hawtio/core/dist/hawtio-core.css">\n  \x3c!-- @hawtio/integration --\x3e\n  <link rel="stylesheet" href="../node_modules/@hawtio/integration/dist/hawtio-integration.css" />\n  \x3c!-- @hawtio/console-assembly --\x3e\n  <link rel="stylesheet" href="../../temp/hawtio-console-assembly.css" />\n  \x3c!-- endbuild --\x3e\n\n  \x3c!-- branding --\x3e\n  <link id="branding" rel="stylesheet" type="text/css" href="" />\n\n  \x3c!-- build:libJs js/lib.js --\x3e\n  \x3c!-- jquery --\x3e\n  <script src="../node_modules/jquery/dist/jquery.js"><\/script>\n  <script src="jquery-ajax-prefilter.js"><\/script>\n  \x3c!-- datatables --\x3e\n  <script src="../node_modules/datatables.net/js/jquery.dataTables.js"><\/script>\n  <script src="../node_modules/datatables.net-select/js/dataTables.select.js"><\/script>\n  \x3c!-- bootstrap --\x3e\n  <script src="../node_modules/bootstrap/dist/js/bootstrap.js"><\/script>\n  \x3c!-- patternfly --\x3e\n  <script src="../node_modules/patternfly/dist/js/patternfly.js"><\/script>\n  \x3c!-- patternfly-bootstrap-treeview --\x3e\n  <script src="../node_modules/patternfly-bootstrap-treeview/dist/bootstrap-treeview.js"><\/script>\n  \x3c!-- angular --\x3e\n  <script src="../node_modules/angular/angular.js"><\/script>\n  \x3c!-- angular-animate --\x3e\n  <script src="../node_modules/angular-animate/angular-animate.js"><\/script>\n  \x3c!-- angular-sanitize --\x3e\n  <script src="../node_modules/angular-sanitize/angular-sanitize.js"><\/script>\n  \x3c!-- angular-route --\x3e\n  <script src="../node_modules/angular-route/angular-route.js"><\/script>\n  \x3c!-- angular-ui-bootstrap --\x3e\n  <script src="../node_modules/angular-ui-bootstrap/dist/ui-bootstrap-tpls.js"><\/script>\n  \x3c!-- angular-resizable --\x3e\n  <script src="../node_modules/angular-resizable/angular-resizable.min.js"><\/script>\n  \x3c!-- angular-animate --\x3e\n  <script src="../node_modules/angular-animate/angular-animate.js"><\/script>\n  \x3c!-- angular-drag-and-drop-lists --\x3e\n  <script src="../node_modules/angular-drag-and-drop-lists/angular-drag-and-drop-lists.js"><\/script>\n  \x3c!-- angular-datatables --\x3e\n  <script src="../node_modules/angularjs-datatables/dist/angular-datatables.js"><\/script>\n  <script src="../node_modules/angularjs-datatables/dist/plugins/select/angular-datatables.select.js"><\/script>\n  \x3c!-- angular-cookies --\x3e\n  <script src="../node_modules/angular-cookies/angular-cookies.js"><\/script>\n  \x3c!-- angular-patternfly --\x3e\n  <script src="../node_modules/angular-patternfly/dist/angular-patternfly.js"><\/script>\n  \x3c!-- angular-idle --\x3e\n  <script src="../node_modules/ng-idle/angular-idle.js"><\/script>\n  \x3c!-- c3, d3 --\x3e\n  <script src="../node_modules/c3/c3.js"><\/script>\n  <script src="../node_modules/d3/d3.js"><\/script>\n  \x3c!-- lodash --\x3e\n  <script src="../node_modules/lodash/lodash.js"><\/script>\n  \x3c!-- urijs --\x3e\n  <script src="../node_modules/urijs/src/URI.js"><\/script>\n  \x3c!-- js-logger --\x3e\n  <script src="../node_modules/js-logger/src/logger.js"><\/script>\n  \x3c!-- clipboard --\x3e\n  <script src="../node_modules/clipboard/dist/clipboard.js"><\/script>\n  \x3c!-- marked --\x3e\n  <script src="../node_modules/marked/lib/marked.js"><\/script>\n  \x3c!-- js-beautify --\x3e\n  <script src="../node_modules/js-beautify/js/lib/beautify.js"><\/script>\n  <script src="../node_modules/js-beautify/js/lib/beautify-html.js"><\/script>\n  \x3c!-- codemirror --\x3e\n  <script src="../node_modules/codemirror/lib/codemirror.js"><\/script>\n  <script src="../node_modules/codemirror/addon/edit/closetag.js"><\/script>\n  <script src="../node_modules/codemirror/addon/edit/continuelist.js"><\/script>\n  <script src="../node_modules/codemirror/addon/edit/matchbrackets.js"><\/script>\n  <script src="../node_modules/codemirror/addon/fold/foldcode.js"><\/script>\n  <script src="../node_modules/codemirror/addon/fold/brace-fold.js"><\/script>\n  <script src="../node_modules/codemirror/addon/fold/xml-fold.js"><\/script>\n  <script src="../node_modules/codemirror/mode/javascript/javascript.js"><\/script>\n  <script src="../node_modules/codemirror/mode/xml/xml.js"><\/script>\n  <script src="../node_modules/codemirror/mode/css/css.js"><\/script>\n  <script src="../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"><\/script>\n  <script src="../node_modules/codemirror/mode/markdown/markdown.js"><\/script>\n  <script src="../node_modules/codemirror/mode/diff/diff.js"><\/script>\n  <script src="../node_modules/codemirror/mode/properties/properties.js"><\/script>\n  <script src="../node_modules/codemirror/mode/clike/clike.js"><\/script>\n  <script src="../node_modules/codemirror/mode/yaml/yaml.js"><\/script>\n  \x3c!-- graphlib, dagre --\x3e\n  <script src="../node_modules/graphlib/dist/graphlib.core.js"><\/script>\n  <script src="../node_modules/dagre-layout/dist/dagre-layout.js"><\/script>\n  \x3c!-- ng-infinite-scroll --\x3e\n  <script src="../node_modules/ng-infinite-scroll/build/ng-infinite-scroll.js"><\/script>\n  \x3c!-- cubism --\x3e\n  <script src="../node_modules/cubism/cubism.v1.js"><\/script>\n  \x3c!-- jolokia --\x3e\n  <script src="../node_modules/jolokia.js/jolokia.js"><\/script>\n  <script src="../node_modules/jolokia.js/jolokia-simple.js"><\/script>\n  <script src="../node_modules/jolokia.js/jolokia-cubism.js"><\/script>\n  \x3c!-- endbuild --\x3e\n\n  \x3c!-- build:appJs js/app.js --\x3e\n  \x3c!-- @hawtio/core --\x3e\n  <script src="../node_modules/@hawtio/core/dist/hawtio-core.js"><\/script>\n  \x3c!-- @hawtio/oauth --\x3e\n  <script src="../node_modules/@hawtio/oauth/dist/hawtio-oauth.js"><\/script>\n  \x3c!-- @hawtio/integration --\x3e\n  <script src="../node_modules/@hawtio/integration/dist/hawtio-integration.js"><\/script>\n  \x3c!-- @hawtio/console-assembly --\x3e\n  <script src="../../temp/hawtio-console-assembly.js"><\/script>\n  \x3c!-- endbuild --\x3e\n</head>\n'),e.put("app/src/login/login.component.html",'<div class="pf-c-background-image">\n  <svg xmlns="http://www.w3.org/2000/svg" class="pf-c-background-image__filter" width="0" height="0">\n    <filter id="image_overlay">\n      <feColorMatrix type="matrix" values="1 0 0 0 0\n              1 0 0 0 0\n              1 0 0 0 0\n              0 0 0 1 0" />\n      <feComponentTransfer color-interpolation-filters="sRGB" result="duotone">\n        <feFuncR type="table" tableValues="0.086274509803922 0.43921568627451"></feFuncR>\n        <feFuncG type="table" tableValues="0.086274509803922 0.43921568627451"></feFuncG>\n        <feFuncB type="table" tableValues="0.086274509803922 0.43921568627451"></feFuncB>\n        <feFuncA type="table" tableValues="0 1"></feFuncA>\n      </feComponentTransfer>\n    </filter>\n  </svg>\n</div>\n<div class="pf-c-login">\n  <div class="pf-c-login__container">\n    <header class="pf-c-login__header">\n      <img class="pf-c-brand" ng-src="{{$ctrl.branding.appLogoUrl}}" alt="{{$ctrl.branding.appName}}">\n      <span>{{$ctrl.branding.appType}}</span>\n    </header>\n    <main class="pf-c-login__main">\n      <header class="pf-c-login__main-header">\n        <h1 class="pf-c-title pf-m-3xl">\n          Log in to your account\n        </h1>\n      </header>\n      <div class="pf-c-login__main-body">\n        <form novalidate class="pf-c-form" ng-submit="$ctrl.doLogin()">\n          <p class="pf-c-form__helper-text pf-m-error" ng-class="{\'pf-m-hidden\': !$ctrl.wrongPassword}">\n            <i class="fa fa-exclamation-circle" aria-hidden="true"></i>\n            &nbsp;Invalid login credentials\n          </p>\n          <div class="pf-c-form__group">\n            <label class="pf-c-form__label" for="username">\n              Username\n            </label>\n            <input id="username" name="username" type="text" class="pf-c-form-control"\n              ng-model="$ctrl.entity.username" aria-invalid="{{$ctrl.wrongPassword}}" autocomplete="username"\n              required autofocus></input>\n          </div>\n          <div class="pf-c-form__group">\n            <label class="pf-c-form__label" for="password">\n              Password\n            </label>\n            <input id="password" name="password" type="password" class="pf-c-form-control"\n              ng-model="$ctrl.entity.password" aria-invalid="{{$ctrl.wrongPassword}}" autocomplete="current-password"\n              required></input>\n          </div>\n          <div class="pf-c-form__group">\n            <div class="pf-c-check">\n              <input id="login-rememberme" name="login-rememberme" type="checkbox" class="pf-c-check__input"\n                ng-model="$ctrl.rememberMe" />\n              <label class="pf-c-check__label" for="login-rememberme">\n                Remember me\n              </label>\n            </div>\n          </div>\n          <div class="pf-c-form__group pf-m-action">\n            <button type="submit" class="pf-c-button pf-m-primary pf-m-block">\n              Log in\n            </button>\n          </div>\n        </form>\n      </div>\n    </main>\n    <footer class="pf-c-login__footer">\n      <p>{{$ctrl.login.description}}</p>\n      <ul class="pf-c-list pf-m-inline">\n        <li ng-repeat="link in $ctrl.login.links">\n          <a href="{{link.url}}">\n            {{link.text}}\n          </a>\n        </li>\n      </ul>\n    </footer>\n  </div>\n</div>\n')}]),hawtioPluginLoader.addModule("hawtio-console-assembly-templates");